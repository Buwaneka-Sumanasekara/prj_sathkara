{"version":3,"sources":["_Views/styles/img/logo.jpg","_Views/styles/img/boc.jpg","_Views/styles/img/bankicon.jpg","constants/firebase.js","redux/auth/action.js","_Views/base/App.js","_Views/containers/Login/LoginView.js","_Views/containers/Login/LoginContainer.js","_Views/containers/Test/TestView.js","_Views/containers/Test/TestContainer.js","redux/donation/action.js","_Views/containers/Dashboard/DashboardView.js","_Views/containers/Dashboard/DashboardContainer.js","redux/event/action.js","redux/app/action.js","_Views/containers/Donate/DonateView.js","_Views/containers/Donate/DonateContainer.js","routes/Routes.js","redux/auth/reducer.js","redux/app/reducer.js","redux/event/reducer.js","redux/donation/reducer.js","redux/index.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","console","log","concat","JSON","stringify","firebase","apps","length","initializeApp","auth","database","storage","createUser","user","obj","id","fname","lname","mobile","email","saveUserToDatabase","dispatch","ref","child","set","error","status","msg","type","isLoading","message","msg_type","msg_txt","setUserToRedux","uid","once","snap","val","authCheck","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","onAuthStateChanged","authUser","stop","this","_x3","apply","arguments","SCREEN_LOGOUT","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_callee","_context","handleItemClick","e","_ref2","name","setState","activeItem","authLogout","context","router","history","push","_renderMenues","state","react_default","createElement","Menu","secondary","icon","Item","header","onClick","Icon","position","nextProps","nextState","authLoading","isAuthenticated","reactstrap_es","sm","Segment","Dimmer","active","inverted","Loader","size","children","Component","contextTypes","PropTypes","object","mapDispatchToProps","authActions","_ref4","_callee4","_context4","signOut","then","_x4","connect","isAuthChecking","SCREEN_LOGIN","SCREEN_REGISTER","MSG_SIGNUP_SUCCESS","MSG_SIGNUP_ERROR","MSG_LOGIN_SUCCESS","MSG_LOGIN_ERROR","LognViewContainer","match","params","screen","clearForm","typ","reg_fname","reg_lname","reg_mobile","reg_email","reg_pass","reg_cpass","redirectToHome","validateReg","error_type","_setMessage","handleRegister","_callee2","_context2","registerUser","validateLogin","login_email","login_pass","handleLogin","loginUser","onchangetext","para","value","onchangetext_login","changeScreen","newscreen","_x","render","md","offset","Image","src","imgLogo","wrapped","renderLogin","renderSignup","showError","showSuccess","Message","hidden","content","positive","Form","loading","onSubmit","Field","placeholder","onChange","evt","target","Button","color","vertical","Group","Label","Or","text","alertVisible","isCancelled","undefined","methodtype","time","_this2","setTimeout","window","scrollTo","_ref","createUserWithEmailAndPassword","pass","info","usermod","catch","signInWithEmailAndPassword","_x2","LoginView","TestViewContainer","handleChange","event","clickButton","multiplyValue","url","mymarks","app","TestView","_","require","getDonationImgId","s4","Math","floor","random","toString","substring","getDonationObj","objnw","eventid","parseFloat","amt","ServerValue","TIMESTAMP","imgurl","updateDonation","trnid","donref","upobj","DashboardViewContainer","loadCurrentEvent","updateAppLiveInfo","updateSelfDonations","liveEvent","handleDonationPress","CurEvent","Header","place","date","Statistic","Value","number_format_default","displayType","thousandSeparator","prefix","textAlign","liveinfo","as","labelPosition","basic","pointing","currentdonation","orderByChild","equalTo","on","snapshot","forEach","data","donations","amount","ar","toArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","don","err","return","donation","DashboardView","MSG_CREATE_SUCCESS","MSG_CREATE_ERROR","DonateViewContainer","updateSelfDonationsList","donation_save_file","donation_save_amount","makeDonation","saveDonation","handleselectedFile","files","panes","menuItem","renderDonation","renderPendingDonation","Tab","menu","Pane","attached","Table","celled","Row","HeaderCell","Body","currentdonations","map","i","date1","Date","crdate","key","Cell","toLocaleString","warning","negative","success","isLoading_save","List","horizontal","avatar","BOCLogo","Content","bankIcon","Input","label","accept","onValueChange","values","formattedValue","Divider","primary","saveError","newdonref","postID","genImgName","file","fileName","filetyp","metadata","storageRef","uploadTask","img","contentType","split","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","getDownloadURL","downloadURL","DonateView","Routes","BrowserRouter","Switch","Route","exact","path","component","Login","base_App","Dashboard","Donation","Test","initialState","combineReducers","action","objectSpread","store","reduxLogger","createLogger","predicate","getState","middlewares","thunk","toConsumableArray","createStore","rootReducer","compose","applyMiddleware","configureStore","ReactDOM","es","routes_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.4afe4ab0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d489875c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/boc.5f02b964.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bankicon.b85b649a.jpg\";","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst prodConfig = {\n  apiKey: \"AIzaSyCWfZqvMjAGIlDN6OrwqyK0kcyj1FyOaY8\",\n  authDomain: \"sathkara-bb902.firebaseapp.com\",\n  databaseURL: \"https://sathkara-bb902.firebaseio.com\",\n  projectId: \"sathkara-bb902\",\n  storageBucket: \"sathkara-bb902.appspot.com\",\n  messagingSenderId: \"937169849327\"\n};\n\nconst devConfig = {\n  apiKey: \"AIzaSyCWfZqvMjAGIlDN6OrwqyK0kcyj1FyOaY8\",\n    authDomain: \"sathkara-bb902.firebaseapp.com\",\n    databaseURL: \"https://sathkara-bb902.firebaseio.com\",\n    projectId: \"sathkara-bb902\",\n    storageBucket: \"sathkara-bb902.appspot.com\",\n    messagingSenderId: \"937169849327\"\n};\n\nconst config = process.env.NODE_ENV === 'production'\n  ? prodConfig\n  : devConfig;\n\nconsole.log(`System init as #${JSON.stringify(config)}#`)\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst auth = firebase.auth();\nconst database = firebase.database();\nconst storage = firebase.storage();\n\n\nexport {\n  firebase,\n  auth,\n  database,\n  storage\n};","import { auth, database } from '../../constants/firebase';\r\n\r\nfunction createUser(user) {\r\n  let obj = {};\r\n  obj['id'] = user.id;\r\n  obj['fname'] = user.fname;\r\n  obj['lname'] = user.lname;\r\n  obj['mobile'] = user.mobile;\r\n  obj['email'] = user.email;\r\n  obj['user_type'] = 0;\r\n  return obj;\r\n}\r\n\r\nfunction saveUserToDatabase(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'SIGNUP';\r\n      msg = error;\r\n    } else {\r\n      status = 'SIGNUP_S';\r\n      msg = 'your registerd successfully!,Please sign-in ..';\r\n\r\n    }\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({\r\n      type: 'AUTH_REGISTER',\r\n      message: { msg_type: status, msg_txt: msg }\r\n    });\r\n  });\r\n}\r\n\r\nfunction setUserToRedux(dispatch, user) {\r\n  console.log(`${JSON.stringify(user.uid)}`);\r\n  let userref = database.ref(`user/${user.uid}`);\r\n  //userref.child(user.uid)\r\n  userref.once(\"value\", function (snap) {\r\n    console.log(snap);\r\n    dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n    dispatch({ type: 'AUTH_SUCCESS', user: snap.val() });\r\n    \r\n  });\r\n}\r\n\r\n\r\nexport function registerUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_REGISTER', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.createUserWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser.user.uid);\r\n        let usermod = user;\r\n        usermod['id'] = authUser.user.uid;\r\n        saveUserToDatabase(dispatch, createUser(usermod));\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_REGISTER', message: { msg_type: 'SIGNUP', msg_txt: error.message } });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function loginUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.signInWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN', msg_txt: error.message } });\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport function authCheck() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n    auth.onAuthStateChanged(authUser => {\r\n\r\n      if (authUser) {\r\n        setUserToRedux(dispatch, authUser)\r\n      } else {\r\n       // dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n        dispatch({ type: 'AUTH_FAILD' });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function authLogout() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_LOGOUT_START', isLoading: true });\r\n    \r\n    auth.signOut().then(function () {\r\n    \r\n        dispatch({ type: 'AUTH_FAILD' });\r\n        dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/css/theme.min.css';\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Dimmer, Loader, Image, Segment, Menu, Icon } from 'semantic-ui-react';\n//Actions\nimport * as authActions from '../../redux/auth/action';\n\n\n\nlet SCREEN_LOGOUT = 'Logout';\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super();\n    this.state = {\n      activeItem: \"\",\n    }\n  }\n\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n  componentDidMount = async () => {\n    await this.props.authCheck()\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\n      if (nextProps.isAuthenticated === false) {\n        this.context.router.history.push(`/Auth/Login`);\n      }\n\n    }\n\n\n    return true;\n  }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n    if (name === SCREEN_LOGOUT) {\n      this.props.authLogout();\n    }else if(name==='Home'){\n      this.context.router.history.push(`/`); \n    } \n\n  }\n\n\n  render() {\n\n\n    return (\n      <Container>\n        <Row>\n          {this.props.authLoading && (\n            <Col sm={12}>\n              <Segment>\n\n                <br />\n\n                <Dimmer active inverted>\n                  <Loader size='large'>Loading</Loader>\n                </Dimmer>\n\n                <br />\n              </Segment>\n            </Col>\n          )}\n          {this.props.authLoading === false && (\n            <Col sm={12}>\n              {this._renderMenues()}\n              {this.props.children}\n            </Col>\n          )}\n\n        </Row>\n      </Container>\n    );\n  }\n\n  _renderMenues = () => {\n    const { activeItem } = this.state\n    return (\n      <Menu secondary  icon='labeled'>\n        <Menu.Item name='සත්කාර' header />\n        <Menu.Item\n            name={\"Home\"}\n            onClick={this.handleItemClick}\n          >\n          <Icon name='home' />\n          Home\n          </Menu.Item>\n\n        <Menu.Menu position='right'>\n          <Menu.Item\n            name={SCREEN_LOGOUT}\n            onClick={this.handleItemClick}\n          ><Icon name='window close' />\n          Logout\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n\n\n\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  authLoading: state.auth.isAuthChecking\n});\nconst mapDispatchToProps = {\n  authCheck: authActions.authCheck,\n  authLogout: authActions.authLogout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Image, Label, Button, Dimmer, Loader, Form, Segment, Message } from 'semantic-ui-react';\nimport imgLogo from '../../styles/img/logo.jpg';\n\nconst SCREEN_LOGIN = 'Login';\nconst SCREEN_REGISTER = 'Register';\nconst SCREEN_VERIFY = 'Verify';\n\nconst MSG_SIGNUP_SUCCESS = 'SIGNUP_S';\nconst MSG_SIGNUP_ERROR = 'SIGNUP';\nconst MSG_LOGIN_SUCCESS = 'LOGIN_S';\nconst MSG_LOGIN_ERROR = 'LOGIN';\n\nclass LognViewContainer extends Component {\n\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      screen: SCREEN_LOGIN,\n      alertVisible: true,\n      error: '',\n      error_type: '',\n      reg_fname: '',\n      reg_lname: '',\n      reg_mobile: '',\n      reg_email: \"\",\n      reg_pass: \"\",\n      reg_cpass: \"\",\n      login_email: \"\",\n      login_pass: \"\"\n    }\n  }\n\n  componentDidMount = async () => {\n    console.log(`screen:${this.props.match.params.screen}`);\n     await this.props.authCheck();  \n  }\n\n  componentWillUnmount() {\n    this.isCancelled = true;\n}\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.authLoading===true && nextProps.authLoading===false ){\n      if(nextProps.isAuthenticated===false){\n        if (this.props.match.params.screen === undefined) {\n          this.changeScreen(SCREEN_LOGIN);\n        } else {\n          this.changeScreen(this.props.match.params.screen);\n        }\n      }else{\n        this.redirectToHome();\n      }\n      \n    }\n    else if (this.props.message.msg_type !== nextProps.message.msg_type) {\n      this._setMessage(nextProps.message.msg_type, nextProps.message.msg_txt, 3000);\n    }\n    return true;\n  }\n\n\n\n\n  /*ERROR HANDLING*/\n\n  _setMessage(methodtype, msg, time) {\n    //console.log(`error set:${methodtype},${msg}`)\n    if (methodtype === MSG_LOGIN_SUCCESS) {\n      this.redirectToHome();\n    } else {\n      this.setState({ error_type: methodtype, error: msg });\n      if (time === undefined) {\n        setTimeout(() => {\n          this.setState({ error_type: '', error: '' })\n        }, 2000)\n      } else {\n        setTimeout(() => {\n          this.setState({ error_type: '', error: '' })\n        }, time)\n      }\n\n      this.clearForm(methodtype);\n      window.scrollTo(0, 0);\n    }\n\n  }\n  /*END:ERROR HANDLING*/\n\n  clearForm = (typ) => {\n    if (typ === MSG_SIGNUP_SUCCESS) {\n      this.setState({\n        reg_fname: '',\n        reg_lname: '',\n        reg_mobile: '',\n        reg_email: \"\",\n        reg_pass: \"\",\n        reg_cpass: \"\",\n      })\n    }\n  }\n\n  redirectToHome = () => {\n    this.context.router.history.push(`/`);\n  }\n\n  validateReg = () => {\n    this.setState({ error_type: '', error: '' });\n    let state = true;\n    let msg = \"\";\n\n    if (this.state.reg_fname === '') {\n      state = false;\n      msg = 'Please enter your first name';\n    } else if (this.state.reg_lname === '') {\n      state = false;\n      msg = 'Please enter your Last name';\n    } else if (this.state.reg_mobile === '') {\n      state = false;\n      msg = 'Please enter your mobile no';\n    } else if (this.state.reg_email === '') {\n      state = false;\n      msg = 'Please enter your email';\n    } else if (this.state.reg_pass === '') {\n      state = false;\n      msg = 'Please enter your password';\n    } else if (this.state.reg_pass !== this.state.reg_cpass) {\n      state = false;\n      msg = 'passwords should be matched!';\n    }\n\n    if (state === false) {\n      this._setMessage(MSG_SIGNUP_ERROR, msg, 3000);\n    }\n    return state;\n  }\n  handleRegister = async () => {\n    if (this.validateReg()) {\n      let user = {};\n      user['fname'] = this.state.reg_fname;\n      user['lname'] = this.state.reg_lname;\n      user['mobile'] = this.state.reg_mobile;\n      user['email'] = this.state.reg_email;\n      user['pass'] = this.state.reg_pass;\n      await this.props.registerUser(user);\n    }\n  }\n\n  validateLogin = () => {\n    this.setState({ error_type: '', error: '' });\n    let state = true;\n    let msg = \"\";\n\n    if (this.state.login_email === '') {\n      state = false;\n      msg = 'Please enter your email';\n    } else if (this.state.login_pass === '') {\n      state = false;\n      msg = 'Please enter your password';\n    }\n\n    if (state === false) {\n      this._setMessage(MSG_LOGIN_ERROR, msg, 3000);\n    }\n    return state;\n  }\n  handleLogin = async () => {\n    if (this.validateLogin()) {\n      let user = {};\n      user['email'] = this.state.login_email;\n      user['pass'] = this.state.login_pass;\n      await this.props.loginUser(user);\n    }\n  }\n\n  onchangetext = (para, value) => {\n    if (para === 'reg_fname') {\n      this.setState({ reg_fname: value });\n    } else if (para === 'reg_lname') {\n      this.setState({ reg_lname: value });\n    } else if (para === 'reg_mobile') {\n      this.setState({ reg_mobile: value });\n    } else if (para === 'reg_email') {\n      this.setState({ reg_email: value });\n    } else if (para === 'reg_pass') {\n      this.setState({ reg_pass: value });\n    } else if (para === 'reg_cpass') {\n      this.setState({ reg_cpass: value });\n    }\n  }\n  onchangetext_login = (para, value) => {\n    if (para === 'login_email') {\n      this.setState({ login_email: value });\n    } else if (para === 'login_pass') {\n      this.setState({ login_pass: value });\n    }\n  }\n\n  changeScreen = async (newscreen) => {\n\n    this.setState({\n      screen: newscreen\n    }, () => {\n      this.context.router.history.push(`/Auth/${newscreen}`);\n    });\n\n\n  }\n\n\n\n  /*RENDER FUNCTIONS*/\n  render = () => {\n    if (this.props.authLoading) {\n      return (\n        <Container>\n          <Row>\n            <Col sm={12}>\n              <Segment>\n\n                <br />\n\n                <Dimmer active inverted>\n                  <Loader size='large'>Loading</Loader>\n                </Dimmer>\n\n                <br />\n              </Segment>\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n\n    return (\n      <Container>\n\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <Row>\n              <Col md={{ size: 4, offset: 4 }}>\n                <Image src={imgLogo} size='small' wrapped />\n              </Col>\n            </Row>\n\n          </Col>\n        </Row>\n\n        <Row>\n\n\n          {this.state.screen === SCREEN_LOGIN && (\n            this.renderLogin()\n          )}\n          {this.state.screen === SCREEN_REGISTER && (\n            this.renderSignup()\n          )}\n\n\n        </Row>\n      </Container>\n    );\n  };\n\n  renderLogin = () => {\n    let showError = (this.state.error_type === MSG_LOGIN_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_LOGIN_SUCCESS && this.state.error !== '');\n    return (\n      <Col md={{ size: 4, offset: 4 }}>\n        <Message\n          hidden={!showError}\n          error\n          content={this.state.error}\n        />\n        <Message\n          hidden={!showSuccess}\n          positive\n          content={this.state.error}\n        />\n        <Form loading={this.props.isLoading} onSubmit={() => this.handleLogin()}>\n\n          <Form.Field>\n            <label>Email</label>\n            <input type=\"email\" placeholder='abc@example.com' value={this.state.login_email} onChange={(evt) => this.onchangetext_login('login_email', evt.target.value)} />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input type=\"password\" value={this.state.login_pass} onChange={(evt) => this.onchangetext_login('login_pass', evt.target.value)} />\n          </Form.Field>\n          <Button color='blue'>Login</Button>\n        </Form>\n        <Segment vertical></Segment>\n        <br />\n        <Button.Group>\n          <Label>If your not registerd yet </Label>\n          <Button.Or text='->' />\n          <Button color='teal' onClick={() => this.changeScreen(SCREEN_REGISTER)}>Sign up here</Button>\n        </Button.Group>\n\n      </Col>\n    );\n  }\n\n  renderSignup = () => {\n    let showError = (this.state.error_type === MSG_SIGNUP_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_SIGNUP_SUCCESS && this.state.error !== '');\n\n    return (\n      <Col md={{ size: 6, offset: 3 }}>\n        <Message\n          hidden={!showError}\n          error\n          content={this.state.error}\n        />\n        <Message\n          hidden={!showSuccess}\n          positive\n          content={this.state.error}\n        />\n        <Form loading={this.props.isLoading} onSubmit={() => this.handleRegister()}>\n          <Row>\n            <Col sm={12} md={6}>\n              <Form.Field>\n                <label>First Name</label>\n                <input placeholder='First Name' value={this.state.reg_fname} onChange={(evt) => this.onchangetext('reg_fname', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Last Name</label>\n                <input placeholder='Last Name' value={this.state.reg_lname} onChange={(evt) => this.onchangetext('reg_lname', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Mobile No</label>\n                <input placeholder='+94770000000' value={this.state.reg_mobile} onChange={(evt) => this.onchangetext('reg_mobile', evt.target.value)} />\n              </Form.Field>\n\n            </Col>\n            <Col sm={12} md={6}>\n              <Form.Field>\n                <label>Email</label>\n                <input placeholder='abc@example.com' value={this.state.reg_email} onChange={(evt) => this.onchangetext('reg_email', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input type='password' value={this.state.reg_pass} onChange={(evt) => this.onchangetext('reg_pass', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Confirm Password</label>\n                <input type='password' value={this.state.reg_cpass} onChange={(evt) => this.onchangetext('reg_cpass', evt.target.value)} />\n              </Form.Field>\n            </Col>\n          </Row><br />\n          <Row>\n            <Col sm={12}>\n              <Button type='submit' positive >Register</Button>\n            </Col>\n          </Row>\n\n        </Form>\n        <Row>\n          <Col sm={12}>\n            <Segment vertical></Segment>\n            <br />\n            <Label>If your already registered ?\n        <Button onClick={() => this.changeScreen(SCREEN_LOGIN)}> Sign-in here</Button> </Label>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n\n\n}\n\n\n/* Export Component ==================================================================== */\nexport default LognViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n// The component we're mapping to\nimport LoginView from './LoginView';\n\n//Actions\nimport * as authActions from '../../../redux/auth/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    authLoading: state.auth.isAuthChecking,\n    isLoading:state.auth.isLoading,\n    message:state.auth.message\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n   registerUser:authActions.registerUser,\n   loginUser:authActions.loginUser,\n   authCheck: authActions.authCheck\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\n","\nimport React, { Component } from 'react';\n\n\nclass TestViewContainer extends Component {\n  \n  constructor(props){\n    super();\n    this.state ={\n      value:0\n    }\n  }\n\n  componentDidMount = async () => {\n    \n   \n  }\n\n  \n  shouldComponentUpdate(nextProps, nextState) {\n\n    return true;\n  }\n\n  handleChange = (event) => {\n    this.setState({value: event.target.value});\n  }\n   \n  clickButton = () =>{\n    this.props.multiplyValue(this.state.value);\n  }\n\n\n  render = () => {\n     return (\n    <div>\n         <h1>{`TestView URL:${this.props.match.url} `}</h1>\n     \n        <h2>{`Redux State: ${this.props.mymarks}`}</h2>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <button onClick={this.clickButton}>Add</button>\n\n\n      </div>\n     );\n  };\n\n \n\n}\n\n\n/* Export Component ==================================================================== */\nexport default TestViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n\n\n\n// The component we're mapping to\nimport TestView from './TestView';\n\n//Actions\nimport * as AppActions from '../../../redux/app/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n  mymarks:state.app.value\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n  \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestView);\n","import { database, storage,firebase } from '../../constants/firebase';\r\nvar _ = require('lodash');\r\n\r\nfunction getDonationImgId() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4() + '' + s4() + '' + s4() + '' + s4() + '' + s4() + s4() + s4();\r\n}\r\n\r\nfunction getDonationObj(obj) {\r\n  let objnw = {};\r\n  objnw['eventid'] = obj.eventid;\r\n  objnw['uid'] = obj.uid;\r\n  objnw['amount'] = parseFloat(obj.amt);\r\n  objnw['donation-state'] = 0; //0=pending,1=aproved,2=cancelled\r\n  objnw['crdate']=firebase.database.ServerValue.TIMESTAMP;\r\n\r\n  if (obj.id !== undefined) {\r\n    objnw['id'] = obj.id;\r\n    objnw['imgurl'] = obj.imgurl;\r\n  }\r\n\r\n\r\n  return objnw;\r\n}\r\n\r\nfunction updateDonation(dispatch,trnid,imgurl,obj){\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${trnid}`);\r\n  let upobj=obj;\r\n  upobj['id']=trnid;\r\n  upobj['imgurl']=imgurl;\r\n  \r\n\r\n  \r\n\r\n  donref.set(getDonationObj(upobj));\r\n  dispatch({ type: 'DONATION_LOADING', error: '', isLoading: false });\r\n}\r\n\r\nexport function saveDonation(obj) {\r\n\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: true });\r\n\r\n      let donref = database.ref(`donations/${obj.eventid}/${obj.uid}`);\r\n      var newdonref = donref.push(getDonationObj(obj));\r\n      var postID = newdonref.key;\r\n  \r\n      if (obj.img !== null) {\r\n        let genImgName = getDonationImgId();\r\n        let file = obj.img;\r\n        let fileName = obj.img.name;\r\n        let filetyp = obj.img.type;\r\n  \r\n        var metadata = {\r\n          contentType:filetyp\r\n        };\r\n  \r\n        console.log(`File name:${genImgName}.${filetyp}`)\r\n        var storageRef = storage.ref();\r\n  \r\n        var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n        // Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n          function (snapshot) {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n              case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                console.log('Upload is paused');\r\n                break;\r\n              case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                console.log('Upload is running');\r\n                break;\r\n            }\r\n          }, function (error) {\r\n  \r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n              case 'storage/unauthorized':\r\n                // User doesn't have permission to access the object\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Unothorized', isLoading: false });\r\n                break;\r\n  \r\n              case 'storage/canceled':\r\n                // User canceled the upload\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Cancel', isLoading: false });\r\n                break;\r\n              case 'storage/unknown':\r\n                // Unknown error occurred, inspect error.serverResponse;\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Unkonwn', isLoading: false });\r\n                break;\r\n            }\r\n          }, function () {\r\n            // Upload completed successfully, now we can get the download URL\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n              console.log('File available at', downloadURL);\r\n              updateDonation(dispatch,postID,downloadURL,obj)\r\n            });\r\n          });\r\n  \r\n  \r\n      }else{\r\n        //no image\r\n        updateDonation(dispatch,postID,'',obj);\r\n      }\r\n  \r\n    } catch (error) {\r\n      dispatch({ type: 'DONATION_LOADING', error:error.message, isLoading: false });\r\n    }\r\n   \r\n  }\r\n}\r\n\r\n\r\nexport function updateSelfDonations (eventid,uid)  {\r\n  return async dispatch => {\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function(donations) {\r\n      let amount=0;\r\n      let ar=_.toArray(donations.val())\r\n      console.log(ar);\r\n      for (let don of ar) {\r\n         if(don['donation-state']!==2){//not cancelled\r\n          amount+=don.amount;\r\n         }\r\n      }\r\n      dispatch({ type: 'DONATION_UPDATE_USER_TOTAL', currentdonation:amount });\r\n\r\n   });\r\n    \r\n  }\r\n}\r\n\r\nexport function updateSelfDonationsList (eventid,uid)  {\r\n  return async dispatch => {\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function(donations) {\r\n      let amount=0;\r\n      let ar=_.toArray(donations.val())\r\n      \r\n      dispatch({ type: 'DONATION_UPDATE_USER_DON', currentdonations:ar });\r\n\r\n   });\r\n    \r\n  }\r\n}","\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button, Header, Icon, Segment, Statistic, Label } from 'semantic-ui-react';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from \"prop-types\";\n\nclass DashboardViewContainer extends Component {\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n\n\n  componentDidMount = async () => {\n    await this.props.loadCurrentEvent();\n    this.props.updateAppLiveInfo();\n    this.props.updateSelfDonations(this.props.liveEvent.id,this.props.uid);\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    return true;\n  }\n\n  handleDonationPress = () => {\n    this.context.router.history.push(`/donations`);\n  }\n\n\n\n  render = () => {\n    let CurEvent = this.props.liveEvent;\n    return (\n      <Row>\n        <Col sm={12}>\n          <Row>\n            <Col sm={12}>\n              <Segment placeholder>\n                <Header icon>\n                  <Row>\n                    <Col sm={12} md={3}>\n                      <Icon name='home' color='grey' />\n                      {`${CurEvent.place}`}\n                    </Col>\n                    <Col sm={12} md={6}>\n                      <Icon name='like' color='red' />\n                      {`${CurEvent.name}`}\n                    </Col>\n                    <Col sm={12} md={3}>\n                      <Icon name='calendar check outline' color='grey' />\n                      {`${CurEvent.date}`}\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={12}>\n                      <br />\n                      <Segment >\n                        <Row>\n                          <Col sm={12} md={3}>\n                            <Statistic color='red' size='small'>\n                              <Statistic.Value>{CurEvent['total-contributors']}</Statistic.Value>\n                              <Statistic.Label>Contributors</Statistic.Label>\n                            </Statistic>\n                          </Col>\n                          <Col sm={12} md={3}>\n                            <Statistic color='red' size='small'>\n                              <Statistic.Value><NumberFormat value={CurEvent['total-amount']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n                              <Statistic.Label>Target Amount</Statistic.Label>\n                            </Statistic>\n                          </Col>\n                          <Col sm={12} md={3}>\n                            <Statistic color='red' size='small'>\n                              <Statistic.Value><NumberFormat value={CurEvent['total-expect']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n                              <Statistic.Label>Current Expect</Statistic.Label>\n                            </Statistic>\n                          </Col>\n                          <Col sm={12} md={3}>\n                            <Statistic color='red' size='small'>\n                              <Statistic.Value><NumberFormat value={CurEvent['total-recived']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n                              <Statistic.Label>Received</Statistic.Label>\n                            </Statistic>\n                          </Col>\n                        </Row>\n\n                      </Segment>\n                    </Col>\n\n                  </Row>\n                </Header>\n              </Segment>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col sm={12} md={4} >\n              <Segment textAlign='center'>\n                <Statistic color='orange' size='small'>\n                  <Statistic.Value>{this.props.liveinfo['users-all']}</Statistic.Value>\n                  <Statistic.Label>Members</Statistic.Label>\n                </Statistic>\n              </Segment>\n            </Col>\n            <Col sm={12} md={4} >\n              <Segment textAlign='center'>\n                <Button as='div' labelPosition='right' onClick={()=>this.handleDonationPress()}>\n                  <Button color='red'>\n                    <Icon name='heart' />\n                    Donate\n                </Button>\n                  <Label as='a' basic color='red' pointing='left'>\n                    US\n                </Label>\n                </Button>\n              </Segment>\n            </Col>\n            <Col sm={12} md={4} >\n              <Segment textAlign='center'>\n              <Statistic color='olive' size='small'>\n                  <Statistic.Value><NumberFormat value={this.props.currentdonation} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n                  <Statistic.Label>Your Donations</Statistic.Label>\n                </Statistic>\n              </Segment>\n            </Col>\n          </Row>\n        </Col>\n\n      </Row>\n\n    );\n  };\n\n\n\n}\n\n\n/* Export Component ==================================================================== */\nexport default DashboardViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n//actions\nimport * as eventActions from '../../../redux/event/action';\nimport * as appActions from '../../../redux/app/action';\nimport * as donationActions from '../../../redux/donation/action';\n\n// The component we're mapping to\nimport DashboardView from './DashboardView';\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    uid:state.auth.user.id,\n    liveEvent:state.event.liveEvent,\n    liveinfo:state.app.liveinfo,\n    currentdonation:state.donation.currentdonation\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n    loadCurrentEvent:eventActions.loadCurrentEvent,\n    updateAppLiveInfo:appActions.updateAppLiveInfo,\n    updateSelfDonations:donationActions.updateSelfDonations\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardView);\n","import {  database } from '../../constants/firebase';\r\n\r\nexport function loadCurrentEvent() {\r\n   \r\n    return async dispatch => {\r\n      let userref = database.ref(`events`);\r\n      userref.orderByChild('active').equalTo(true).on(\"value\", function(snapshot) {\r\n       // console.log(snapshot.val());\r\n        snapshot.forEach(function(data) {\r\n         // console.log(JSON.stringify(data));\r\n          dispatch({ type: 'EVENT_SET', liveEvent: data.val() });\r\n        });\r\n      \r\n    });\r\n      \r\n    }\r\n}","import { database, storage, firebase } from '../../constants/firebase';\r\n\r\n\r\nexport function updateAppLiveInfo() {\r\n  return async dispatch => {\r\n    let appliveinforef = database.ref(`app-live-info`);\r\n    appliveinforef.on(\"value\", function (snapshot) {\r\n       dispatch({ type: 'UPDATE_LIVE_INFO', liveinfo: snapshot.val() });\r\n\r\n    });\r\n  }\r\n}","\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Tab, Button, Form, Message, List, Image, Table, Icon, Divider, Header } from 'semantic-ui-react';\nimport NumberFormat from 'react-number-format';\nimport BOCLogo from '../../styles/img/boc.jpg';\nimport bankIcon from '../../styles/img/bankicon.jpg';\n\n\nconst MSG_CREATE_SUCCESS = 'CREATE_S';\nconst MSG_CREATE_ERROR = 'CREATE';\n\nclass DonateViewContainer extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      error: '',\n      error_type: '',\n      donation_save_file: null,\n      donation_save_amount: 0.0\n    }\n  }\n\n  componentDidMount = async () => {\n    this.props.updateSelfDonationsList(this.props.liveEvent.id, this.props.uid);\n\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isLoading_save === true && nextProps.isLoading_save === false) {\n      if (nextProps.saveError !== '') {\n        this._setMessage(MSG_CREATE_ERROR, nextProps.saveError, 4000);\n      } else {\n        this._setMessage(MSG_CREATE_SUCCESS, 'Success', 4000);\n      }\n    }\n    return true;\n  }\n\n  _setMessage(methodtype, msg, time) {\n\n\n    this.setState({ error_type: methodtype, error: msg });\n    if (time === undefined) {\n      setTimeout(() => {\n        this.setState({ error_type: '', error: '' })\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.setState({ error_type: '', error: '' })\n      }, time)\n    }\n\n    if (methodtype === MSG_CREATE_SUCCESS) {\n      this.clearForm(methodtype);\n    }\n\n    window.scrollTo(0, 0);\n\n\n  }\n\n  clearForm = () => {\n    this.setState({ donation_save_file: null, donation_save_amount: 0.0 })\n  }\n\n  makeDonation = () => {\n\n    if (this.state.donation_save_amount > 0) {\n      if (this.state.donation_save_file !== null) {\n        let obj = {};\n        obj['eventid'] = this.props.liveEvent.id;\n        obj['uid'] = this.props.uid;\n        obj['amt'] = this.state.donation_save_amount;\n        obj['img'] = this.state.donation_save_file;\n\n        console.log(this.state.donation_save_file)\n        this.props.saveDonation(obj);\n      } else {\n        this._setMessage(MSG_CREATE_ERROR, 'Please Upload your Bank slip / Payment Recipt', 3000);\n      }\n    } else {\n      this._setMessage(MSG_CREATE_ERROR, 'Please Enter your Amount', 3000);\n    }\n\n\n\n  }\n\n  handleselectedFile = event => {\n    console.log(event.target.files[0])\n    this.setState({\n      donation_save_file: event.target.files[0]\n    });\n  }\n\n\n\n\n  render = () => {\n\n    const panes = [\n      { menuItem: 'Make Donation', render: () => this.renderDonation() },\n      { menuItem: 'History', render: () => this.renderPendingDonation() }\n    ]\n\n    return (\n      <Container>\n        <Tab menu={{ pointing: true }} panes={panes} />\n\n      </Container>\n    );\n  };\n\n\n\n\n\n\n  renderPendingDonation = () => {\n    return (\n      <Tab.Pane attached={false}>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n              <Table.HeaderCell>Payment</Table.HeaderCell>\n              <Table.HeaderCell>Statues</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.props.currentdonations.length === 0 && (\n              <Row>\n                <Col md={{ size: 8, offset: 2 }}>\n                  <br />\n                  <Header as='h2'>\n                    <Icon.Group size='large'>\n                      <Icon name='meh outline' />\n\n                    </Icon.Group>\n                    No Payment Records Found!\n                 </Header>\n                 <br />\n                </Col>\n              </Row>\n\n            )}\n\n            {this.props.currentdonations.map(function (don, i) {\n              let date1 = new Date(don.crdate);\n              return (\n                <Table.Row key={`his${i}`}>\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\n                  {(don['donation-state'] === 0) && (\n                    <Table.Cell warning>\n                      <Icon name='warning sign' />\n                      Not Verified\n                    </Table.Cell>\n                  )}\n                  {(don['donation-state'] === 1) && (\n                    <Table.Cell positive>\n                      <Icon name='checkmark' />\n                      Approved\n                    </Table.Cell>\n                  )}\n                  {(don['donation-state'] === 2) && (\n                    <Table.Cell negative>\n                      <Icon name='close' />\n                      Cancelled\n                    </Table.Cell>\n                  )}\n\n                </Table.Row>\n              );\n            })}\n\n          </Table.Body>\n\n\n        </Table>\n      </Tab.Pane>\n    );\n  }\n\n  renderDonation = () => {\n    let showError = (this.state.error_type === MSG_CREATE_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_CREATE_SUCCESS && this.state.error !== '');\n    console.log(showSuccess)\n    return (\n      <Tab.Pane attached={false}>\n        <Message\n          hidden={!showError}\n          error\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\n        />\n        <Message\n          success\n          hidden={!showSuccess}\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\n        />\n\n\n        <Form loading={this.props.isLoading_save} onSubmit={() => this.makeDonation()}>\n          <Message\n            icon='bullhorn'\n            header='ඔබගේ අවදානයට'\n            content={\n              <Row>\n                <Col sm={12}>\n                  <p>ඔබගේ සියලු ආධාර මුදල් පහත සදහන් අපගේ බැංකු ගිණුම වෙත යොමු කොට එම රිසිට් පත / බැරපතෙහි පිටපතක්\n                මෙහි කරන මෙන් කාරුනිකව ඉල්ලා සිටිමු.</p>\n                </Col>\n                <Col sm={12}>\n                  <List horizontal size={'huge'}>\n                    <List.Item>\n                      <Image avatar src={BOCLogo} />\n                      <List.Content>\n                        <List.Header>ලංකා බැංකුව - බම්බලපිටිය</List.Header>\n                        <List.Header>BOC - Bambalapitiya</List.Header>\n                      </List.Content>\n                    </List.Item>\n                    <List.Item>\n                      <Image avatar src={bankIcon} />\n                      <List.Content>\n\n                        Account No\n                        <List.Header>0081625372</List.Header>\n                      </List.Content>\n                    </List.Item>\n\n                  </List>\n                </Col>\n              </Row>\n            }\n          />\n\n          <Form.Input label='Payment Reciept'\n            type='file'\n            accept=\"image/png, image/jpeg , application/pdf\"\n            onChange={this.handleselectedFile} />\n\n          <Form.Field>\n            <label>Amount</label>\n            <NumberFormat thousandSeparator={true} prefix={'රු '} value={this.state.donation_save_amount}\n              onValueChange={(values) => {\n                const { formattedValue, value } = values;\n                // formattedValue = $2,223\n                // value ie, 2223\n                this.setState({ donation_save_amount: value })\n              }}\n            />\n          </Form.Field>\n          <Divider hidden />\n          <Form.Button primary>Submit</Form.Button>\n        </Form>\n      </Tab.Pane>\n    );\n  }\n\n\n\n\n}\n\n\n\n\n/* Export Component ==================================================================== */\nexport default DonateViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n\n\n\n// The component we're mapping to\nimport DonateView from './DonateView';\n\n//Actions\nimport * as DonationActions from '../../../redux/donation/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    uid:state.auth.user.id,\n    isLoading_save:state.donation.isLoading,\n    saveError:state.donation.saveError,\n    liveEvent:state.event.liveEvent,\n    currentdonations:state.donation.currentdonations\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n    saveDonation:DonationActions.saveDonation,\n    updateSelfDonationsList:DonationActions.updateSelfDonationsList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DonateView);\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport {\n  Login,\n  App,\n  Test,\n  Dashboard,\n  Donation\n} from '../_Views';\n\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/Auth' component={Login} />\n      <Route exact path='/Auth/:screen' component={Login} />\n      <App>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/donations' component={Donation} />\n          <Route path='/:page' component={Test} />\n        </Switch>\n      </App>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Routes\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    isAuthenticated: false,\r\n    isAuthChecking: false,\r\n    user: {},\r\n    message: { msg_type: '', msg_txt: '' }\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"AUTH_REGISTER\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_LOGIN\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_CHECKING_START\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_CHECKING\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.user,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_LOGOUT_START\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading\r\n            };\r\n        case \"AUTH_FAILD\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                isLoading: false,\r\n                isAuthChecking:false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveinfo:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"UPDATE_LIVE_INFO\":\r\n            return {\r\n                ...state,\r\n                liveinfo: action.liveinfo\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveEvent:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"EVENT_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"EVENT_SET\":\r\n            return {\r\n                ...state,\r\n                liveEvent: action.liveEvent\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    saveError: '',\r\n    currentdonation: 0,\r\n    currentdonations:[]\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"DONATION_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading,\r\n                saveError: action.error\r\n            };\r\n        case \"DONATION_UPDATE_USER_TOTAL\":\r\n            return {\r\n                ...state,\r\n                currentdonation:action.currentdonation\r\n            };\r\n            case \"DONATION_UPDATE_USER_DON\":\r\n            return {\r\n                ...state,\r\n                currentdonations:action.currentdonations\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport auth from './auth/reducer';\nimport app from './app/reducer';\nimport event from './event/reducer';\nimport donation from './donation/reducer'\n\nexport default combineReducers({\n    auth,\n    app,\n    event,\n    donation\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes/Routes';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst store = configureStore();\n\n\nReactDOM.render(\n  <Provider store={store}>  \n    <Routes/>\n  </Provider>,\n  document.getElementById('root')\n);","import { compose,createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux';\n\nexport default function configureStore(initialState) {\n   \n    \n    const reduxLogger = createLogger({predicate: (getState, action) => true});\n    let middlewares = [thunk]\n   \n    if(true){\n        middlewares = [...middlewares,reduxLogger];\n    }\n    return createStore(\n        \n        rootReducer,\n        initialState,\n        compose(applyMiddleware(...middlewares)),\n    );\n\n}"],"sourceRoot":""}