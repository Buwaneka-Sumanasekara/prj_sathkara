{"version":3,"sources":["_Views/styles/img/donator.png","_Views/styles/img/boc.jpg","_Views/styles/img/bankicon.jpg","constants/firebase.js","redux/auth/action.js","_Views/base/App.js","_Views/containers/Login/LoginView.js","_Views/containers/Login/LoginContainer.js","_Views/containers/Test/TestView.js","_Views/containers/Test/TestContainer.js","redux/event/action.js","redux/donation/action.js","_Views/containers/Dashboard/DashboardView.js","_Views/containers/Dashboard/DashboardContainer.js","redux/app/action.js","_Views/containers/Donate/DonateView.js","_Views/containers/Donate/DonateContainer.js","_Views/containers/Terms/TermsView.js","_Views/containers/Terms/TermsContainer.js","routes/Routes.js","redux/auth/reducer.js","redux/app/reducer.js","redux/event/reducer.js","redux/donation/reducer.js","redux/index.js","index.js","configureStore.js","_Views/styles/img/logo.jpg"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","console","log","concat","process","JSON","stringify","firebase","apps","length","initializeApp","auth","database","storage","createUser","user","obj","id","authtyp","img","fname","lname","mobile","email","saveUserToDatabase","dispatch","ref","child","set","error","status","msg","type","isLoading","message","msg_type","msg_txt","saveUserToDatabaseGoogle","setUserToRedux","uid","once","snap","val","authCheck","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","onAuthStateChanged","authUser","stop","this","_x3","apply","arguments","SCREEN_LOGOUT","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_callee","_context","handleItemClick","name","setState","activeItem","authLogout","context","router","history","push","_renderMenues","state","react_default","createElement","reactstrap_es","light","expand","onClick","e","Image","src","imgLogo","size","className","navbar","Label","image","color","basic","Icon","toggle","isOpen","bind","assertThisInitialized","nextProps","nextState","authLoading","isAuthenticated","sm","Segment","Dimmer","active","inverted","Loader","children","Component","contextTypes","PropTypes","object","mapDispatchToProps","authActions","_ref4","_callee4","_context4","signOut","then","_x4","connect","isAuthChecking","SCREEN_LOGIN","SCREEN_REGISTER","MSG_SIGNUP_SUCCESS","MSG_SIGNUP_ERROR","MSG_LOGIN_SUCCESS","MSG_LOGIN_ERROR","PROVIDER_GOOGLE","LognViewContainer","match","params","screen","clearForm","typ","reg_fname","reg_lname","reg_mobile","reg_email","reg_pass","reg_cpass","redirectToHome","validateReg","error_type","_setMessage","handleRegister","_callee2","_context2","registerUser","validateLogin","login_email","login_pass","handleLogin","provider","loginUser","signInWithGoogle","_x","onchangetext","para","value","onchangetext_login","changeScreen","newscreen","_x2","render","md","offset","wrapped","renderLogin","renderSignup","showError","showSuccess","Message","hidden","content","positive","Inline","Button","Form","loading","onSubmit","Field","placeholder","onChange","evt","target","vertical","Group","Or","text","alertVisible","isCancelled","undefined","methodtype","time","_this2","setTimeout","window","scrollTo","_ref","createUserWithEmailAndPassword","pass","info","usermod","catch","_ref2","signInWithEmailAndPassword","_ref5","_callee5","_context5","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","userinfo","profile","phoneNumber","picture","code","errorMessage","credential","_x5","LoginView","TestViewContainer","handleChange","event","clickButton","multiplyValue","url","mymarks","app","TestView","loadCurrentEvent","orderByChild","equalTo","on","snapshot","forEach","data","liveEvent","_","require","getDonationImgId","s4","Math","floor","random","toString","substring","getDonationObj","objnw","eventid","parseFloat","amt","ServerValue","TIMESTAMP","imgurl","updateDonation","trnid","donref","upobj","er","alert","uploadDonationImgOnly","update","DashboardViewContainer","updateAppLiveInfo","updateSelfDonations","handleDonationPress","CurEvent","renderHeader","renderRightSizeTop","centered","renderRightSizeBottom","Header","icon","place","date","Table","Body","Row","Cell","Statistic","Value","number_format_default","displayType","thousandSeparator","prefix","imgcontributors","inline","circular","liveinfo","eventActions","donations","amount","ar","toArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","don","err","return","currentdonation","donation","DashboardView","MSG_CREATE_SUCCESS","MSG_CREATE_ERROR","MSG_UPLOAD_REC_SUCCESS","MSG_UPLOAD_REC_ERROR","DonateViewContainer","updateSelfDonationsList","donation_save_file","donation_save_amount","donation_update_file","modal_upload_visible","makeDonation","saveDonation","updateDonationUser","donation_id","uploadDonationImgOnlyAction","handleselectedFile","files","handleselectedFileUpdate","panes","menuItem","renderDonation","renderPendingDonation","Tab","menu","pointing","Pane","attached","success","renderUpdateDonationUser","celled","HeaderCell","currentdonations","key","map","i","date1","Date","crdate","toLocaleString","as","showDonUrl","showUploadModal","warning","negative","isLoading_save","header","List","horizontal","Item","avatar","BOCLogo","Content","bankIcon","Input","label","accept","onValueChange","values","formattedValue","Divider","primary","hideUploadModal","open","Modal","onClose","Description","isReciptUploading","saveError","uploadError","_this3","newdonref","postID","genImgName","file","fileName","filetyp","metadata","storageRef","uploadTask","contentType","split","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","DonateView","TermsView","Routes","BrowserRouter","Switch","Route","exact","path","component","Login","Terms","base_App","Dashboard","Donation","Test","initialState","combineReducers","action","objectSpread","store","reduxLogger","createLogger","predicate","getState","middlewares","thunk","toConsumableArray","createStore","rootReducer","compose","applyMiddleware","configureStore","ReactDOM","es","routes_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.670c062b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donator.aa5ed7b2.png\";","module.exports = __webpack_public_path__ + \"static/media/boc.5f02b964.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bankicon.b85b649a.jpg\";","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst prodConfig = {\n  apiKey: \"AIzaSyCWfZqvMjAGIlDN6OrwqyK0kcyj1FyOaY8\",\n  authDomain: \"sathkara-bb902.firebaseapp.com\",\n  databaseURL: \"https://sathkara-bb902.firebaseio.com\",\n  projectId: \"sathkara-bb902\",\n  storageBucket: \"sathkara-bb902.appspot.com\",\n  messagingSenderId: \"937169849327\"\n};\n\nconst devConfig = {\n  apiKey: \"AIzaSyAJlP9GuVakGrCy5BN37gLx0kuDeZV5yOQ\",\n  authDomain: \"sathkara-test.firebaseapp.com\",\n  databaseURL: \"https://sathkara-test.firebaseio.com\",\n  projectId: \"sathkara-test\",\n  storageBucket: \"sathkara-test.appspot.com\",\n  messagingSenderId: \"1025410139450\"\n\n};\n\nconst config = process.env.NODE_ENV === 'production'\n  ? prodConfig\n  : devConfig;\n\nconsole.log(`Mode:${process.env.NODE_ENV}`)  \nconsole.log(`System init as #${JSON.stringify(config)}#`)\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst auth = firebase.auth();\nconst database = firebase.database();\nconst storage = firebase.storage();\n\n\nexport {\n  firebase,\n  auth,\n  database,\n  storage\n};","import { auth, database, firebase } from '../../constants/firebase';\r\n\r\nfunction createUser(user) {\r\n  let obj = {};\r\n  obj['id'] = user.id;\r\n  obj['authtyp'] = user.authtyp;\r\n  obj['img'] = user.img;\r\n  obj['fname'] = user.fname;\r\n  obj['lname'] = user.lname;\r\n  obj['mobile'] = user.mobile;\r\n  obj['email'] = user.email;\r\n  obj['user_type'] = 0;\r\n  return obj;\r\n}\r\n\r\nfunction saveUserToDatabase(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'SIGNUP';\r\n      msg = error;\r\n    } else {\r\n      status = 'SIGNUP_S';\r\n      msg = 'your registerd successfully!,Please sign-in ..';\r\n\r\n    }\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({\r\n      type: 'AUTH_REGISTER',\r\n      message: { msg_type: status, msg_txt: msg }\r\n    });\r\n  });\r\n}\r\n\r\nfunction saveUserToDatabaseGoogle(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'LOGIN';\r\n      msg = error;\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: status, msg_txt: msg } });\r\n    } else {\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n    }\r\n    \r\n  });\r\n}\r\n\r\nfunction setUserToRedux(dispatch, user) {\r\n  console.log(`${JSON.stringify(user.uid)}`);\r\n  let userref = database.ref(`user/${user.uid}`);\r\n  //userref.child(user.uid)\r\n  userref.once(\"value\", function (snap) {\r\n    console.log(snap);\r\n    \r\n    dispatch({ type: 'AUTH_SUCCESS', user: snap.val() });\r\n    dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n  });\r\n}\r\n\r\n\r\nexport function registerUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_REGISTER', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.createUserWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser.user.uid);\r\n        let usermod = user;\r\n        usermod['id'] = authUser.user.uid;\r\n        saveUserToDatabase(dispatch, createUser(usermod));\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_REGISTER', message: { msg_type: 'SIGNUP', msg_txt: error.message } });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function loginUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.signInWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN', msg_txt: error.message } });\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport function authCheck() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n    auth.onAuthStateChanged(authUser => {\r\n\r\n      if (authUser) {\r\n        setUserToRedux(dispatch, authUser)\r\n      } else {\r\n        // dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n        dispatch({ type: 'AUTH_FAILD' });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function authLogout() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_LOGOUT_START', isLoading: true });\r\n\r\n    auth.signOut().then(function () {\r\n\r\n      dispatch({ type: 'AUTH_FAILD' });\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function signInWithGoogle() {\r\n  return async dispatch => {\r\n\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n\r\n    auth.signInWithPopup(provider).then(authUser => {\r\n     \r\n      if(authUser.additionalUserInfo.isNewUser){\r\n        console.log(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n        let userinfo=authUser.additionalUserInfo.profile;\r\n        let usermod ={};\r\n        usermod['id'] = authUser.user.uid;\r\n        usermod['fname'] = userinfo['given_name'];\r\n        usermod['lname'] = userinfo['family_name'];\r\n        usermod['mobile'] = authUser.user.phoneNumber;\r\n        usermod['email'] = userinfo.email;\r\n        usermod['pass'] = '.';\r\n        usermod['authtyp'] = 'GOOGLE';\r\n        usermod['img'] = userinfo.picture;\r\n\r\n        saveUserToDatabaseGoogle(dispatch, createUser(usermod));\r\n        \r\n      }else{\r\n        dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n        auth.onAuthStateChanged(authUser => {\r\n    \r\n          if (authUser) {\r\n            \r\n            setUserToRedux(dispatch, authUser)\r\n          } else {\r\n            dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n            dispatch({ type: 'AUTH_FAILD' });\r\n          }\r\n        });\r\n      }\r\n\r\n      \r\n    }).catch(function (error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n      console.error(`login error:${errorMessage}`);\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/css/theme.min.css';\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col, Collapse, Nav, Navbar, NavItem, NavLink, NavbarBrand, NavbarToggler } from 'reactstrap';\nimport { Dimmer, Loader, Image, Segment, Menu, Icon, Label, Button } from 'semantic-ui-react';\n//Actions\nimport * as authActions from '../../redux/auth/action';\nimport imgLogo from '../styles/img/logo.jpg';\n\n\nlet SCREEN_LOGOUT = 'Logout';\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeItem: \"\",\n      isOpen: false\n    }\n  }\n\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n  componentDidMount = async () => {\n    await this.props.authCheck()\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\n      if (nextProps.isAuthenticated === false) {\n        this.context.router.history.push(`/Auth/Login`);\n      }\n\n    }\n\n\n    return true;\n  }\n\n  handleItemClick = (name) => {\n    this.setState({ activeItem: name });\n    if (name === SCREEN_LOGOUT) {\n      this.props.authLogout();\n    } else if (name === 'Home') {\n      this.context.router.history.push(`/`);\n    }else if (name === 'Donation') {\n      this.context.router.history.push(`/donations`);\n    }\n\n  }\n\n\n  render() {\n\n\n    return (\n      <Container>\n        <Row>\n          {this.props.authLoading && (\n            <Col sm={12}>\n              <Segment basic>\n\n                 <center>\n                  <Image src={imgLogo}  />\n                  </center><br/>\n\n                <Dimmer active inverted>\n                 \n                  <Loader size='large'>Loading</Loader>\n                </Dimmer>\n\n                <br />\n              </Segment>\n            </Col>\n          )}\n          {this.props.authLoading === false && (\n            <Col sm={12}>\n              {this._renderMenues()}\n              {this.props.children}\n            </Col>\n          )}\n\n        </Row>\n      </Container>\n    );\n  }\n\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  _renderMenues = () => {\n    const { activeItem } = this.state\n    return (\n      <Navbar light expand=\"md\">\n        <NavbarBrand onClick={(e) => this.handleItemClick(\"Home\")}><Image src={imgLogo} size='tiny' /></NavbarBrand>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem onClick={(e) => this.handleItemClick(\"Home\")}>\n            <NavLink >\n              <Label  image color='blue' basic>\n              <Icon\n                    name={\"home\"}\n                    size='large'\n                    color='blue'\n                  />\n                Home\n                </Label>\n            </NavLink>\n          </NavItem>\n          <NavItem onClick={(e) => this.handleItemClick(\"Donation\")}>\n            <NavLink >\n              <Label  image color='red' basic>\n              <Icon\n                    name={\"heartbeat\"}\n                    size='large'\n                    color='red'\n                  />\n                Donate Now !\n                </Label>\n            </NavLink>\n          </NavItem>\n\n        </Nav>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink >\n                <Label  image color='blue' basic>\n                  <img src={this.props.user.img} />\n                  {`${this.props.user.fname} ${this.props.user.lname}`}\n                </Label>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={(e) => this.handleItemClick(SCREEN_LOGOUT)}>\n                <Label  color='blue' basic>\n                  <Icon\n                    name={\"close\"}\n                    size='large'\n                    color='blue'\n                  />\n                  Logout\n              </Label>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n\n\n    )\n  }\n\n\n\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  authLoading: state.auth.isAuthChecking\n});\nconst mapDispatchToProps = {\n  authCheck: authActions.authCheck,\n  authLogout: authActions.authLogout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Image, Label, Button, Dimmer, Loader, Form, Segment, Message, Icon, Header } from 'semantic-ui-react';\nimport imgLogo from '../../styles/img/logo.jpg';\n\nconst SCREEN_LOGIN = 'Login';\nconst SCREEN_REGISTER = 'Register';\nconst SCREEN_VERIFY = 'Verify';\n\nconst MSG_SIGNUP_SUCCESS = 'SIGNUP_S';\nconst MSG_SIGNUP_ERROR = 'SIGNUP';\nconst MSG_LOGIN_SUCCESS = 'LOGIN_S';\nconst MSG_LOGIN_ERROR = 'LOGIN';\n\nconst PROVIDER_GOOGLE = \"Google-SignIn\";\n\nclass LognViewContainer extends Component {\n\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      screen: SCREEN_LOGIN,\n      alertVisible: true,\n      error: '',\n      error_type: '',\n      reg_fname: '',\n      reg_lname: '',\n      reg_mobile: '',\n      reg_email: \"\",\n      reg_pass: \"\",\n      reg_cpass: \"\",\n      login_email: \"\",\n      login_pass: \"\"\n    }\n  }\n\n  componentDidMount = async () => {\n    console.log(`screen:${this.props.match.params.screen}`);\n    await this.props.authCheck();\n  }\n\n  componentWillUnmount() {\n    this.isCancelled = true;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\n      console.log(`Auth statues:${nextProps.isAuthenticated}`)\n      if (nextProps.isAuthenticated === false) {\n        if (this.props.match.params.screen === undefined) {\n          this.changeScreen(SCREEN_LOGIN);\n        } else {\n          this.changeScreen(this.props.match.params.screen);\n        }\n      } else {\n        this.redirectToHome();\n      }\n\n    }\n    else if (this.props.message.msg_type !== nextProps.message.msg_type) {\n      this._setMessage(nextProps.message.msg_type, nextProps.message.msg_txt, 3000);\n    }\n    return true;\n  }\n\n\n\n\n  /*ERROR HANDLING*/\n\n  _setMessage(methodtype, msg, time) {\n    //console.log(`error set:${methodtype},${msg}`)\n    if (methodtype === MSG_LOGIN_SUCCESS) {\n      this.redirectToHome();\n    } else {\n      this.setState({ error_type: methodtype, error: msg });\n      if (time === undefined) {\n        setTimeout(() => {\n          this.setState({ error_type: '', error: '' })\n        }, 2000)\n      } else {\n        setTimeout(() => {\n          this.setState({ error_type: '', error: '' })\n        }, time)\n      }\n\n      this.clearForm(methodtype);\n      window.scrollTo(0, 0);\n    }\n\n  }\n  /*END:ERROR HANDLING*/\n\n  clearForm = (typ) => {\n    if (typ === MSG_SIGNUP_SUCCESS) {\n      this.setState({\n        reg_fname: '',\n        reg_lname: '',\n        reg_mobile: '',\n        reg_email: \"\",\n        reg_pass: \"\",\n        reg_cpass: \"\",\n      })\n    }\n  }\n\n  redirectToHome = () => {\n    this.context.router.history.push(`/`);\n  }\n\n  validateReg = () => {\n    this.setState({ error_type: '', error: '' });\n    let state = true;\n    let msg = \"\";\n\n    if (this.state.reg_fname === '') {\n      state = false;\n      msg = 'Please enter your first name';\n    } else if (this.state.reg_lname === '') {\n      state = false;\n      msg = 'Please enter your Last name';\n    } else if (this.state.reg_mobile === '') {\n      state = false;\n      msg = 'Please enter your mobile no';\n    } else if (this.state.reg_email === '') {\n      state = false;\n      msg = 'Please enter your email';\n    } else if (this.state.reg_pass === '') {\n      state = false;\n      msg = 'Please enter your password';\n    } else if (this.state.reg_pass !== this.state.reg_cpass) {\n      state = false;\n      msg = 'passwords should be matched!';\n    }\n\n    if (state === false) {\n      this._setMessage(MSG_SIGNUP_ERROR, msg, 3000);\n    }\n    return state;\n  }\n  handleRegister = async () => {\n    if (this.validateReg()) {\n      let user = {};\n      user['fname'] = this.state.reg_fname;\n      user['lname'] = this.state.reg_lname;\n      user['mobile'] = this.state.reg_mobile;\n      user['email'] = this.state.reg_email;\n      user['pass'] = this.state.reg_pass;\n      user['authtyp'] = 'EMAIL';\n      user['img'] = 'https://firebasestorage.googleapis.com/v0/b/sathkara-bb902.appspot.com/o/defaults%2Fuser.png?alt=media&token=69817bb3-ac5b-4be8-ab7d-a155bff173c1';\n\n      await this.props.registerUser(user);\n    }\n  }\n\n  validateLogin = () => {\n    this.setState({ error_type: '', error: '' });\n    let state = true;\n    let msg = \"\";\n\n    if (this.state.login_email === '') {\n      state = false;\n      msg = 'Please enter your email';\n    } else if (this.state.login_pass === '') {\n      state = false;\n      msg = 'Please enter your password';\n    }\n\n    if (state === false) {\n      this._setMessage(MSG_LOGIN_ERROR, msg, 3000);\n    }\n    return state;\n  }\n  handleLogin = async (provider) => {\n    if (provider === '') {\n      if (this.validateLogin()) {\n        let user = {};\n        user['email'] = this.state.login_email;\n        user['pass'] = this.state.login_pass;\n        await this.props.loginUser(user);\n      }\n    } else {\n      this.props.signInWithGoogle();\n    }\n\n  }\n\n  onchangetext = (para, value) => {\n    if (para === 'reg_fname') {\n      this.setState({ reg_fname: value });\n    } else if (para === 'reg_lname') {\n      this.setState({ reg_lname: value });\n    } else if (para === 'reg_mobile') {\n      this.setState({ reg_mobile: value });\n    } else if (para === 'reg_email') {\n      this.setState({ reg_email: value });\n    } else if (para === 'reg_pass') {\n      this.setState({ reg_pass: value });\n    } else if (para === 'reg_cpass') {\n      this.setState({ reg_cpass: value });\n    }\n  }\n  onchangetext_login = (para, value) => {\n    if (para === 'login_email') {\n      this.setState({ login_email: value });\n    } else if (para === 'login_pass') {\n      this.setState({ login_pass: value });\n    }\n  }\n\n  changeScreen = async (newscreen) => {\n\n    this.setState({\n      screen: newscreen\n    }, () => {\n      this.context.router.history.push(`/Auth/${newscreen}`);\n    });\n\n\n  }\n\n\n\n  /*RENDER FUNCTIONS*/\n  render = () => {\n    if (this.props.authLoading) {\n      return (\n        <Container>\n          <Row>\n            <Col sm={12}>\n              <Segment basic>\n\n                <center>\n                  <Image src={imgLogo} />\n                </center><br />\n\n                <Dimmer active inverted>\n                  <Loader size='large'>Loading</Loader>\n                </Dimmer>\n\n                <br />\n              </Segment>\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n\n    return (\n      <Container>\n\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <Row>\n              <Col md={{ size: 4, offset: 4 }}>\n                <Image src={imgLogo} size='small' wrapped />\n              </Col>\n            </Row>\n\n          </Col>\n        </Row>\n\n        <Row>\n\n\n          {this.state.screen === SCREEN_LOGIN && (\n            this.renderLogin()\n          )}\n          {this.state.screen === SCREEN_REGISTER && (\n            this.renderSignup()\n          )}\n\n\n        </Row>\n      </Container>\n    );\n  };\n\n  renderLogin = () => {\n    let showError = (this.state.error_type === MSG_LOGIN_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_LOGIN_SUCCESS && this.state.error !== '');\n    return (\n      <Col md={{ size: 4, offset: 4 }}>\n        <Message\n          hidden={!showError}\n          error\n          content={this.state.error}\n        />\n        <Message\n          hidden={!showSuccess}\n          positive\n          content={this.state.error}\n        />\n\n\n\n        <Segment >\n          <center>\n            <Segment.Inline>\n              <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\n                <Icon name='google plus g' /> Signin with Your Google Acount\n          </Button>\n\n              <p>OR</p>\n            </Segment.Inline>\n\n          </center>\n        </Segment>\n\n\n        <Form loading={this.props.isLoading || this.props.authLoading} onSubmit={() => this.handleLogin('')}>\n\n          <Form.Field>\n            <label>Email</label>\n            <input type=\"email\" placeholder='abc@example.com' value={this.state.login_email} onChange={(evt) => this.onchangetext_login('login_email', evt.target.value)} />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input type=\"password\" value={this.state.login_pass} onChange={(evt) => this.onchangetext_login('login_pass', evt.target.value)} />\n          </Form.Field>\n          <Button color='blue'>Login</Button>\n        </Form>\n        <Segment vertical></Segment>\n        <br />\n        <Button.Group>\n          <Label>If your not registerd yet </Label>\n          <Button.Or text='->' />\n          <Button color='teal' onClick={() => this.changeScreen(SCREEN_REGISTER)}>Sign up here</Button>\n        </Button.Group>\n\n      </Col>\n    );\n  }\n\n  renderSignup = () => {\n    let showError = (this.state.error_type === MSG_SIGNUP_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_SIGNUP_SUCCESS && this.state.error !== '');\n\n    return (\n      <Col md={{ size: 6, offset: 3 }}>\n        <Message\n          hidden={!showError}\n          error\n          content={this.state.error}\n        />\n        <Message\n          hidden={!showSuccess}\n          positive\n          content={this.state.error}\n        />\n        <Segment>\n          <center>\n            <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\n              <Icon name='google plus g' /> Signup with Your Google Acount\n          </Button>\n\n            <p>OR</p>\n          </center>\n        </Segment>\n\n        <Form loading={this.props.isLoading} onSubmit={() => this.handleRegister()}>\n          <Row>\n            <Col sm={12} md={6}>\n              <Form.Field>\n                <label>First Name</label>\n                <input placeholder='First Name' value={this.state.reg_fname} onChange={(evt) => this.onchangetext('reg_fname', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Last Name</label>\n                <input placeholder='Last Name' value={this.state.reg_lname} onChange={(evt) => this.onchangetext('reg_lname', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Mobile No</label>\n                <input placeholder='+94770000000' value={this.state.reg_mobile} onChange={(evt) => this.onchangetext('reg_mobile', evt.target.value)} />\n              </Form.Field>\n\n            </Col>\n            <Col sm={12} md={6}>\n              <Form.Field>\n                <label>Email</label>\n                <input placeholder='abc@example.com' value={this.state.reg_email} onChange={(evt) => this.onchangetext('reg_email', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input type='password' value={this.state.reg_pass} onChange={(evt) => this.onchangetext('reg_pass', evt.target.value)} />\n              </Form.Field>\n              <Form.Field>\n                <label>Confirm Password</label>\n                <input type='password' value={this.state.reg_cpass} onChange={(evt) => this.onchangetext('reg_cpass', evt.target.value)} />\n              </Form.Field>\n            </Col>\n          </Row><br />\n          <Row>\n            <Col sm={12}>\n              <Button type='submit' positive >Register</Button>\n            </Col>\n          </Row>\n\n        </Form>\n        <Row>\n          <Col sm={12}>\n            <Segment vertical></Segment>\n            <br />\n            <Label>If your already registered ?\n        <Button onClick={() => this.changeScreen(SCREEN_LOGIN)}> Sign-in here</Button> </Label>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n\n\n}\n\n\n/* Export Component ==================================================================== */\nexport default LognViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n// The component we're mapping to\nimport LoginView from './LoginView';\n\n//Actions\nimport * as authActions from '../../../redux/auth/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    authLoading: state.auth.isAuthChecking,\n    isLoading:state.auth.isLoading,\n    message:state.auth.message\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n   registerUser:authActions.registerUser,\n   loginUser:authActions.loginUser,\n   authCheck: authActions.authCheck,\n   signInWithGoogle:authActions.signInWithGoogle\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\n","\nimport React, { Component } from 'react';\n\n\nclass TestViewContainer extends Component {\n  \n  constructor(props){\n    super();\n    this.state ={\n      value:0\n    }\n  }\n\n  componentDidMount = async () => {\n    \n   \n  }\n\n  \n  shouldComponentUpdate(nextProps, nextState) {\n\n    return true;\n  }\n\n  handleChange = (event) => {\n    this.setState({value: event.target.value});\n  }\n   \n  clickButton = () =>{\n    this.props.multiplyValue(this.state.value);\n  }\n\n\n  render = () => {\n     return (\n    <div>\n         <h1>{`TestView URL:${this.props.match.url} `}</h1>\n     \n        <h2>{`Redux State: ${this.props.mymarks}`}</h2>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <button onClick={this.clickButton}>Add</button>\n\n\n      </div>\n     );\n  };\n\n \n\n}\n\n\n/* Export Component ==================================================================== */\nexport default TestViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n\n\n\n// The component we're mapping to\nimport TestView from './TestView';\n\n//Actions\nimport * as AppActions from '../../../redux/app/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n  mymarks:state.app.value\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n  \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestView);\n","import {  database } from '../../constants/firebase';\r\n\r\nexport function loadCurrentEvent() {\r\n   \r\n    return async dispatch => {\r\n      let userref = database.ref(`events`);\r\n      userref.orderByChild('active').equalTo(true).on(\"value\", function(snapshot) {\r\n       // console.log(snapshot.val());\r\n        snapshot.forEach(function(data) {\r\n         // console.log(JSON.stringify(data));\r\n          dispatch({ type: 'EVENT_SET', liveEvent: data.val() });\r\n        });\r\n      \r\n    });\r\n      \r\n    }\r\n}","import { database, storage, firebase } from '../../constants/firebase';\r\nvar _ = require('lodash');\r\n\r\nfunction getDonationImgId() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4() + '' + s4() + '' + s4() + '' + s4() + '' + s4() + s4() + s4();\r\n}\r\n\r\nfunction getDonationObj(obj) {\r\n  let objnw = {};\r\n  objnw['eventid'] = obj.eventid;\r\n  objnw['uid'] = obj.uid;\r\n  objnw['amount'] = parseFloat(obj.amt);\r\n  objnw['donation-state'] = 0; //0=pending,1=aproved,2=cancelled\r\n  objnw['crdate'] = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n\r\n  if (obj.id !== undefined) {\r\n    objnw['id'] = obj.id;\r\n    objnw['imgurl'] = obj.imgurl;\r\n    objnw['imgurl-available'] = obj['imgurl-available'];\r\n  }\r\n\r\n\r\n  return objnw;\r\n}\r\n\r\nfunction updateDonation(dispatch, trnid, imgurl, obj) {\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${trnid}`);\r\n  let upobj = obj;\r\n  upobj['id'] = trnid;\r\n  upobj['imgurl'] = imgurl;\r\n  if (imgurl === '') {\r\n    upobj['imgurl-available'] = false;\r\n  } else {\r\n    upobj['imgurl-available'] = true;\r\n  }\r\n  donref.set(getDonationObj(upobj), function (er) {\r\n    if (er) {\r\n      alert(\"Data could not be saved.\" + er);\r\n      dispatch({ type: 'DONATION_LOADING', error: \"Data could not be saved.\" + er, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: false });\r\n    }\r\n  });\r\n\r\n}\r\n\r\nexport function saveDonation(obj) {\r\n\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: true });\r\n\r\n      let donref = database.ref(`donations/${obj.eventid}/${obj.uid}`);\r\n      var newdonref = donref.push(getDonationObj(obj));\r\n      var postID = newdonref.key;\r\n\r\n      if (obj.img !== null) {\r\n        let genImgName = getDonationImgId();\r\n        let file = obj.img;\r\n        let fileName = obj.img.name;\r\n        let filetyp = obj.img.type;\r\n\r\n        var metadata = {\r\n          contentType: filetyp\r\n        };\r\n\r\n        console.log(`File name:${genImgName}.${filetyp}`)\r\n        var storageRef = storage.ref();\r\n\r\n        var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n        // Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n          function (snapshot) {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n              case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                console.log('Upload is paused');\r\n                break;\r\n              case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                console.log('Upload is running');\r\n                break;\r\n            }\r\n          }, function (error) {\r\n\r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n              case 'storage/unauthorized':\r\n                // User doesn't have permission to access the object\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Unothorized', isLoading: false });\r\n                break;\r\n\r\n              case 'storage/canceled':\r\n                // User canceled the upload\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Cancel', isLoading: false });\r\n                break;\r\n              case 'storage/unknown':\r\n                // Unknown error occurred, inspect error.serverResponse;\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Unkonwn', isLoading: false });\r\n                break;\r\n            }\r\n          }, function () {\r\n            // Upload completed successfully, now we can get the download URL\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n              console.log('File available at', downloadURL);\r\n              updateDonation(dispatch, postID, downloadURL, obj)\r\n            });\r\n          });\r\n\r\n\r\n      } else {\r\n        //no image\r\n        console.log(`no image`)\r\n        updateDonation(dispatch, postID, '', obj);\r\n      }\r\n\r\n    } catch (error) {\r\n      dispatch({ type: 'DONATION_LOADING', error: error.message, isLoading: false });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nexport function updateSelfDonations(eventid, uid) {\r\n  return async dispatch => {\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n      console.log(ar);\r\n      for (let don of ar) {\r\n        if (don['donation-state'] !== 2) {//not cancelled\r\n          amount += don.amount;\r\n        }\r\n      }\r\n      dispatch({ type: 'DONATION_UPDATE_USER_TOTAL', currentdonation: amount });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function updateSelfDonationsList(eventid, uid) {\r\n  return async dispatch => {\r\n    console.log(`donations/${eventid}/${uid}`)\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n\r\n      dispatch({ type: 'DONATION_UPDATE_USER_DON', currentdonations: ar });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function uploadDonationImgOnlyAction(obj) {\r\n  return async dispatch => {\r\n    console.log(`Don id :${obj.id}`)\r\n    dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: true });\r\n    if (obj.img !== null) {\r\n      let genImgName = getDonationImgId();\r\n      let file = obj.img;\r\n      let fileName = obj.img.name;\r\n      let filetyp = obj.img.type;\r\n\r\n      var metadata = {\r\n        contentType: filetyp\r\n      };\r\n\r\n      console.log(`File name:${genImgName}.${filetyp}`)\r\n      var storageRef = storage.ref();\r\n\r\n      var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n      // Listen for state changes, errors, and completion of the upload.\r\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n        function (snapshot) {\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n          switch (snapshot.state) {\r\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n              console.log('Upload is paused');\r\n              break;\r\n            case firebase.storage.TaskState.RUNNING: // or 'running'\r\n              console.log('Upload is running');\r\n              break;\r\n          }\r\n        }, function (error) {\r\n\r\n          // A full list of error codes is available at\r\n          // https://firebase.google.com/docs/storage/web/handle-errors\r\n          switch (error.code) {\r\n            case 'storage/unauthorized':\r\n              // User doesn't have permission to access the object\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Unothorized', isLoading: false });\r\n              break;\r\n\r\n            case 'storage/canceled':\r\n              // User canceled the upload\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Cancel', isLoading: false });\r\n              break;\r\n            case 'storage/unknown':\r\n              // Unknown error occurred, inspect error.serverResponse;\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Unkonwn', isLoading: false });\r\n              break;\r\n          }\r\n        }, function () {\r\n          // Upload completed successfully, now we can get the download URL\r\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n            console.log('File available at', downloadURL);\r\n            uploadDonationImgOnly(dispatch,downloadURL,obj);\r\n          });\r\n        });\r\n    }else{\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Please select your file', isLoading: false });\r\n    }\r\n  }\r\n}\r\n\r\nfunction uploadDonationImgOnly(dispatch,imgurl,obj) {\r\n  console.log(`donations/${obj.eventid}/${obj.uid}/${obj.id}`)\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${obj.id}`);\r\n  let upobj = obj;\r\n  upobj['imgurl'] = imgurl;\r\n  upobj['imgurl-available'] = true;\r\n\r\n  donref.update(upobj, function (er) {\r\n    if (er) {\r\n      \r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: `Update details faild ${er}`, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: false });\r\n    }\r\n  });\r\n}","\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button, Header, Icon, Segment, Statistic, Table, Image,Message } from 'semantic-ui-react';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from \"prop-types\";\nimport imgcontributors from '../../styles/img/donator.png';\n\nclass DashboardViewContainer extends Component {\n  static contextTypes = {\n    router: PropTypes.object,\n\n  };\n\n\n  componentDidMount = async () => {\n    await this.props.loadCurrentEvent();\n    this.props.updateAppLiveInfo();\n    this.props.updateSelfDonations(this.props.liveEvent.id, this.props.uid);\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    return true;\n  }\n\n  handleDonationPress = () => {\n    this.context.router.history.push(`/donations`);\n  }\n\n\n\n  render = () => {\n    let CurEvent = this.props.liveEvent;\n    return (\n      <Row>\n        <Col md={12}>\n          <Row>\n            <Col sm={12} md={9}>\n              {this.renderHeader()}\n            </Col>\n            <Col sm={12} md={3}>\n              {this.renderRightSizeTop()}\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12} md={9}>\n            <Image src={CurEvent['img-banner1']} centered />\n            <Message>\n   \n    <p>\n    ගියවර පැවැත්වූ තැඹිලි දානයේ මතක සටහන් කිහිපයක්\n    </p>\n  </Message>\n            \n              <Image src={CurEvent['img-banner2']} centered />\n            </Col>\n            <Col sm={12} md={3}>\n              {this.renderRightSizeBottom()}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n    );\n  };\n\n\n  renderHeader = () => {\n    let CurEvent = this.props.liveEvent;\n    return (\n      <Segment placeholder>\n        <Header icon>\n          <Row>\n            <Col sm={12} md={3}>\n              <Icon name='home' color='grey' />\n              {`${CurEvent.place}`}\n            </Col>\n            <Col sm={12} md={6}>\n              <Image src={CurEvent['img-header']} size='small' centered />\n              {`${CurEvent.name}`}\n            </Col>\n            <Col sm={12} md={3}>\n              <Icon name='calendar check outline' color='grey' />\n              {`${CurEvent.date}`}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <br />\n              <Button color='red' onClick={()=> this.handleDonationPress()}>\n                Donate Us Now !\n              </Button>\n            </Col>\n          </Row>\n        </Header>\n      </Segment>\n    )\n  }\n\n  renderRightSizeTop = () => {\n    let CurEvent = this.props.liveEvent;\n    return (\n      <Table color={'blue'} >\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell >\n              Target Amount\n</Table.Cell>\n            <Table.Cell>\n              <Statistic color='red' size='mini'>\n                <Statistic.Value><NumberFormat value={CurEvent['total-amount']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell >\n              Current Expect\n</Table.Cell>\n            <Table.Cell>\n              <Statistic color='red' size='mini'>\n                <Statistic.Value><NumberFormat value={CurEvent['total-expect']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell >\n              Recived\n</Table.Cell>\n            <Table.Cell>\n              <Statistic color='red' size='mini'>\n                <Statistic.Value><NumberFormat value={CurEvent['total-recived']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell >\n              Contributors\n</Table.Cell>\n            <Table.Cell>\n              <Statistic color='red' size='small'>\n                <Statistic.Value>\n                  {CurEvent['total-contributors']}\n                  <Image src={imgcontributors} inline circular />\n\n                </Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>\n              Members\n          </Table.Cell>\n            <Table.Cell>\n              <Statistic color='red' size='mini'>\n                <Statistic.Value>{this.props.liveinfo['users-all']}</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderRightSizeBottom = () => {\n    let CurEvent = this.props.liveEvent;\n    return (\n      <Table>\n        <Table.Header>\n          <Table.Row><Table.Cell>රෝගීන්ට ලබාදෙන දෑ</Table.Cell><Table.Cell></Table.Cell></Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              <Statistic color='orange' size='mini'>\n                <Statistic.Value>තැඹිලි ගෙඩි</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n            <Table.Cell>\n              <Statistic color='grey' size='mini'>\n                <Statistic.Value>1000</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>\n              <Statistic color='orange' size='mini'>\n                <Statistic.Value>දෙළුම්</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n            <Table.Cell>\n              <Statistic color='grey' size='mini'>\n                <Statistic.Value>500</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>\n              <Statistic color='orange' size='mini'>\n                <Statistic.Value>කොමඩු</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n            <Table.Cell>\n              <Statistic color='grey' size='mini'>\n                <Statistic.Value>500</Statistic.Value>\n              </Statistic>\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n\n}\n\n\n/* Export Component ==================================================================== */\nexport default DashboardViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n//actions\nimport * as eventActions from '../../../redux/event/action';\nimport * as appActions from '../../../redux/app/action';\nimport * as donationActions from '../../../redux/donation/action';\n\n// The component we're mapping to\nimport DashboardView from './DashboardView';\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    uid:state.auth.user.id,\n    liveEvent:state.event.liveEvent,\n    liveinfo:state.app.liveinfo,\n    currentdonation:state.donation.currentdonation\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n    loadCurrentEvent:eventActions.loadCurrentEvent,\n    updateAppLiveInfo:appActions.updateAppLiveInfo,\n    updateSelfDonations:donationActions.updateSelfDonations\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardView);\n","import { database, storage, firebase } from '../../constants/firebase';\r\n\r\n\r\nexport function updateAppLiveInfo() {\r\n  return async dispatch => {\r\n    let appliveinforef = database.ref(`app-live-info`);\r\n    appliveinforef.on(\"value\", function (snapshot) {\r\n       dispatch({ type: 'UPDATE_LIVE_INFO', liveinfo: snapshot.val() });\r\n\r\n    });\r\n  }\r\n}","\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Tab, Button, Form, Message, List, Image, Table, Icon, Divider, Header, Label, Segment, Modal } from 'semantic-ui-react';\nimport NumberFormat from 'react-number-format';\nimport BOCLogo from '../../styles/img/boc.jpg';\nimport bankIcon from '../../styles/img/bankicon.jpg';\n\n\nconst MSG_CREATE_SUCCESS = 'CREATE_S';\nconst MSG_CREATE_ERROR = 'CREATE';\n\nconst MSG_UPLOAD_REC_SUCCESS = 'UPLOAD_REC_S';\nconst MSG_UPLOAD_REC_ERROR = 'UPLOAD_REC';\n\nclass DonateViewContainer extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      error: '',\n      error_type: '',\n      donation_id:'',\n      donation_save_file: null,\n      donation_save_amount: 0.0,\n      donation_update_file: null,\n      modal_upload_visible: false,\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.props.loadCurrentEvent();\n    this.props.updateSelfDonationsList(this.props.liveEvent.id, this.props.uid);\n\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isLoading_save === true && nextProps.isLoading_save === false) {\n      if (nextProps.saveError !== '') {\n        this._setMessage(MSG_CREATE_ERROR, nextProps.saveError, 4000);\n      } else {\n        this._setMessage(MSG_CREATE_SUCCESS, 'Success', 4000);\n      }\n    }\n    if (this.props.isReciptUploading === true && nextProps.isReciptUploading === false) {\n      if (nextProps.uploadError !== '') {\n        this._setMessage(MSG_UPLOAD_REC_ERROR, nextProps.uploadError, 4000);\n      } else {\n        this._setMessage(MSG_UPLOAD_REC_SUCCESS, 'Success', 4000);\n      }\n    }\n    return true;\n  }\n\n  _setMessage(methodtype, msg, time) {\n\n\n    this.setState({ error_type: methodtype, error: msg });\n    if (time === undefined) {\n      setTimeout(() => {\n        this.setState({ error_type: '', error: '' })\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.setState({ error_type: '', error: '' })\n      }, time)\n    }\n\n    if (methodtype === MSG_CREATE_SUCCESS) {\n      this.clearForm(methodtype);\n    }else if (methodtype === MSG_UPLOAD_REC_SUCCESS) {\n      this.clearForm(methodtype);\n\n    }\n\n    window.scrollTo(0, 0);\n\n\n  }\n\n  clearForm = () => {\n    this.setState({ donation_save_file: null, donation_save_amount: 0.0,donation_update_file:null,modal_upload_visible:false })\n  }\n\n  makeDonation = () => {\n\n    if (this.state.donation_save_amount > 0) {\n\n      let obj = {};\n      obj['eventid'] = this.props.liveEvent.id;\n      obj['uid'] = this.props.uid;\n      obj['amt'] = this.state.donation_save_amount;\n      obj['img'] = this.state.donation_save_file;\n\n      console.log(this.state.donation_save_file)\n      this.props.saveDonation(obj);\n\n    } else {\n      this._setMessage(MSG_CREATE_ERROR, 'Please Enter your Amount', 3000);\n    }\n  }\n\n  updateDonationUser = () => {\n\n    let obj = {};\n    obj['eventid'] = this.props.liveEvent.id;\n    obj['uid'] = this.props.uid;\n    obj['img'] = this.state.donation_update_file;\n    obj['id']=this.state.donation_id;\n\n    console.log(this.state.donation_update_file)\n    this.props.uploadDonationImgOnlyAction(obj);\n  }\n\n  handleselectedFile = event => {\n    console.log(event.target.files[0])\n    this.setState({\n      donation_save_file: event.target.files[0]\n    });\n  }\n  handleselectedFileUpdate = event => {\n    console.log(event.target.files[0])\n    this.setState({\n      donation_update_file: event.target.files[0]\n    });\n  }\n\n\n\n  render = () => {\n\n    const panes = [\n      { menuItem: 'Make Donation', render: () => this.renderDonation() },\n      { menuItem: 'History', render: () => this.renderPendingDonation() }\n    ]\n\n    return (\n      <Container>\n        <Tab menu={{ pointing: true }} panes={panes} />\n\n      </Container>\n    );\n  };\n\n\n\n\n\n\n  renderPendingDonation = () => {\n    let showError = (this.state.error_type === MSG_UPLOAD_REC_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_UPLOAD_REC_SUCCESS && this.state.error !== '');\n    return (\n      <Tab.Pane attached={false}>\n         <Message\n              hidden={!showError}\n              error\n              content={<div><Icon name='close' size='large' />{this.state.error}</div>}\n            />\n            <Message\n              success\n              hidden={!showSuccess}\n              content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\n            />\n\n\n        {this.renderUpdateDonationUser()}\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n              <Table.HeaderCell>Payment</Table.HeaderCell>\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\n              <Table.HeaderCell>Statues</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.props.currentdonations.length === 0 && (\n\n              <Table.Row key={`first`}>\n                <Table.Cell>{` No Payment Records Found!`}</Table.Cell>\n\n              </Table.Row>\n\n\n            )}\n\n            {this.props.currentdonations.map(function (don, i) {\n                let date1 = new Date(don.crdate);\n                return (\n                  <Table.Row key={`his${i}`}>\n                    <Table.Cell>{date1.toLocaleString()}</Table.Cell>\n                    <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\n            \n                    <Table.Cell>\n                      {(don['donation-state'] !== 2 && don['imgurl-available']) && (\n                        <Label as='a' content='View' icon='eye' onClick={()=>{this.showDonUrl(don.imgurl)}} />\n                      )}\n                      {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\n                           <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={()=>{this.showUploadModal(don.id)}}/>\n          \n                      )}\n            \n                    </Table.Cell>\n                    {(don['donation-state'] === 0) && (\n                      <Table.Cell warning>\n                        <Icon name='warning sign' />\n                        Not Verified\n                      </Table.Cell>\n                    )}\n                    {(don['donation-state'] === 1) && (\n                      <Table.Cell positive>\n                        <Icon name='checkmark' />\n                        Approved\n                      </Table.Cell>\n                    )}\n                    {(don['donation-state'] === 2) && (\n                      <Table.Cell negative>\n                        <Icon name='close' />\n                        Cancelled\n                      </Table.Cell>\n                    )}\n            \n                  </Table.Row>\n                );\n            }.bind(this))}\n\n          </Table.Body>\n\n\n        </Table>\n      </Tab.Pane>\n    );\n  }\n\n  \n\n  renderDonation = () => {\n    let showError = (this.state.error_type === MSG_CREATE_ERROR && this.state.error !== '');\n    let showSuccess = (this.state.error_type === MSG_CREATE_SUCCESS && this.state.error !== '');\n    console.log(showSuccess)\n    return (\n      <Tab.Pane attached={false}>\n        <Message\n          hidden={!showError}\n          error\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\n        />\n        <Message\n          success\n          hidden={!showSuccess}\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\n        />\n\n\n        <Form loading={this.props.isLoading_save} onSubmit={() => this.makeDonation()}>\n          <Message\n            icon='bullhorn'\n            header='ඔබගේ අවදානයට'\n            content={\n              <Row>\n                <Col sm={12}>\n                  <p>ඔබගේ සියලු ආධාර මුදල් පහත සදහන් අපගේ බැංකු ගිණුම වෙත යොමු කොට එම රිසිට් පත / බැරපතෙහි පිටපතක්\n                මෙහි කරන මෙන් කාරුනිකව ඉල්ලා සිටිමු. </p>\n                 <b>ඔබ බලාපොරොත්තු වන ආධාර මුදලද මෙහි දැමිය හැකි අතර, එම අවස්තාවේදී රිසිට් පත Upload කිරීම අවශය නොවේ,මුදල් බැංකුවට බැර කල පසු, History ටැබය වෙතට ගොස් එය අදාල ස්ථානයේ Upload කරන්න.</b>\n                </Col>\n                <Col sm={12}>\n                  <List horizontal size={'huge'}>\n                    <List.Item>\n                      <Image avatar src={BOCLogo} />\n                      <List.Content>\n                        <List.Header>ලංකා බැංකුව - බම්බලපිටිය</List.Header>\n                        <List.Header>BOC - Bambalapitiya</List.Header>\n                      </List.Content>\n                    </List.Item>\n                    <List.Item>\n                      <Image avatar src={bankIcon} />\n                      <List.Content>\n\n                        Account No\n                        <List.Header>0081625372</List.Header>\n                      </List.Content>\n                    </List.Item>\n\n                  </List>\n                </Col>\n              </Row>\n            }\n          />\n\n          <Form.Input label='Payment Reciept'\n            type='file'\n            accept=\"image/png, image/jpeg , application/pdf\"\n            onChange={this.handleselectedFile} />\n\n          <Form.Field>\n            <label>Amount</label>\n            <NumberFormat thousandSeparator={true} prefix={'රු '} value={this.state.donation_save_amount}\n              onValueChange={(values) => {\n                const { formattedValue, value } = values;\n                // formattedValue = $2,223\n                // value ie, 2223\n                this.setState({ donation_save_amount: value })\n              }}\n            />\n          </Form.Field>\n          <Divider hidden />\n          <Form.Button primary>Submit</Form.Button>\n        </Form>\n      </Tab.Pane>\n    );\n  }\n\n  hideUploadModal = () => {\n    this.setState({\n      modal_upload_visible: false,\n      donation_id:''\n    });\n  }\n\n  showUploadModal = (trnid) => {\n    console.log(`trnid:${trnid}`);\n    this.setState({\n      modal_upload_visible: true,\n      donation_update_file:null,\n      donation_id:trnid\n    });\n  }\n\n  showDonUrl = (url) => {\n    window.open(url, \"_blank\")\n  }\n\n  renderUpdateDonationUser = () => {\n  \n\n    return (\n      <Modal open={this.state.modal_upload_visible}\n        onClose={() => this.hideUploadModal()}\n        centered={false}\n        size={'mini'}\n      >\n\n        <Modal.Header>Upload Your Payment Receipt</Modal.Header>\n        <Modal.Content >\n          <Modal.Description>\n           \n            <Form loading={this.props.isReciptUploading} onSubmit={() => this.updateDonationUser()}>\n             \n              <Form.Input label='Upload your Payment Reciept'\n                type='file'\n                accept=\"image/png, image/jpeg , application/pdf\"\n                onChange={this.handleselectedFileUpdate}\n              />\n              <Form.Button primary>Update</Form.Button>\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n\n      </Modal>\n    );\n  }\n\n\n}\n\n\n\n\n/* Export Component ==================================================================== */\nexport default DonateViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n\n\n\n// The component we're mapping to\nimport DonateView from './DonateView';\n\n//Actions\nimport * as eventActions from '../../../redux/event/action';\nimport * as DonationActions from '../../../redux/donation/action';\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n    uid:state.auth.user.id,\n    isLoading_save:state.donation.isLoading,\n    saveError:state.donation.saveError,\n    liveEvent:state.event.liveEvent,\n    currentdonations:state.donation.currentdonations,\n    isReciptUploading:state.donation.isReciptUploading,\n    uploadError:state.donation.uploadError\n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n    loadCurrentEvent:eventActions.loadCurrentEvent,\n    saveDonation:DonationActions.saveDonation,\n    updateSelfDonationsList:DonationActions.updateSelfDonationsList,\n    uploadDonationImgOnlyAction:DonationActions.uploadDonationImgOnlyAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DonateView);\n","\nimport React, { Component } from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nclass TestViewContainer extends Component {\n\n  constructor(props) {\n    super();\n\n  }\n\n  componentDidMount = async () => {\n\n\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    return true;\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  clickButton = () => {\n    this.props.multiplyValue(this.state.value);\n  }\n\n\n  render = () => {\n    return (\n      <Row>\n        <Col sm={12}>\n          <Container>\n            <Segment>\n\n              <h2>Terms and Conditions for Sathkara</h2>\n              <h3>Introduction</h3>\n\n              These Website Standard Terms and Conditions written on this webpage shall manage your use of our website, Sathkara App accessible at http://sathkara-bb902.firebaseapp.com.\n              \n              These Terms will be applied fully and affect to your use of this Website. By using this Website, you agreed to accept all terms and conditions written in here. You must not use this Website if you disagree with any of these Website Standard Terms and Conditions. These Terms and Conditions have been generated over at the Terms And Conditions Template website.\n              \n              Minors or people below 18 years old are not allowed to use this Website.\n              Intellectual Property Rights\n              \n              Other than the content you own, under these Terms, Sathkara and/or its licensors own all the intellectual property rights and materials contained in this Website.\n              \n              You are granted limited license only for purposes of viewing the material contained on this Website.\n              Restrictions\n              \n              You are specifically restricted from all of the following:\n              \n                  publishing any Website material in any other media;\n                  selling, sublicensing and/or otherwise commercializing any Website material;\n                  publicly performing and/or showing any Website material;\n                  using this Website in any way that is or may be damaging to this Website;\n                  using this Website in any way that impacts user access to this Website;\n                  using this Website contrary to applicable laws and regulations, or in any way may cause harm to the Website, or to any person or business entity;\n                  engaging in any data mining, data harvesting, data extracting or any other similar activity in relation to this Website;\n                  using this Website to engage in any advertising or marketing.\n              \n              Certain areas of this Website are restricted from being access by you and Sathkara may further restrict access by you to any areas of this Website, at any time, in absolute discretion. Any user ID and password you may have for this Website are confidential and you must maintain confidentiality as well.\n              Your Content\n              \n              In these Website Standard Terms and Conditions, \"Your Content\" shall mean any audio, video text, images or other material you choose to display on this Website. By displaying Your Content, you grant Sathkara a non-exclusive, worldwide irrevocable, sub licensable license to use, reproduce, adapt, publish, translate and distribute it in any and all media.\n              \n              Your Content must be your own and must not be invading any third-party’s rights. Sathkara reserves the right to remove any of Your Content from this Website at any time without notice.\n              Your Privacy\n              \n              Please read our Privacy Policy.\n              No warranties\n              \n              This Website is provided \"as is,\" with all faults, and Sathkara express no representations or warranties, of any kind related to this Website or the materials contained on this Website. Also, nothing contained on this Website shall be interpreted as advising you.\n              Limitation of liability\n              \n              In no event shall Sathkara, nor any of its officers, directors and employees, shall be held liable for anything arising out of or in any way connected with your use of this Website whether such liability is under contract.  Sathkara, including its officers, directors and employees shall not be held liable for any indirect, consequential or special liability arising out of or in any way related to your use of this Website.\n              Indemnification\n              \n              You hereby indemnify to the fullest extent Sathkara from and against any and/or all liabilities, costs, demands, causes of action, damages and expenses arising in any way related to your breach of any of the provisions of these Terms.\n              Severability\n              \n              If any provision of these Terms is found to be invalid under any applicable law, such provisions shall be deleted without affecting the remaining provisions herein.\n              Variation of Terms\n              \n              Sathkara is permitted to revise these Terms at any time as it sees fit, and by using this Website you are expected to review these Terms on a regular basis.\n              Assignment\n              \n              The Sathkara is allowed to assign, transfer, and subcontract its rights and/or obligations under these Terms without any notification. However, you are not allowed to assign, transfer, or subcontract any of your rights and/or obligations under these Terms.\n              Entire Agreement\n              \n              These Terms constitute the entire agreement between Sathkara and you in relation to your use of this Website, and supersede all prior agreements and understandings.\n              Governing Law & Jurisdiction\n              \n              These Terms will be governed by and interpreted in accordance with the laws of the State of lk, and you submit to the non-exclusive jurisdiction of the state and federal courts located in lk for the resolution of any disputes.\n              \n              \n      </Segment>\n          </Container>\n        </Col>\n      </Row>\n\n    );\n  };\n\n\n\n}\n\n\n/* Export Component ==================================================================== */\nexport default TestViewContainer;\n","/**\n * Test Screen Container\n */\nimport { connect } from 'react-redux';\n\n\n\n\n// The component we're mapping to\nimport TermsView from './TermsView';\n\n\n\n// What data from the store shall we send to the component?\nconst mapStateToProps = state => ({\n \n});\n\n// Any actions to map to the component?\nconst mapDispatchToProps = {\n  \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TermsView);\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport {\n  Login,\n  App,\n  Test,\n  Dashboard,\n  Donation,\n  Terms\n} from '../_Views';\n\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/Auth' component={Login} />\n      <Route exact path='/Auth/:screen' component={Login} />\n      <Route path='/Terms' component={Terms} />\n      <App>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/donations' component={Donation} />\n          \n          <Route path='/:page' component={Test} />\n        </Switch>\n      </App>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Routes\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    isAuthenticated: false,\r\n    isAuthChecking: false,\r\n    user: {},\r\n    message: { msg_type: '', msg_txt: '' }\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"AUTH_REGISTER\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_LOGIN\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_CHECKING_START\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_CHECKING\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.user,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_LOGOUT_START\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading\r\n            };\r\n        case \"AUTH_FAILD\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                isLoading: false,\r\n                isAuthChecking:false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveinfo:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"UPDATE_LIVE_INFO\":\r\n            return {\r\n                ...state,\r\n                liveinfo: action.liveinfo\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveEvent:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"EVENT_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"EVENT_SET\":\r\n            return {\r\n                ...state,\r\n                liveEvent: action.liveEvent\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    saveError: '',\r\n    currentdonation: 0,\r\n    currentdonations: [],\r\n    isReciptUploading:false,\r\n    uploadError:''\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"DONATION_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading,\r\n                saveError: action.error\r\n            };\r\n        case \"DONATION_RECIPT_UPDATING\":\r\n            return {\r\n                ...state,\r\n                isReciptUploading: action.isLoading,\r\n                uploadError:action.error\r\n            };\r\n        case \"DONATION_UPDATE_USER_TOTAL\":\r\n            return {\r\n                ...state,\r\n                currentdonation: action.currentdonation\r\n            };\r\n        case \"DONATION_UPDATE_USER_DON\":\r\n            return {\r\n                ...state,\r\n                currentdonations: action.currentdonations\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport auth from './auth/reducer';\nimport app from './app/reducer';\nimport event from './event/reducer';\nimport donation from './donation/reducer'\n\nexport default combineReducers({\n    auth,\n    app,\n    event,\n    donation\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes/Routes';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst store = configureStore();\n\n\nReactDOM.render(\n  <Provider store={store}>  \n    <Routes/>\n  </Provider>,\n  document.getElementById('root')\n);","import { compose,createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux';\n\nexport default function configureStore(initialState) {\n   \n    \n    const reduxLogger = createLogger({predicate: (getState, action) => true});\n    let middlewares = [thunk]\n   \n    if(true){\n        middlewares = [...middlewares,reduxLogger];\n    }\n    return createStore(\n        \n        rootReducer,\n        initialState,\n        compose(applyMiddleware(...middlewares)),\n    );\n\n}","module.exports = __webpack_public_path__ + \"static/media/logo.b1043f85.jpg\";"],"sourceRoot":""}