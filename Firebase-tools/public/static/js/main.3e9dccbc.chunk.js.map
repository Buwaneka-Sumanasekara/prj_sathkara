{"version":3,"sources":["_Views/styles/img/donator.png","_Views/styles/img/boc.jpg","_Views/styles/img/bankicon.jpg","constants/firebase.js","redux/auth/action.js","_Views/base/App.js","_Views/containers/Login/LoginView.js","_Views/containers/Login/LoginContainer.js","_Views/containers/Test/TestView.js","_Views/containers/Test/TestContainer.js","redux/event/action.js","api/donation.js","api/notification.js","redux/donation/action.js","redux/notifications/action.js","common/index.js","_Views/containers/Dashboard/DashboardView.js","_Views/containers/Dashboard/DashboardContainer.js","redux/app/action.js","_Views/containers/Donate/DonateView.js","_Views/containers/Donate/DonateContainer.js","_Views/containers/Terms/TermsView.js","_Views/containers/Terms/TermsContainer.js","_Views/containers/Notification/NotifView.js","_Views/containers/Notification/NotifContainer.js","_Views/containers/Contact/ContactView.js","_Views/containers/Contact/ContactContainer.js","routes/Routes.js","redux/auth/reducer.js","redux/app/reducer.js","redux/event/reducer.js","redux/donation/reducer.js","redux/notifications/reducer.js","redux/index.js","index.js","configureStore.js","_Views/styles/img/logo.jpg"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","console","log","concat","process","JSON","stringify","firebase","apps","length","initializeApp","auth","database","storage","messaging","isSupported","usePublicVapidKey","error","WebAPI","serverKey","topic","createUser","user","obj","id","authtyp","img","fname","lname","mobile","email","saveUserToDatabase","dispatch","ref","child","set","status","msg","type","isLoading","message","msg_type","msg_txt","saveUserToDatabaseGoogle","setUserToRedux","uid","once","snap","val","authCheck","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","onAuthStateChanged","authUser","stop","this","_x3","apply","arguments","SCREEN_LOGOUT","SCREEN_LOGIN","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","_callee","_context","componentDidMount","_callee2","_context2","onMessage","payload","result","NotificationManager","info","body","title","navigator","serviceWorker","register","then","registration","useServiceWorker","catch","err","_openLogin","dualScreenLeft","undefined","window","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","document","documentElement","clientWidth","systemZoom","left","top","innerHeight","clientHeight","newWindow","open","focus","handleItemClick","name","setState","activeItem","authLogout","context","router","history","push","isAuthenticated","_renderFooter","react_default","createElement","reactstrap_es","Segment","clearing","_renderMenues","state","light","expand","onClick","e","Image","src","imgLogo","size","className","navbar","Label","image","color","basic","Icon","toggle","isOpen","notif_private_count","notif_topic_count","bind","assertThisInitialized","nextProps","nextState","authLoading","lib","sm","Dimmer","active","inverted","Loader","children","Component","contextTypes","PropTypes","object","mapDispatchToProps","authActions","_ref4","_callee4","_context4","signOut","_x4","connect","isAuthChecking","notifications","SCREEN_REGISTER","MSG_SIGNUP_SUCCESS","MSG_SIGNUP_ERROR","MSG_LOGIN_SUCCESS","MSG_LOGIN_ERROR","PROVIDER_GOOGLE","LognViewContainer","match","params","screen","clearForm","typ","reg_fname","reg_lname","reg_mobile","reg_email","reg_pass","reg_cpass","redirectToHome","close","validateReg","error_type","_setMessage","handleRegister","registerUser","validateLogin","login_email","login_pass","handleLogin","provider","loginUser","signInWithGoogle","_x","onchangetext","para","value","onchangetext_login","changeScreen","newscreen","_x2","render","md","offset","wrapped","renderLogin","renderSignup","showError","showSuccess","Message","hidden","content","positive","Inline","Button","Form","loading","onSubmit","Field","placeholder","onChange","evt","target","vertical","Group","Or","text","alertVisible","isCancelled","methodtype","time","_this2","setTimeout","scrollTo","_ref","createUserWithEmailAndPassword","pass","usermod","_ref2","signInWithEmailAndPassword","_ref5","_callee5","_context5","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","userinfo","profile","phoneNumber","picture","code","errorMessage","credential","_x5","LoginView","TestViewContainer","handleChange","event","clickButton","multiplyValue","url","mymarks","app","TestView","loadCurrentEvent","orderByChild","equalTo","on","snapshot","forEach","data","liveEvent","eventid","abrupt","fetch","timeout","method","headers","Accept","Content-Type","donation","getAllDonations","updateDonation","_","require","getDonationImgId","s4","Math","floor","random","toString","substring","getDonationObj","objnw","parseFloat","amt","ServerValue","TIMESTAMP","imgurl","trnid","donref","upobj","er","uploadDonationImgOnly","update","updateNotifications","_callee6","notif_topics_ref","notif_private_ref","_context6","ar","snap2","arseen","keys","map","i","sent","notif_topic","t0","notif_private","_ref6","_x6","askForPermissioToReceiveNotifications","_askForPermissioToReceiveNotifications","requestPermission","getToken","currentToken","updateUserToken","subscribeForCommonNotifications","TokenChange","_TokenChange","onTokenRefresh","refreshedToken","_updateUserToken","token","Authorization","notif","_donref","_upobj","istopic","DashboardViewContainer","commonFunctions","updateNotificationToken","updateAppLiveInfo","updateSelfDonations","handleDonationPress","CurEvent","renderHeader","renderRightSizeTop","centered","renderRightSizeBottom","Header","icon","place","date","Table","Body","Row","Cell","Statistic","Value","number_format_default","displayType","thousandSeparator","prefix","imgcontributors","inline","circular","liveinfo","currentdonation","eventActions","donations","amount","toArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","don","return","notifActions","tokenref","tokenr","tokenobj","DashboardView","MSG_CREATE_SUCCESS","MSG_CREATE_ERROR","MSG_UPLOAD_REC_SUCCESS","MSG_UPLOAD_REC_ERROR","DonateViewContainer","updateSelfDonationsList","user_type","LoadAllUsersDonations","donation_save_file","donation_save_amount","donation_update_file","modal_upload_visible","makeDonation","saveDonation","updateDonationUser","donation_id","uploadDonationImgOnlyAction","handleselectedFile","files","handleselectedFileUpdate","updateDonationStateUI","donid","notif_token","updateDonationState","panes","menuItem","renderDonation","renderPendingDonation","renderAprovesDonation","renderAlreadyApprovedDonation","Tab","menu","pointing","Pane","attached","success","renderUpdateDonationUser","celled","HeaderCell","currentdonations","key","date1","Date","crdate","toLocaleString","as","showDonUrl","showUploadModal","warning","negative","isLoading_save","header","List","horizontal","Item","avatar","BOCLogo","Content","bankIcon","Input","label","accept","onValueChange","values","formattedValue","Divider","primary","hideUploadModal","Modal","onClose","closeIcon","Description","isReciptUploading","Actions","currentDonations_All_Pending","_this3","rounded","Subheader","currentDonations_All_changed","_this4","saveError","uploadError","_this5","newdonref","postID","genImgName","file","fileName","filetyp","metadata","storageRef","uploadTask","contentType","split","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","apiResponse","respJson","donationApi","json","arPending","pending_ar","arChanged","other_ar","DonateView","TermsView","NotifViewContainer","showMsg","modal_msg_visible","modal_msg","isseen","_updateNotificationState","hideMsgModal","renderPrivateMsg","renderPublicMsg","renderMsgModal","notifo","NotifView","ContactViewContainer","showAccount","str","href","ContactView","Routes","BrowserRouter","Switch","Route","exact","path","component","Login","Terms","base_App","Dashboard","Donation","Notifications","ContactUs","Test","initialState","isAllDonationsLoading","combineReducers","action","objectSpread","store","reduxLogger","createLogger","predicate","getState","middlewares","thunk","toConsumableArray","createStore","rootReducer","compose","applyMiddleware","configureStore","ReactDOM","es","routes_Routes","getElementById"],"mappings":"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","file":"static/js/main.3e9dccbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donator.aa5ed7b2.png\";","module.exports = __webpack_public_path__ + \"static/media/boc.5f02b964.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bankicon.b85b649a.jpg\";","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport 'firebase/messaging';\r\n\r\nconst prodConfig = {\r\n  apiKey: \"AIzaSyCWfZqvMjAGIlDN6OrwqyK0kcyj1FyOaY8\",\r\n  authDomain: \"sathkara-bb902.firebaseapp.com\",\r\n  databaseURL: \"https://sathkara-bb902.firebaseio.com\",\r\n  projectId: \"sathkara-bb902\",\r\n  storageBucket: \"sathkara-bb902.appspot.com\",\r\n  messagingSenderId: \"937169849327\"\r\n};\r\n\r\nconst devConfig = {\r\n  apiKey: \"AIzaSyAJlP9GuVakGrCy5BN37gLx0kuDeZV5yOQ\",\r\n  authDomain: \"sathkara-test.firebaseapp.com\",\r\n  databaseURL: \"https://sathkara-test.firebaseio.com\",\r\n  projectId: \"sathkara-test\",\r\n  storageBucket: \"sathkara-test.appspot.com\",\r\n  messagingSenderId: \"1025410139450\"\r\n\r\n};\r\n\r\nconst config = process.env.NODE_ENV === 'production'\r\n  ? prodConfig\r\n  : devConfig;\r\n\r\nconsole.log(`Mode:${process.env.NODE_ENV}`)\r\nconsole.log(`System init as #${JSON.stringify(config)}#`)\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n  \r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\nconst storage = firebase.storage();\r\n\r\nlet messaging=null;\r\ntry {\r\n \r\n  if (firebase.messaging.isSupported()) {\r\n    messaging = firebase.messaging();\r\n    if (process.env.NODE_ENV === 'production') {\r\n      messaging.usePublicVapidKey(\"BFXAY4O1TFz7NOzz7qdzMr6f8WSLVfa0MyKCKH-DNAOI_9JOt7vOixxFUCXkS6d_BuEwoWToRG13I2EZiBJ436w\");\r\n    } else {\r\n      messaging.usePublicVapidKey(\"BL_8IFwrAbN4b0ycQ_haJ2fIRt2VSG8wiglsyOsdd4w0ZdnaOB4SenyKh7OOOn1bbAmmqDxoXsNERL_LgyQMRQA\");\r\n    }\r\n    \r\n  } else {\r\n    \r\n  }\r\n \r\n} catch (error) {\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nconst WebAPI = `https://${config.authDomain}/api/v1`;\r\nlet serverKey = \"\";\r\nif (process.env.NODE_ENV === 'production') {\r\n  serverKey = \"AAAA2jOtC-8:APA91bFxeQlY3zvt0sOp5nS9ax2fuNsdq-oovxz1aQ0nyL6MALD1eFXb_CUj8c9ACX4tXMJ6_yJwm4yYrmHuWfc_USYI7b71uFyPb0xq5SrOXu339sW0_Z6VtZS0deZb-6r5yi83VEew\"\r\n\r\n} else {\r\n  serverKey = \"AAAA7r81BTo:APA91bFSEOmIm5_NE_HQpl24EILdnv4PizLkk339g9R4MBgwdcn2gOcTW4NviGtmfOHwonXMtCcamwfJFYSlshMntBQ2PHdOFepxXYfMU0dT5cS3BPiCf90VOpJRfgWB2YbCB23MVtT3\"\r\n\r\n}\r\n\r\nlet topic='sathkara-common-notif';\r\n\r\nexport {\r\n  firebase,\r\n  auth,\r\n  database,\r\n  storage,\r\n  messaging,\r\n  WebAPI,\r\n  serverKey,\r\n  topic\r\n};","import { auth, database, firebase } from '../../constants/firebase';\r\n\r\nfunction createUser(user) {\r\n  let obj = {};\r\n  obj['id'] = user.id;\r\n  obj['authtyp'] = user.authtyp;\r\n  obj['img'] = user.img;\r\n  obj['fname'] = user.fname;\r\n  obj['lname'] = user.lname;\r\n  obj['mobile'] = user.mobile;\r\n  obj['email'] = user.email;\r\n  obj['user_type'] = 0;\r\n  return obj;\r\n}\r\n\r\nfunction saveUserToDatabase(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'SIGNUP';\r\n      msg = error;\r\n    } else {\r\n      status = 'SIGNUP_S';\r\n      msg = 'your registerd successfully!,Please sign-in ..';\r\n\r\n    }\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({\r\n      type: 'AUTH_REGISTER',\r\n      message: { msg_type: status, msg_txt: msg }\r\n    });\r\n  });\r\n}\r\n\r\nfunction saveUserToDatabaseGoogle(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'LOGIN';\r\n      msg = error;\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: status, msg_txt: msg } });\r\n    } else {\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n    }\r\n    \r\n  });\r\n}\r\n\r\nfunction setUserToRedux(dispatch, user) {\r\n  console.log(`${JSON.stringify(user.uid)}`);\r\n  let userref = database.ref(`user/${user.uid}`);\r\n  //userref.child(user.uid)\r\n  userref.once(\"value\", function (snap) {\r\n    console.log(snap);\r\n    \r\n    dispatch({ type: 'AUTH_SUCCESS', user: snap.val() });\r\n    dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n  });\r\n}\r\n\r\n\r\nexport function registerUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_REGISTER', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.createUserWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser.user.uid);\r\n        let usermod = user;\r\n        usermod['id'] = authUser.user.uid;\r\n        saveUserToDatabase(dispatch, createUser(usermod));\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_REGISTER', message: { msg_type: 'SIGNUP', msg_txt: error.message } });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function loginUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.signInWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN', msg_txt: error.message } });\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport function authCheck() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n    auth.onAuthStateChanged(authUser => {\r\n\r\n      if (authUser) {\r\n        setUserToRedux(dispatch, authUser)\r\n      } else {\r\n        // dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n        dispatch({ type: 'AUTH_FAILD' });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function authLogout() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_LOGOUT_START', isLoading: true });\r\n\r\n    auth.signOut().then(function () {\r\n\r\n      dispatch({ type: 'AUTH_FAILD' });\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function signInWithGoogle() {\r\n  return async dispatch => {\r\n\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n\r\n    auth.signInWithPopup(provider).then(authUser => {\r\n     \r\n      if(authUser.additionalUserInfo.isNewUser){\r\n        console.log(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n        let userinfo=authUser.additionalUserInfo.profile;\r\n        let usermod ={};\r\n        usermod['id'] = authUser.user.uid;\r\n        usermod['fname'] = userinfo['given_name'];\r\n        usermod['lname'] = userinfo['family_name'];\r\n        usermod['mobile'] = authUser.user.phoneNumber;\r\n        usermod['email'] = userinfo.email;\r\n        usermod['pass'] = '.';\r\n        usermod['authtyp'] = 'GOOGLE';\r\n        usermod['img'] = userinfo.picture;\r\n\r\n        saveUserToDatabaseGoogle(dispatch, createUser(usermod));\r\n        \r\n      }else{\r\n        dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n        auth.onAuthStateChanged(authUser => {\r\n    \r\n          if (authUser) {\r\n            \r\n            setUserToRedux(dispatch, authUser)\r\n          } else {\r\n            dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n            dispatch({ type: 'AUTH_FAILD' });\r\n          }\r\n        });\r\n      }\r\n\r\n      \r\n    }).catch(function (error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n      console.error(`login error:${errorMessage}`);\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/css/theme.min.css';\r\nimport { messaging } from '../../constants/firebase';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col, Collapse, Nav, Navbar, NavItem, NavLink, NavbarBrand, NavbarToggler } from 'reactstrap';\r\nimport { Dimmer, Loader, Image, Segment, Header, Icon, Label, Button } from 'semantic-ui-react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n//Actions\r\nimport * as authActions from '../../redux/auth/action';\r\n\r\n\r\nimport imgLogo from '../styles/img/logo.jpg';\r\n\r\n\r\nlet SCREEN_LOGOUT = 'Logout';\r\nlet SCREEN_LOGIN = 'Login';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    this.state = {\r\n      activeItem: \"\",\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n  componentWillMount = async () => {\r\n    await this.props.authCheck();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      if (messaging !== null) {\r\n        messaging.onMessage(function (payload) {\r\n          //  console.log(\"Message received . \", payload);\r\n          var result = payload['notification'];\r\n          /*console.log(\"Message received . \", result);\r\n          let myColor = { background: '#8B0000', text: \"#FFFFFF\" };\r\n          notify.show(result['body'], \"custom\", 10000, myColor);*/\r\n          NotificationManager.info(result.body, result.title, 5000, () => console.log(), true);\r\n\r\n        });\r\n\r\n        if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('../firebase-messaging-sw.js')\r\n            .then(function (registration) {\r\n              messaging.useServiceWorker(registration);\r\n            }).catch(function (err) {\r\n              console.log('Service worker registration failed, error:', err);\r\n            });\r\n        }\r\n\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(`error in App message setup`)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\r\n      if (nextProps.isAuthenticated === false) {\r\n        this.context.router.history.push(`/`);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n  _openLogin = () => {\r\n    let w=1000;\r\n    let h=800;\r\n\r\n    // Fixes dual-screen position                         Most browsers      Firefox\r\n    var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : window.screenX;\r\n    var dualScreenTop = window.screenTop != undefined ? window.screenTop : window.screenY;\r\n\r\n    var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : 1024;\r\n    var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : 700;\r\n\r\n    var systemZoom = width / 700;\r\n    var left = (width - w) / 2 / systemZoom + dualScreenLeft\r\n    var top = (height - h) / 2 / systemZoom + dualScreenTop\r\n    var newWindow = window.open('/Auth/Login', 'Login', 'scrollbars=yes, width=' + w / systemZoom + ', height=' + h / systemZoom + ', top=' + top + ', left=' + left);\r\n\r\n    // Puts focus on the newWindow\r\n    if (window.focus) newWindow.focus();\r\n   // window.open('/Auth/Login', 'Login', 'toolbar=0,status=0,width=548,height=325');\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name });\r\n    if (name === SCREEN_LOGOUT) {\r\n      this.props.authLogout();\r\n    } else if (name === 'Home') {\r\n      this.context.router.history.push(`/`);\r\n    } else if (name === 'Donation') {\r\n      if (this.props.isAuthenticated) {\r\n        this.context.router.history.push(`/donations`);\r\n      } else {\r\n        //this.context.router.history.push(`/Auth/Login`);\r\n        this._openLogin();\r\n      }\r\n\r\n    } else if (name === 'Notification') {\r\n      this.context.router.history.push(`/notifications`);\r\n    } else if (name === 'Contactus') {\r\n      this.context.router.history.push(`/contact-us`);\r\n    } else if (name === SCREEN_LOGIN) {\r\n      // this.context.router.history.push(`/Auth/Login`);\r\n      this._openLogin();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <NotificationContainer />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {this.props.authLoading && (\r\n            <Col sm={12}>\r\n              <Segment basic>\r\n\r\n                <center>\r\n                  <Image src={imgLogo} />\r\n                </center><br />\r\n\r\n                <Dimmer active inverted>\r\n\r\n                  <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <br />\r\n              </Segment>\r\n            </Col>\r\n          )}\r\n          {this.props.authLoading === false && (\r\n            <Col sm={12}>\r\n              {this._renderMenues()}\r\n              {this.props.children}\r\n              {this._renderFooter()}\r\n            </Col>\r\n          )}\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  _renderFooter = () => {\r\n    return (\r\n\r\n      <Row>\r\n        <Col>\r\n          <br />\r\n          <Segment clearing>\r\n            <p>© Team සත්කාර</p>\r\n          </Segment>\r\n        </Col>\r\n      </Row>\r\n\r\n    );\r\n  }\r\n\r\n  _renderMenues = () => {\r\n    const { activeItem } = this.state\r\n    if (this.props.isAuthenticated === false) {\r\n      return (\r\n        <Navbar light expand=\"md\">\r\n          <NavbarBrand onClick={(e) => this.handleItemClick(\"Home\")}><Image src={imgLogo} size='tiny' /></NavbarBrand>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem onClick={(e) => this.handleItemClick(\"Home\")}>\r\n              <NavLink >\r\n                <Label image color='blue' basic>\r\n                  <Icon\r\n                    name={\"home\"}\r\n                    size='large'\r\n                    color='blue'\r\n                  />\r\n                  Home\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={(e) => this.handleItemClick(\"Donation\")}>\r\n              <NavLink >\r\n                <Label image color='red' basic>\r\n                  <Icon\r\n                    name={\"heartbeat\"}\r\n                    size='large'\r\n                    color='red'\r\n                  />\r\n                  Donate Now !\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={(e) => this.handleItemClick(\"Contactus\")}>\r\n              <NavLink >\r\n                <Label image color='blue' basic>\r\n                  <Icon\r\n                    name={\"phone\"}\r\n                    size='large'\r\n                    color='blue'\r\n                  />\r\n                  Contact Us\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n\r\n          </Nav>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink onClick={(e) => this.handleItemClick(SCREEN_LOGIN)}>\r\n                  <Label color='blue' basic>\r\n                    <Icon\r\n                      name={\"lock\"}\r\n                      size='large'\r\n                      color='blue'\r\n                    />\r\n                    Login\r\n              </Label>\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      );\r\n\r\n    }\r\n    return (\r\n      <Navbar light expand=\"md\">\r\n        <NavbarBrand onClick={(e) => this.handleItemClick(\"Home\")}><Image src={imgLogo} size='tiny' /></NavbarBrand>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem onClick={(e) => this.handleItemClick(\"Home\")}>\r\n            <NavLink >\r\n              <Label image color='blue' basic>\r\n                <Icon\r\n                  name={\"home\"}\r\n                  size='large'\r\n                  color='blue'\r\n                />\r\n                Home\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem onClick={(e) => this.handleItemClick(\"Donation\")}>\r\n            <NavLink >\r\n              <Label image color='red' basic>\r\n                <Icon\r\n                  name={\"heartbeat\"}\r\n                  size='large'\r\n                  color='red'\r\n                />\r\n                Donate Now !\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n          \r\n          <NavItem onClick={(e) => this.handleItemClick(\"Contactus\")}>\r\n            <NavLink >\r\n              <Label image color='blue' basic>\r\n                <Icon\r\n                  name={\"phone\"}\r\n                  size='large'\r\n                  color='blue'\r\n                />\r\n                Contact Us\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n\r\n        </Nav>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem onClick={(e) => this.handleItemClick(\"Notification\")}>\r\n              <NavLink >\r\n                <Label color='orange' >\r\n                  <Icon name='bell outline' />{(this.props.notif_private_count + this.props.notif_topic_count)}\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n\r\n            <NavItem>\r\n              <NavLink >\r\n                <Label image color='blue' basic>\r\n                  <img src={this.props.user.img} />\r\n                  {`${this.props.user.fname} ${this.props.user.lname}`}\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n\r\n\r\n            <NavItem>\r\n              <NavLink onClick={(e) => this.handleItemClick(SCREEN_LOGOUT)}>\r\n                <Label color='blue' basic>\r\n                  <Icon\r\n                    name={\"close\"}\r\n                    size='large'\r\n                    color='blue'\r\n                  />\r\n                  Logout\r\n              </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n\r\n\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.isAuthChecking,\r\n  notif_private_count: state.notifications.notif_private_count,\r\n  notif_topic_count: state.notifications.notif_topic_count\r\n});\r\nconst mapDispatchToProps = {\r\n  authCheck: authActions.authCheck,\r\n  authLogout: authActions.authLogout,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Image, Label, Button, Dimmer, Loader, Form, Segment, Message, Icon, Header } from 'semantic-ui-react';\r\nimport imgLogo from '../../styles/img/logo.jpg';\r\n\r\nconst SCREEN_LOGIN = 'Login';\r\nconst SCREEN_REGISTER = 'Register';\r\nconst SCREEN_VERIFY = 'Verify';\r\n\r\nconst MSG_SIGNUP_SUCCESS = 'SIGNUP_S';\r\nconst MSG_SIGNUP_ERROR = 'SIGNUP';\r\nconst MSG_LOGIN_SUCCESS = 'LOGIN_S';\r\nconst MSG_LOGIN_ERROR = 'LOGIN';\r\n\r\nconst PROVIDER_GOOGLE = \"Google-SignIn\";\r\n\r\nclass LognViewContainer extends Component {\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      screen: SCREEN_LOGIN,\r\n      alertVisible: true,\r\n      error: '',\r\n      error_type: '',\r\n      reg_fname: '',\r\n      reg_lname: '',\r\n      reg_mobile: '',\r\n      reg_email: \"\",\r\n      reg_pass: \"\",\r\n      reg_cpass: \"\",\r\n      login_email: \"\",\r\n      login_pass: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    console.log(`screen:${this.props.match.params.screen}`);\r\n    await this.props.authCheck();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isCancelled = true;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\r\n      console.log(`Auth statues:${nextProps.isAuthenticated}`)\r\n      if (nextProps.isAuthenticated === false) {\r\n        if (this.props.match.params.screen === undefined) {\r\n          this.changeScreen(SCREEN_LOGIN);\r\n        } else {\r\n          this.changeScreen(this.props.match.params.screen);\r\n        }\r\n      } else {\r\n        this.redirectToHome();\r\n      }\r\n\r\n    }\r\n    else if (this.props.message.msg_type !== nextProps.message.msg_type) {\r\n      this._setMessage(nextProps.message.msg_type, nextProps.message.msg_txt, 3000);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n\r\n  /*ERROR HANDLING*/\r\n\r\n  _setMessage(methodtype, msg, time) {\r\n    //console.log(`error set:${methodtype},${msg}`)\r\n    if (methodtype === MSG_LOGIN_SUCCESS) {\r\n      this.redirectToHome();\r\n    } else {\r\n      this.setState({ error_type: methodtype, error: msg });\r\n      if (time === undefined) {\r\n        setTimeout(() => {\r\n          this.setState({ error_type: '', error: '' })\r\n        }, 2000)\r\n      } else {\r\n        setTimeout(() => {\r\n          this.setState({ error_type: '', error: '' })\r\n        }, time)\r\n      }\r\n\r\n      this.clearForm(methodtype);\r\n      window.scrollTo(0, 0);\r\n    }\r\n\r\n  }\r\n  /*END:ERROR HANDLING*/\r\n\r\n  clearForm = (typ) => {\r\n    if (typ === MSG_SIGNUP_SUCCESS) {\r\n      this.setState({\r\n        reg_fname: '',\r\n        reg_lname: '',\r\n        reg_mobile: '',\r\n        reg_email: \"\",\r\n        reg_pass: \"\",\r\n        reg_cpass: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  redirectToHome = () => {\r\n    //this.context.router.history.push(`/`);\r\n    window.close();\r\n  }\r\n\r\n  validateReg = () => {\r\n    this.setState({ error_type: '', error: '' });\r\n    let state = true;\r\n    let msg = \"\";\r\n\r\n    if (this.state.reg_fname === '') {\r\n      state = false;\r\n      msg = 'Please enter your first name';\r\n    } else if (this.state.reg_lname === '') {\r\n      state = false;\r\n      msg = 'Please enter your Last name';\r\n    } else if (this.state.reg_mobile === '') {\r\n      state = false;\r\n      msg = 'Please enter your mobile no';\r\n    } else if (this.state.reg_email === '') {\r\n      state = false;\r\n      msg = 'Please enter your email';\r\n    } else if (this.state.reg_pass === '') {\r\n      state = false;\r\n      msg = 'Please enter your password';\r\n    } else if (this.state.reg_pass !== this.state.reg_cpass) {\r\n      state = false;\r\n      msg = 'passwords should be matched!';\r\n    }\r\n\r\n    if (state === false) {\r\n      this._setMessage(MSG_SIGNUP_ERROR, msg, 3000);\r\n    }\r\n    return state;\r\n  }\r\n  handleRegister = async () => {\r\n    if (this.validateReg()) {\r\n      let user = {};\r\n      user['fname'] = this.state.reg_fname;\r\n      user['lname'] = this.state.reg_lname;\r\n      user['mobile'] = this.state.reg_mobile;\r\n      user['email'] = this.state.reg_email;\r\n      user['pass'] = this.state.reg_pass;\r\n      user['authtyp'] = 'EMAIL';\r\n      user['img'] = 'https://firebasestorage.googleapis.com/v0/b/sathkara-bb902.appspot.com/o/defaults%2Fuser.png?alt=media&token=69817bb3-ac5b-4be8-ab7d-a155bff173c1';\r\n\r\n      await this.props.registerUser(user);\r\n    }\r\n  }\r\n\r\n  validateLogin = () => {\r\n    this.setState({ error_type: '', error: '' });\r\n    let state = true;\r\n    let msg = \"\";\r\n\r\n    if (this.state.login_email === '') {\r\n      state = false;\r\n      msg = 'Please enter your email';\r\n    } else if (this.state.login_pass === '') {\r\n      state = false;\r\n      msg = 'Please enter your password';\r\n    }\r\n\r\n    if (state === false) {\r\n      this._setMessage(MSG_LOGIN_ERROR, msg, 3000);\r\n    }\r\n    return state;\r\n  }\r\n  handleLogin = async (provider) => {\r\n    if (provider === '') {\r\n      if (this.validateLogin()) {\r\n        let user = {};\r\n        user['email'] = this.state.login_email;\r\n        user['pass'] = this.state.login_pass;\r\n        await this.props.loginUser(user);\r\n      }\r\n    } else {\r\n      this.props.signInWithGoogle();\r\n    }\r\n\r\n  }\r\n\r\n  onchangetext = (para, value) => {\r\n    if (para === 'reg_fname') {\r\n      this.setState({ reg_fname: value });\r\n    } else if (para === 'reg_lname') {\r\n      this.setState({ reg_lname: value });\r\n    } else if (para === 'reg_mobile') {\r\n      this.setState({ reg_mobile: value });\r\n    } else if (para === 'reg_email') {\r\n      this.setState({ reg_email: value });\r\n    } else if (para === 'reg_pass') {\r\n      this.setState({ reg_pass: value });\r\n    } else if (para === 'reg_cpass') {\r\n      this.setState({ reg_cpass: value });\r\n    }\r\n  }\r\n  onchangetext_login = (para, value) => {\r\n    if (para === 'login_email') {\r\n      this.setState({ login_email: value });\r\n    } else if (para === 'login_pass') {\r\n      this.setState({ login_pass: value });\r\n    }\r\n  }\r\n\r\n  changeScreen = async (newscreen) => {\r\n\r\n    this.setState({\r\n      screen: newscreen\r\n    }, () => {\r\n      this.context.router.history.push(`/Auth/${newscreen}`);\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*RENDER FUNCTIONS*/\r\n  render = () => {\r\n    if (this.props.authLoading) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Segment basic>\r\n\r\n                <center>\r\n                  <Image src={imgLogo} />\r\n                </center><br />\r\n\r\n                <Dimmer active inverted>\r\n                  <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <br />\r\n              </Segment>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n\r\n        <Row>\r\n          <Col md={{ size: 6, offset: 3 }}>\r\n            <Row>\r\n              <Col md={{ size: 4, offset: 4 }}>\r\n                <Image src={imgLogo} size='small' wrapped />\r\n              </Col>\r\n            </Row>\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n\r\n\r\n          {this.state.screen === SCREEN_LOGIN && (\r\n            this.renderLogin()\r\n          )}\r\n          {this.state.screen === SCREEN_REGISTER && (\r\n            this.renderSignup()\r\n          )}\r\n\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  renderLogin = () => {\r\n    let showError = (this.state.error_type === MSG_LOGIN_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_LOGIN_SUCCESS && this.state.error !== '');\r\n    return (\r\n      <Col md={{ size: 4, offset: 4 }}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={this.state.error}\r\n        />\r\n        <Message\r\n          hidden={!showSuccess}\r\n          positive\r\n          content={this.state.error}\r\n        />\r\n\r\n\r\n\r\n        <Segment >\r\n          <center>\r\n            <Segment.Inline>\r\n              <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\r\n                <Icon name='google plus g' /> Signin with Your Google Acount\r\n          </Button>\r\n\r\n              <p>OR</p>\r\n            </Segment.Inline>\r\n\r\n          </center>\r\n        </Segment>\r\n\r\n\r\n        <Form loading={this.props.isLoading || this.props.authLoading} onSubmit={() => this.handleLogin('')}>\r\n\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <input type=\"email\" placeholder='abc@example.com' value={this.state.login_email} onChange={(evt) => this.onchangetext_login('login_email', evt.target.value)} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Password</label>\r\n            <input type=\"password\" value={this.state.login_pass} onChange={(evt) => this.onchangetext_login('login_pass', evt.target.value)} />\r\n          </Form.Field>\r\n          <Button color='blue'>Login</Button>\r\n        </Form>\r\n        <Segment vertical></Segment>\r\n        <br />\r\n        <Button.Group>\r\n          <Label>If your not registerd yet </Label>\r\n          <Button.Or text='->' />\r\n          <Button color='teal' onClick={() => this.changeScreen(SCREEN_REGISTER)}>Sign up here</Button>\r\n        </Button.Group>\r\n\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  renderSignup = () => {\r\n    let showError = (this.state.error_type === MSG_SIGNUP_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_SIGNUP_SUCCESS && this.state.error !== '');\r\n\r\n    return (\r\n      <Col md={{ size: 6, offset: 3 }}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={this.state.error}\r\n        />\r\n        <Message\r\n          hidden={!showSuccess}\r\n          positive\r\n          content={this.state.error}\r\n        />\r\n        <Segment>\r\n          <center>\r\n            <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\r\n              <Icon name='google plus g' /> Signup with Your Google Acount\r\n          </Button>\r\n\r\n            <p>OR</p>\r\n          </center>\r\n        </Segment>\r\n\r\n        <Form loading={this.props.isLoading} onSubmit={() => this.handleRegister()}>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Field>\r\n                <label>First Name</label>\r\n                <input placeholder='First Name' value={this.state.reg_fname} onChange={(evt) => this.onchangetext('reg_fname', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Last Name</label>\r\n                <input placeholder='Last Name' value={this.state.reg_lname} onChange={(evt) => this.onchangetext('reg_lname', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Mobile No</label>\r\n                <input placeholder='+94770000000' value={this.state.reg_mobile} onChange={(evt) => this.onchangetext('reg_mobile', evt.target.value)} />\r\n              </Form.Field>\r\n\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input placeholder='abc@example.com' value={this.state.reg_email} onChange={(evt) => this.onchangetext('reg_email', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input type='password' value={this.state.reg_pass} onChange={(evt) => this.onchangetext('reg_pass', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Confirm Password</label>\r\n                <input type='password' value={this.state.reg_cpass} onChange={(evt) => this.onchangetext('reg_cpass', evt.target.value)} />\r\n              </Form.Field>\r\n            </Col>\r\n          </Row><br />\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Button type='submit' positive >Register</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Form>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Segment vertical></Segment>\r\n            <br />\r\n            <Label>If your already registered ?\r\n        <Button onClick={() => this.changeScreen(SCREEN_LOGIN)}> Sign-in here</Button> </Label>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default LognViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n// The component we're mapping to\r\nimport LoginView from './LoginView';\r\n\r\n//Actions\r\nimport * as authActions from '../../../redux/auth/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    authLoading: state.auth.isAuthChecking,\r\n    isLoading:state.auth.isLoading,\r\n    message:state.auth.message\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n   registerUser:authActions.registerUser,\r\n   loginUser:authActions.loginUser,\r\n   authCheck: authActions.authCheck,\r\n   signInWithGoogle:authActions.signInWithGoogle\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n","\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass TestViewContainer extends Component {\r\n  \r\n  constructor(props){\r\n    super();\r\n    this.state ={\r\n      value:0\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    \r\n   \r\n  }\r\n\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({value: event.target.value});\r\n  }\r\n   \r\n  clickButton = () =>{\r\n    this.props.multiplyValue(this.state.value);\r\n  }\r\n\r\n\r\n  render = () => {\r\n     return (\r\n    <div>\r\n         <h1>{`Req URL:${this.props.match.url} `}</h1>\r\n     \r\n        \r\n      </div>\r\n     );\r\n  };\r\n\r\n \r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default TestViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport TestView from './TestView';\r\n\r\n//Actions\r\nimport * as AppActions from '../../../redux/app/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n  mymarks:state.app.value\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestView);\r\n","import {  database } from '../../constants/firebase';\r\n\r\nexport function loadCurrentEvent() {\r\n   \r\n    return async dispatch => {\r\n      let userref = database.ref(`events`);\r\n      userref.orderByChild('active').equalTo(true).on(\"value\", function(snapshot) {\r\n       // console.log(snapshot.val());\r\n        snapshot.forEach(function(data) {\r\n         // console.log(JSON.stringify(data));\r\n          dispatch({ type: 'EVENT_SET', liveEvent: data.val() });\r\n        });\r\n      \r\n    });\r\n      \r\n    }\r\n}","import { WebAPI } from '../constants/firebase';\r\n\r\nasync function getAllDonations(eventid) {\r\nconsole.log(WebAPI);\r\n    return fetch(`${WebAPI}/getdonations/${eventid}`, {\r\n        timeout: 1200*1000,\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    });\r\n\r\n}\r\n\r\nasync function updateDonation(obj) {\r\n  \r\n        return fetch(`${WebAPI}/updateDonation`, {\r\n            timeout: 1200*1000,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body:JSON.stringify(obj)\r\n        });\r\n    \r\n    }\r\n\r\nexport default {\r\n    getAllDonations,\r\n    updateDonation\r\n}","import { WebAPI } from '../constants/firebase';\r\n\r\nasync function sendNotificationNotSaved(notif) {\r\n    console.log(WebAPI);\r\n    return fetch(`${WebAPI}/sendNotification`, {\r\n        timeout: 1200 * 1000,\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },body:JSON.stringify(notif)\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    sendNotificationNotSaved\r\n}","import { database, storage, firebase } from '../../constants/firebase';\r\nimport { donationApi } from '../../api'\r\nvar _ = require('lodash');\r\n\r\n\r\nfunction getDonationImgId() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4() + '' + s4() + '' + s4() + '' + s4() + '' + s4() + s4() + s4();\r\n}\r\n\r\nfunction getDonationObj(obj) {\r\n  let objnw = {};\r\n  objnw['eventid'] = obj.eventid;\r\n  objnw['uid'] = obj.uid;\r\n  objnw['amount'] = parseFloat(obj.amt);\r\n  objnw['donation-state'] = 0; //0=pending,1=aproved,2=cancelled\r\n  objnw['crdate'] = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n\r\n  if (obj.id !== undefined) {\r\n    objnw['id'] = obj.id;\r\n    objnw['imgurl'] = obj.imgurl;\r\n    objnw['imgurl-available'] = obj['imgurl-available'];\r\n  }\r\n\r\n\r\n  return objnw;\r\n}\r\n\r\nfunction updateDonation(dispatch, trnid, imgurl, obj) {\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${trnid}`);\r\n  let upobj = obj;\r\n  upobj['id'] = trnid;\r\n  upobj['imgurl'] = imgurl;\r\n  if (imgurl === '') {\r\n    upobj['imgurl-available'] = false;\r\n  } else {\r\n    upobj['imgurl-available'] = true;\r\n  }\r\n  donref.set(getDonationObj(upobj), function (er) {\r\n    if (er) {\r\n      \r\n      dispatch({ type: 'DONATION_LOADING', error: \"Data could not be saved.\" + er, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: false });\r\n      \r\n    }\r\n  });\r\n\r\n}\r\n\r\nexport function saveDonation(obj) {\r\n\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: true });\r\n\r\n      let donref = database.ref(`donations/${obj.eventid}/${obj.uid}`);\r\n      var newdonref = donref.push(getDonationObj(obj));\r\n      var postID = newdonref.key;\r\n\r\n      if (obj.img !== null) {\r\n        let genImgName = getDonationImgId();\r\n        let file = obj.img;\r\n        let fileName = obj.img.name;\r\n        let filetyp = obj.img.type;\r\n\r\n        var metadata = {\r\n          contentType: filetyp\r\n        };\r\n\r\n        console.log(`File name:${genImgName}.${filetyp}`)\r\n        var storageRef = storage.ref();\r\n\r\n        var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n        // Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n          function (snapshot) {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n              case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                console.log('Upload is paused');\r\n                break;\r\n              case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                console.log('Upload is running');\r\n                break;\r\n            }\r\n          }, function (error) {\r\n\r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n              case 'storage/unauthorized':\r\n                // User doesn't have permission to access the object\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Unothorized', isLoading: false });\r\n                break;\r\n\r\n              case 'storage/canceled':\r\n                // User canceled the upload\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Cancel', isLoading: false });\r\n                break;\r\n              case 'storage/unknown':\r\n                // Unknown error occurred, inspect error.serverResponse;\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Unkonwn', isLoading: false });\r\n                break;\r\n            }\r\n          }, function () {\r\n            // Upload completed successfully, now we can get the download URL\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n              console.log('File available at', downloadURL);\r\n              updateDonation(dispatch, postID, downloadURL, obj)\r\n            });\r\n          });\r\n\r\n\r\n      } else {\r\n        //no image\r\n        console.log(`no image`)\r\n        updateDonation(dispatch, postID, '', obj);\r\n      }\r\n\r\n    } catch (error) {\r\n      dispatch({ type: 'DONATION_LOADING', error: error.message, isLoading: false });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nexport function updateSelfDonations(eventid, uid) {\r\n  return async dispatch => {\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n      console.log(ar);\r\n      for (let don of ar) {\r\n        if (don['donation-state'] !== 2) {//not cancelled\r\n          amount += don.amount;\r\n        }\r\n      }\r\n      dispatch({ type: 'DONATION_UPDATE_USER_TOTAL', currentdonation: amount });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function updateSelfDonationsList(eventid, uid) {\r\n  return async dispatch => {\r\n    console.log(`donations/${eventid}/${uid}`)\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n\r\n      dispatch({ type: 'DONATION_UPDATE_USER_DON', currentdonations: ar });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function uploadDonationImgOnlyAction(obj) {\r\n  return async dispatch => {\r\n    console.log(`Don id :${obj.id}`)\r\n    dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: true });\r\n    if (obj.img !== null) {\r\n      let genImgName = getDonationImgId();\r\n      let file = obj.img;\r\n      let fileName = obj.img.name;\r\n      let filetyp = obj.img.type;\r\n\r\n      var metadata = {\r\n        contentType: filetyp\r\n      };\r\n\r\n      console.log(`File name:${genImgName}.${filetyp}`)\r\n      var storageRef = storage.ref();\r\n\r\n      var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n      // Listen for state changes, errors, and completion of the upload.\r\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n        function (snapshot) {\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n          switch (snapshot.state) {\r\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n              console.log('Upload is paused');\r\n              break;\r\n            case firebase.storage.TaskState.RUNNING: // or 'running'\r\n              console.log('Upload is running');\r\n              break;\r\n          }\r\n        }, function (error) {\r\n\r\n          // A full list of error codes is available at\r\n          // https://firebase.google.com/docs/storage/web/handle-errors\r\n          switch (error.code) {\r\n            case 'storage/unauthorized':\r\n              // User doesn't have permission to access the object\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Unothorized', isLoading: false });\r\n              break;\r\n\r\n            case 'storage/canceled':\r\n              // User canceled the upload\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Cancel', isLoading: false });\r\n              break;\r\n            case 'storage/unknown':\r\n              // Unknown error occurred, inspect error.serverResponse;\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Unkonwn', isLoading: false });\r\n              break;\r\n          }\r\n        }, function () {\r\n          // Upload completed successfully, now we can get the download URL\r\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n            console.log('File available at', downloadURL);\r\n            uploadDonationImgOnly(dispatch, downloadURL, obj);\r\n          });\r\n        });\r\n    } else {\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Please select your file', isLoading: false });\r\n    }\r\n  }\r\n}\r\n\r\nfunction uploadDonationImgOnly(dispatch, imgurl, obj) {\r\n  console.log(`donations/${obj.eventid}/${obj.uid}/${obj.id}`)\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${obj.id}`);\r\n  let upobj = obj;\r\n  upobj['imgurl'] = imgurl;\r\n  upobj['imgurl-available'] = true;\r\n\r\n  donref.update(upobj, function (er) {\r\n    if (er) {\r\n\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: `Update details faild ${er}`, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: false });\r\n    }\r\n  });\r\n}\r\n\r\nexport function LoadAllUsersDonations(eventid) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: true });\r\n      const apiResponse = await donationApi.getAllDonations(eventid);\r\n      console.log(apiResponse)\r\n      const respJson = await apiResponse.json();\r\n      if (apiResponse.status === 200) {\r\n\r\n        dispatch({ type: 'DONATION_LOAD_ALL', arPending: respJson.pending_ar, arChanged: respJson.other_ar });\r\n      } else {\r\n\r\n        console.error(`Error:${respJson.msg}`)\r\n        dispatch({ type: 'DONATION_LOAD_ALL', arPending: respJson.pending_ar, arChanged: respJson.other_ar });\r\n      }\r\n\r\n\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: false });\r\n\r\n    } catch (error) {\r\n      console.log(`Error:${error}`)\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: false });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateDonationState(obj) {\r\n  return async dispatch => {\r\n    console.log(JSON.stringify(obj))\r\n    const apiResponse = await donationApi.updateDonation(obj);\r\n    console.log(apiResponse)\r\n    const respJson = await apiResponse.json();\r\n    if (apiResponse.status === 200) {\r\n\r\n    }\r\n\r\n  }\r\n}","import { database } from '../../constants/firebase';\r\n\r\n\r\nexport function updateNotificationToken(uid) {\r\n  return async dispatch => {\r\n    try {\r\n      let tokenref = database.ref(`user-notif-tokens/${uid}`);\r\n    const tokenr= await tokenref.once(\"value\");\r\n   let tokenobj= tokenr.val();\r\n    console.log(`Update token redux:${tokenobj.token}`)\r\n    dispatch({ type: 'NOTIF_TOKEN_UPDATE', token: tokenobj.token });\r\n    } catch (error) {\r\n      \r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport function updateNotifications(uid) {\r\n  return async dispatch => {\r\n    try {\r\n      let notif_topics_ref = database.ref(`notifications/topics`);\r\n      notif_topics_ref.once(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_topics_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_TOPIC_UPDATE', notif_topic: ar, notif_topic_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n        }\r\n      });\r\n\r\n      notif_topics_ref.on(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_topics_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_TOPIC_UPDATE', notif_topic: ar, notif_topic_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      let notif_private_ref = database.ref(`notifications/users/${uid}`);\r\n      notif_private_ref.once(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_private_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_USER_UPDATE', notif_private: ar, notif_private_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n\r\n\r\n      });\r\n      notif_private_ref.on(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_private_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_USER_UPDATE', notif_private: ar, notif_private_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(`Error in notf load: ${error}`)\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { messaging,serverKey,database,topic } from '../constants/firebase';\r\n\r\n\r\nexport async function askForPermissioToReceiveNotifications(uid) {\r\n  try {\r\n    if(messaging !==null){\r\n\r\n    \r\n    messaging.requestPermission().then(function () {\r\n      console.log('Notification permission granted.');\r\n      \r\n      messaging.getToken().then(function(currentToken) {\r\n        if (currentToken) {\r\n          console.log(`Msg Token:`);\r\n          console.log(currentToken)\r\n  \r\n          updateUserToken(uid,currentToken);\r\n          subscribeForCommonNotifications(currentToken);\r\n\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No Instance ID token available. Request permission to generate one.');\r\n        }\r\n      }).catch(function(err) {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n      });\r\n    }).catch(function (err) {\r\n      console.log('Unable to get permission to notify.', err);\r\n    });\r\n  }\r\n  } catch (error) {\r\n    \r\n  }\r\n \r\n}\r\n\r\n\r\nexport async function TokenChange(uid) {\r\n  if(messaging!==null){\r\n    messaging.onTokenRefresh(function() {\r\n      messaging.getToken().then(function(refreshedToken) {\r\n        console.log('Token refreshed.');\r\n        updateUserToken(uid,refreshedToken)\r\n      }).catch(function(err) {\r\n        console.log('Unable to retrieve refreshed token ', err);\r\n        \r\n      });\r\n    });\r\n  }\r\n \r\n}\r\n\r\nexport async function updateUserToken(uid,token){\r\n\r\n\r\n  if(uid !== undefined){\r\n \r\n    let donref = database.ref(`user-notif-tokens/${uid}`);\r\n    let upobj = {};\r\n    upobj['uid'] = uid;\r\n    upobj['token'] = token;\r\n  \r\n    donref.update(upobj);\r\n  }\r\n \r\n}\r\n\r\nasync function subscribeForCommonNotifications(token) {\r\n  if(messaging!==null){\r\n    console.log(`Subcribe Global msg to:${token}`);\r\n    console.log(`${serverKey}`);\r\n     \r\n    return fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\r\n        timeout: 1200 * 1000,\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`key=${serverKey}`\r\n        }\r\n    });\r\n  }\r\n \r\n\r\n}\r\n\r\n\r\nexport async function updateNotificationState(notif){\r\n  if(notif !== undefined){\r\n    console.log(notif);\r\n    if(notif.istopic){\r\n      let donref = database.ref(`notifications/topics/${notif.id}`);\r\n      let upobj = {};\r\n      upobj['isseen'] = true;\r\n      donref.update(upobj);\r\n    }else{\r\n      let donref = database.ref(`notifications/users/${notif.uid}/${notif.id}`);\r\n      let upobj = {};\r\n      upobj['isseen'] = true;\r\n      donref.update(upobj);\r\n    }\r\n   \r\n  }\r\n \r\n}\r\n\r\n\r\nexport async function OnMessageListner(){\r\n  messaging.onMessage(function(payload) {\r\n    console.log('Message received. ', payload);\r\n   \r\n  });\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Button, Header, Icon, Segment, Statistic, Table, Image,Message } from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from \"prop-types\";\r\nimport imgcontributors from '../../styles/img/donator.png';\r\nimport * as commonFunctions from '../../../common';\r\n\r\nclass DashboardViewContainer extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n\r\n  componentDidMount = async () => {\r\n   \r\n    await this.props.loadCurrentEvent();\r\n    commonFunctions.askForPermissioToReceiveNotifications(this.props.uid);\r\n    commonFunctions.TokenChange(this.props.uid);\r\n    this.props.updateNotificationToken(this.props.uid);\r\n    this.props.updateNotifications(this.props.uid);\r\n    this.props.updateAppLiveInfo();\r\n    this.props.updateSelfDonations(this.props.liveEvent.id, this.props.uid);\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  _openLogin = () => {\r\n    let w=1000;\r\n    let h=800;\r\n\r\n    // Fixes dual-screen position                         Most browsers      Firefox\r\n    var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : window.screenX;\r\n    var dualScreenTop = window.screenTop != undefined ? window.screenTop : window.screenY;\r\n\r\n    var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : 1024;\r\n    var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : 700;\r\n\r\n    var systemZoom = width / 700;\r\n    var left = (width - w) / 2 / systemZoom + dualScreenLeft\r\n    var top = (height - h) / 2 / systemZoom + dualScreenTop\r\n    var newWindow = window.open('/Auth/Login', 'Login', 'scrollbars=yes, width=' + w / systemZoom + ', height=' + h / systemZoom + ', top=' + top + ', left=' + left);\r\n\r\n    // Puts focus on the newWindow\r\n    if (window.focus) newWindow.focus();\r\n   // window.open('/Auth/Login', 'Login', 'toolbar=0,status=0,width=548,height=325');\r\n  }\r\n\r\n\r\n  handleDonationPress = () => {\r\n    if(this.props.isAuthenticated){\r\n      this.context.router.history.push(`/donations`);\r\n    }else{\r\n      this._openLogin();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n  render = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Row>\r\n        <Col md={12}>\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n              {this.renderHeader()}\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              {this.renderRightSizeTop()}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n            <Message>\r\n   \r\n   <p>\r\n   සරණක් ඇවැසි ඔවුන් හට අපි සරණක් වෙමු !\r\n   </p>\r\n </Message>\r\n            <Image src={CurEvent['img-banner1']} centered />\r\n            <Message>\r\n   \r\n    <p>\r\n    ගියවර පැවැත්වූ තැඹිලි දානයේ මතක සටහන් කිහිපයක්\r\n    </p>\r\n  </Message>\r\n            \r\n              <Image src={CurEvent['img-banner2']} centered />\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              {this.renderRightSizeBottom()}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n    );\r\n  };\r\n\r\n\r\n  renderHeader = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Segment placeholder>\r\n        <Header icon>\r\n          <Row>\r\n            <Col sm={12} md={3}>\r\n              <Icon name='home' color='grey' />\r\n              {`${CurEvent.place}`}\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Image src={CurEvent['img-header']} size='small' centered />\r\n              {`${CurEvent.name}`}\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              <Icon name='calendar check outline' color='grey' />\r\n              {`${CurEvent.date}`}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br />\r\n              <Button color='red' onClick={()=> this.handleDonationPress()}>\r\n                Donate Us Now !\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n      </Segment>\r\n    )\r\n  }\r\n\r\n  renderRightSizeTop = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Table color={'blue'} >\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Target Amount\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-amount']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Current Expect\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-expect']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Received\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-recived']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Contributors\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='small'>\r\n                <Statistic.Value>\r\n                  {CurEvent['total-contributors']}\r\n                  <Image src={imgcontributors} inline circular />\r\n\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              Members\r\n          </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value>{this.props.liveinfo['users-all']}</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              Your Donations\r\n          </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='violet' size='mini' >\r\n                <Statistic.Value><NumberFormat value={this.props.currentdonation} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  renderRightSizeBottom = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Table>\r\n        <Table.Header>\r\n          <Table.Row><Table.Cell>රෝගීන්ට ලබාදෙන දෑ</Table.Cell><Table.Cell></Table.Cell></Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>තැඹිලි ගෙඩි</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>1000</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>දෙළුම්</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>500</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>කොමඩු</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>500</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default DashboardViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n//actions\r\nimport * as eventActions from '../../../redux/event/action';\r\nimport * as appActions from '../../../redux/app/action';\r\nimport * as donationActions from '../../../redux/donation/action';\r\nimport * as notifActions from '../../../redux/notifications/action';\r\n\r\n\r\n// The component we're mapping to\r\nimport DashboardView from './DashboardView';\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    uid:state.auth.user.id,\r\n    liveEvent:state.event.liveEvent,\r\n    liveinfo:state.app.liveinfo,\r\n    currentdonation:state.donation.currentdonation,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n    loadCurrentEvent:eventActions.loadCurrentEvent,\r\n    updateAppLiveInfo:appActions.updateAppLiveInfo,\r\n    updateSelfDonations:donationActions.updateSelfDonations,\r\n    updateNotifications:notifActions.updateNotifications,\r\n    updateNotificationToken:notifActions.updateNotificationToken\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardView);\r\n","import { database } from '../../constants/firebase';\r\n\r\n\r\nexport function updateAppLiveInfo() {\r\n  return async dispatch => {\r\n    let appliveinforef = database.ref(`app-live-info`);\r\n    appliveinforef.on(\"value\", function (snapshot) {\r\n      dispatch({ type: 'UPDATE_LIVE_INFO', liveinfo: snapshot.val() });\r\n\r\n    });\r\n  }\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Form, Message, List, Image, Table, Icon, Divider, Header, Label, Segment, Modal } from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\nimport BOCLogo from '../../styles/img/boc.jpg';\r\nimport bankIcon from '../../styles/img/bankicon.jpg';\r\n\r\n\r\nconst MSG_CREATE_SUCCESS = 'CREATE_S';\r\nconst MSG_CREATE_ERROR = 'CREATE';\r\n\r\nconst MSG_UPLOAD_REC_SUCCESS = 'UPLOAD_REC_S';\r\nconst MSG_UPLOAD_REC_ERROR = 'UPLOAD_REC';\r\n\r\nclass DonateViewContainer extends Component {\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      error: '',\r\n      error_type: '',\r\n      donation_id: '',\r\n      donation_save_file: null,\r\n      donation_save_amount: 0.0,\r\n      donation_update_file: null,\r\n      modal_upload_visible: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.loadCurrentEvent();\r\n    this.props.updateSelfDonationsList(this.props.liveEvent.id, this.props.uid);\r\n    if (this.props.user.user_type === 1) {\r\n      this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\r\n      if (nextProps.isAuthenticated === false) {\r\n        console.log(`Redirect to homeeee`)\r\n        //this.context.router.history.push(`/`);\r\n      }\r\n\r\n    } else {\r\n\r\n      if (this.props.isLoading_save === true && nextProps.isLoading_save === false) {\r\n        if (nextProps.saveError !== '') {\r\n          this._setMessage(MSG_CREATE_ERROR, nextProps.saveError, 4000);\r\n        } else {\r\n          this._setMessage(MSG_CREATE_SUCCESS, 'Success', 4000);\r\n        }\r\n      }\r\n      if (this.props.isReciptUploading === true && nextProps.isReciptUploading === false) {\r\n        if (nextProps.uploadError !== '') {\r\n          this._setMessage(MSG_UPLOAD_REC_ERROR, nextProps.uploadError, 4000);\r\n        } else {\r\n          this._setMessage(MSG_UPLOAD_REC_SUCCESS, 'Success', 4000);\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _setMessage(methodtype, msg, time) {\r\n\r\n\r\n    this.setState({ error_type: methodtype, error: msg });\r\n    if (time === undefined) {\r\n      setTimeout(() => {\r\n        this.setState({ error_type: '', error: '' })\r\n      }, 2000);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({ error_type: '', error: '' })\r\n      }, time)\r\n    }\r\n\r\n    if (methodtype === MSG_CREATE_SUCCESS) {\r\n      this.clearForm(methodtype);\r\n    } else if (methodtype === MSG_UPLOAD_REC_SUCCESS) {\r\n      this.clearForm(methodtype);\r\n\r\n    }\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({ donation_save_file: null, donation_save_amount: 0.0, donation_update_file: null, modal_upload_visible: false })\r\n  }\r\n\r\n  makeDonation = () => {\r\n\r\n    if (this.state.donation_save_amount > 0) {\r\n\r\n      let obj = {};\r\n      obj['eventid'] = this.props.liveEvent.id;\r\n      obj['uid'] = this.props.uid;\r\n      obj['amt'] = this.state.donation_save_amount;\r\n      obj['img'] = this.state.donation_save_file;\r\n\r\n      console.log(this.state.donation_save_file)\r\n      this.props.saveDonation(obj);\r\n\r\n    } else {\r\n      this._setMessage(MSG_CREATE_ERROR, 'Please Enter your Amount', 3000);\r\n    }\r\n  }\r\n\r\n  updateDonationUser = () => {\r\n\r\n    let obj = {};\r\n    obj['eventid'] = this.props.liveEvent.id;\r\n    obj['uid'] = this.props.uid;\r\n    obj['img'] = this.state.donation_update_file;\r\n    obj['id'] = this.state.donation_id;\r\n\r\n    console.log(this.state.donation_update_file)\r\n    this.props.uploadDonationImgOnlyAction(obj);\r\n    if (this.props.user.user_type === 1) {\r\n      this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n    }\r\n  }\r\n\r\n  handleselectedFile = event => {\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n      donation_save_file: event.target.files[0]\r\n    });\r\n  }\r\n  handleselectedFileUpdate = event => {\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n      donation_update_file: event.target.files[0]\r\n    });\r\n  }\r\n\r\n\r\n  updateDonationStateUI = async (donid, state, uid) => {\r\n    /*\r\n    const eventid = req.body.eventid;\r\n            const uid = req.body.uid;\r\n            const trnid = req.body.trnid;\r\n            const donstate = req.body.donstate;\r\n            const token = req.body.token;\r\n    */\r\n\r\n    let obj = {};\r\n    obj['eventid'] = this.props.liveEvent.id;\r\n    obj['uid'] = uid;\r\n    obj['trnid'] = donid;\r\n    obj['donstate'] = state;\r\n    obj['token'] = this.props.notif_token;\r\n    await this.props.updateDonationState(obj);\r\n    if (this.props.user.user_type === 1) {\r\n      this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n\r\n\r\n    let panes = [\r\n      { menuItem: 'Make Donation', render: () => this.renderDonation() },\r\n      { menuItem: 'History', render: () => this.renderPendingDonation() }\r\n    ]\r\n\r\n    if (this.props.user.user_type === 1) {\r\n      panes = [\r\n        { menuItem: 'Make Donation', render: () => this.renderDonation() },\r\n        { menuItem: 'History', render: () => this.renderPendingDonation() },\r\n        { menuItem: 'Pending', render: () => this.renderAprovesDonation() },\r\n        { menuItem: 'Approved', render: () => this.renderAlreadyApprovedDonation() }\r\n\r\n\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Tab menu={{ pointing: true }} panes={panes} />\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  renderPendingDonation = () => {\r\n    let showError = (this.state.error_type === MSG_UPLOAD_REC_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_UPLOAD_REC_SUCCESS && this.state.error !== '');\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\r\n        />\r\n        <Message\r\n          success\r\n          hidden={!showSuccess}\r\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\r\n        />\r\n\r\n\r\n        {this.renderUpdateDonationUser()}\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentdonations.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentdonations.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  renderDonation = () => {\r\n    let showError = (this.state.error_type === MSG_CREATE_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_CREATE_SUCCESS && this.state.error !== '');\r\n    console.log(showSuccess)\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\r\n        />\r\n        <Message\r\n          success\r\n          hidden={!showSuccess}\r\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\r\n        />\r\n\r\n\r\n        <Form loading={this.props.isLoading_save} onSubmit={() => this.makeDonation()}>\r\n          <Message\r\n            icon='bullhorn'\r\n            header='ඔබගේ අවදානයට'\r\n            content={\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <p>ඔබගේ සියලු ආධාර මුදල් පහත සදහන් අපගේ බැංකු ගිණුම වෙත යොමු කොට එම රිසිට් පත / බැරපතෙහි පිටපතක්\r\n                මෙහි කරන මෙන් කාරුනිකව ඉල්ලා සිටිමු. </p>\r\n                  <b>ඔබ බලාපොරොත්තු වන ආධාර මුදලද මෙහි දැමිය හැකි අතර, එම අවස්තාවේදී රිසිට් පත Upload කිරීම අවශය නොවේ,මුදල් බැංකුවට බැර කල පසු, History ටැබය වෙතට ගොස් එය අදාල ස්ථානයේ Upload කරන්න.</b>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <List horizontal size={'huge'}>\r\n                    <List.Item>\r\n                      <Image avatar src={BOCLogo} />\r\n                      <List.Content>\r\n                        <List.Header>ලංකා බැංකුව - බම්බලපිටිය</List.Header>\r\n                        <List.Header>BOC - Bambalapitiya</List.Header>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <Image avatar src={bankIcon} />\r\n                      <List.Content>\r\n\r\n                        Account No\r\n                        <List.Header>0081625372</List.Header>\r\n                      </List.Content>\r\n                    </List.Item>\r\n\r\n                  </List>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n\r\n          <Form.Input label='Payment Reciept'\r\n            type='file'\r\n            accept=\"image/png, image/jpeg , application/pdf\"\r\n            onChange={this.handleselectedFile} />\r\n\r\n          <Form.Field>\r\n            <label>Amount</label>\r\n            <NumberFormat thousandSeparator={true} prefix={'රු '} value={this.state.donation_save_amount}\r\n              onValueChange={(values) => {\r\n                const { formattedValue, value } = values;\r\n                // formattedValue = $2,223\r\n                // value ie, 2223\r\n                this.setState({ donation_save_amount: value })\r\n              }}\r\n            />\r\n          </Form.Field>\r\n          <Divider hidden />\r\n          <Form.Button primary>Submit</Form.Button>\r\n        </Form>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n  hideUploadModal = () => {\r\n    this.setState({\r\n      modal_upload_visible: false,\r\n      donation_id: ''\r\n    });\r\n  }\r\n\r\n  showUploadModal = (trnid) => {\r\n    console.log(`trnid:${trnid}`);\r\n    this.setState({\r\n      modal_upload_visible: true,\r\n      donation_update_file: null,\r\n      donation_id: trnid\r\n    });\r\n  }\r\n\r\n  showDonUrl = (url) => {\r\n    window.open(url, \"_blank\")\r\n  }\r\n\r\n  renderUpdateDonationUser = () => {\r\n\r\n\r\n    return (\r\n      <Modal open={this.state.modal_upload_visible}\r\n        onClose={() => this.hideUploadModal()}\r\n        centered={false}\r\n        size={'mini'}\r\n        closeIcon\r\n      >\r\n\r\n        <Modal.Header>Upload Your Payment Receipt</Modal.Header>\r\n        <Modal.Content >\r\n          <Modal.Description>\r\n\r\n            <Form loading={this.props.isReciptUploading} onSubmit={() => this.updateDonationUser()}>\r\n\r\n              <Form.Input label='Upload your Payment Reciept'\r\n                type='file'\r\n                accept=\"image/png, image/jpeg , application/pdf\"\r\n                onChange={this.handleselectedFileUpdate}\r\n              />\r\n              <Form.Button primary>Update</Form.Button>\r\n            </Form>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='red' onClick={() => this.hideUploadModal()}>\r\n            cancel\r\n      </Button>\r\n\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n\r\n  renderAprovesDonation = () => {\r\n\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        {this.renderUpdateDonationUser()}\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Member</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentDonations_All_Pending !== undefined && this.props.currentDonations_All_Pending.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found Yet for Approve!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentDonations_All_Pending !== undefined && this.props.currentDonations_All_Pending.length > 0 && this.props.currentDonations_All_Pending.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Header as='h4' image>\r\n                      <Image src={don.user.img} rounded size='mini' />\r\n                      <Header.Content>\r\n                        {don.user.fname}\r\n                        <Header.Subheader> {don.user.lname}</Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n\r\n                  </Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                  <Table.Cell warning>\r\n                    {(don['donation-state'] === 0) && (\r\n                      <Segment>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 1, don.uid) }} color='green'>Approve</Button>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 2, don.uid) }} color='red'>Cancel</Button>\r\n                      </Segment>\r\n\r\n                    )}\r\n                    {(don['donation-state'] === 1 || don['donation-state'] === 2) && (\r\n                      <Button onClick={() => { this.updateDonationStateUI(don.id, 0, don.uid) }} color='orange'>Reset</Button>\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n  renderAlreadyApprovedDonation = () => {\r\n\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Member</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentDonations_All_changed !== undefined && this.props.currentDonations_All_changed.length > 0 && this.props.currentDonations_All_changed.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found Yet for Approve!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentDonations_All_changed !== undefined && this.props.currentDonations_All_changed.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              console.log(don)\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Header as='h4' image>\r\n                      <Image src={don.user.img} rounded size='mini' />\r\n                      <Header.Content>\r\n                        {don.user.fname}\r\n                        <Header.Subheader> {don.user.lname}</Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n\r\n                  </Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                  <Table.Cell warning>\r\n                    {(don['donation-state'] === 0) && (\r\n                      <Segment>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 1, don.uid) }} color='green'>Approve</Button>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 2, don.uid) }} color='red'>Cancel</Button>\r\n                      </Segment>\r\n\r\n                    )}\r\n                    {(don['donation-state'] === 1 || don['donation-state'] === 2) && (\r\n                      <Button onClick={() => { this.updateDonationStateUI(don.id, 0, don.uid) }} color='orange'>Reset</Button>\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default DonateViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport DonateView from './DonateView';\r\n\r\n//Actions\r\nimport * as eventActions from '../../../redux/event/action';\r\nimport * as DonationActions from '../../../redux/donation/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    uid:state.auth.user.id,\r\n    user:state.auth.user,\r\n    isLoading_save:state.donation.isLoading,\r\n    saveError:state.donation.saveError,\r\n    liveEvent:state.event.liveEvent,\r\n    currentdonations:state.donation.currentdonations,\r\n    isReciptUploading:state.donation.isReciptUploading,\r\n    uploadError:state.donation.uploadError,\r\n    currentDonations_All_Pending:state.donation.currentDonations_All_Pending,\r\n    currentDonations_All_changed:state.donation.currentDonations_All_changed,\r\n    notif_token:state.notifications.notif_token,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    authLoading:state.auth.authLoading\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n    loadCurrentEvent:eventActions.loadCurrentEvent,\r\n    saveDonation:DonationActions.saveDonation,\r\n    updateSelfDonationsList:DonationActions.updateSelfDonationsList,\r\n    uploadDonationImgOnlyAction:DonationActions.uploadDonationImgOnlyAction,\r\n    LoadAllUsersDonations:DonationActions.LoadAllUsersDonations,\r\n    updateDonationState:DonationActions.updateDonationState\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DonateView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\nclass TestViewContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  clickButton = () => {\r\n    this.props.multiplyValue(this.state.value);\r\n  }\r\n\r\n\r\n  render = () => {\r\n    return (\r\n      <Row>\r\n        <Col sm={12}>\r\n          <Container>\r\n            <Segment>\r\n\r\n              <h2>Terms and Conditions for Sathkara</h2>\r\n              <h3>Introduction</h3>\r\n\r\n              These Website Standard Terms and Conditions written on this webpage shall manage your use of our website, Sathkara App accessible at http://sathkara-bb902.firebaseapp.com.\r\n              \r\n              These Terms will be applied fully and affect to your use of this Website. By using this Website, you agreed to accept all terms and conditions written in here. You must not use this Website if you disagree with any of these Website Standard Terms and Conditions. These Terms and Conditions have been generated over at the Terms And Conditions Template website.\r\n              \r\n              Minors or people below 18 years old are not allowed to use this Website.\r\n              Intellectual Property Rights\r\n              \r\n              Other than the content you own, under these Terms, Sathkara and/or its licensors own all the intellectual property rights and materials contained in this Website.\r\n              \r\n              You are granted limited license only for purposes of viewing the material contained on this Website.\r\n              Restrictions\r\n              \r\n              You are specifically restricted from all of the following:\r\n              \r\n                  publishing any Website material in any other media;\r\n                  selling, sublicensing and/or otherwise commercializing any Website material;\r\n                  publicly performing and/or showing any Website material;\r\n                  using this Website in any way that is or may be damaging to this Website;\r\n                  using this Website in any way that impacts user access to this Website;\r\n                  using this Website contrary to applicable laws and regulations, or in any way may cause harm to the Website, or to any person or business entity;\r\n                  engaging in any data mining, data harvesting, data extracting or any other similar activity in relation to this Website;\r\n                  using this Website to engage in any advertising or marketing.\r\n              \r\n              Certain areas of this Website are restricted from being access by you and Sathkara may further restrict access by you to any areas of this Website, at any time, in absolute discretion. Any user ID and password you may have for this Website are confidential and you must maintain confidentiality as well.\r\n              Your Content\r\n              \r\n              In these Website Standard Terms and Conditions, \"Your Content\" shall mean any audio, video text, images or other material you choose to display on this Website. By displaying Your Content, you grant Sathkara a non-exclusive, worldwide irrevocable, sub licensable license to use, reproduce, adapt, publish, translate and distribute it in any and all media.\r\n              \r\n              Your Content must be your own and must not be invading any third-party’s rights. Sathkara reserves the right to remove any of Your Content from this Website at any time without notice.\r\n              Your Privacy\r\n              \r\n              Please read our Privacy Policy.\r\n              No warranties\r\n              \r\n              This Website is provided \"as is,\" with all faults, and Sathkara express no representations or warranties, of any kind related to this Website or the materials contained on this Website. Also, nothing contained on this Website shall be interpreted as advising you.\r\n              Limitation of liability\r\n              \r\n              In no event shall Sathkara, nor any of its officers, directors and employees, shall be held liable for anything arising out of or in any way connected with your use of this Website whether such liability is under contract.  Sathkara, including its officers, directors and employees shall not be held liable for any indirect, consequential or special liability arising out of or in any way related to your use of this Website.\r\n              Indemnification\r\n              \r\n              You hereby indemnify to the fullest extent Sathkara from and against any and/or all liabilities, costs, demands, causes of action, damages and expenses arising in any way related to your breach of any of the provisions of these Terms.\r\n              Severability\r\n              \r\n              If any provision of these Terms is found to be invalid under any applicable law, such provisions shall be deleted without affecting the remaining provisions herein.\r\n              Variation of Terms\r\n              \r\n              Sathkara is permitted to revise these Terms at any time as it sees fit, and by using this Website you are expected to review these Terms on a regular basis.\r\n              Assignment\r\n              \r\n              The Sathkara is allowed to assign, transfer, and subcontract its rights and/or obligations under these Terms without any notification. However, you are not allowed to assign, transfer, or subcontract any of your rights and/or obligations under these Terms.\r\n              Entire Agreement\r\n              \r\n              These Terms constitute the entire agreement between Sathkara and you in relation to your use of this Website, and supersede all prior agreements and understandings.\r\n              Governing Law & Jurisdiction\r\n              \r\n              These Terms will be governed by and interpreted in accordance with the laws of the State of lk, and you submit to the non-exclusive jurisdiction of the state and federal courts located in lk for the resolution of any disputes.\r\n              \r\n              \r\n      </Segment>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default TestViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport TermsView from './TermsView';\r\n\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n \r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TermsView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Message, Table, Icon, Modal, Label } from 'semantic-ui-react';\r\nimport * as commonFunctions from '../../../common';\r\n\r\nclass NotifViewContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      modal_msg_visible: false,\r\n      modal_msg: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.props.updateNotifications(this.props.uid);\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  showMsg = (key,notif) => {\r\n    this.setState({ modal_msg_visible: true, modal_msg: notif });\r\n    if (!notif.isseen) {\r\n         \r\n        commonFunctions.updateNotificationState(notif);\r\n    }\r\n  }\r\n\r\n  hideMsgModal = () => {\r\n    this.setState({ modal_msg_visible: false, modal_msg: {} });\r\n  }\r\n\r\n\r\n  render = () => {\r\n\r\n    let panes = [\r\n      { menuItem: 'Private', render: () => this.renderPrivateMsg() },\r\n      { menuItem: 'Public', render: () => this.renderPublicMsg() }\r\n    ]\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Tab menu={{ pointing: true }} panes={panes} />\r\n            {this.renderMsgModal()}\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n  renderPrivateMsg = () => {\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Table celled>\r\n          <Table.Body>\r\n            {this.props.notif_private.length === 0 && (\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Messages !`}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n            {this.props.notif_private.map(function (notif, i) {\r\n              let date1 = new Date(notif.date);\r\n              return (\r\n                <Table.Row key={`notifP_${i}`} active={!notif.isseen}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>{notif.title}</Table.Cell>\r\n                  <Table.Cell>\r\n                    {(notif.isseen) && (\r\n                      <Label as='a' content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                    {(!notif.isseen) && (\r\n                      <Label as='a' color={'blue'} content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n          </Table.Body>\r\n        </Table>\r\n      </Tab.Pane>\r\n    )\r\n  }\r\n\r\n  renderPublicMsg = () => {\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Table celled>\r\n          <Table.Body>\r\n            {this.props.notif_topic.length === 0 && (\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Messages !`}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n            {this.props.notif_topic.map(function (notifo, i) {\r\n               let notif=notifo;\r\n               notif['istopic']=true;\r\n              let date1 = new Date(notif.date);\r\n             \r\n              return (\r\n                <Table.Row key={`notifG_${i}`} active={!notif.isseen}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>{notif.title}</Table.Cell>\r\n                  <Table.Cell>{``}</Table.Cell>\r\n                  <Table.Cell>\r\n                    {(notif.isseen) && (\r\n                      <Label as='a' content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                    {(!notif.isseen) && (\r\n                      <Label as='a' color={'blue'} content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n          </Table.Body>\r\n        </Table>\r\n      </Tab.Pane>\r\n    )\r\n  }\r\n\r\n  renderMsgModal = () => {\r\n    let msg = this.state.modal_msg;\r\n    return (\r\n      <Modal open={this.state.modal_msg_visible}\r\n        onClose={() => this.hideMsgModal()}\r\n        centered={false}\r\n        size={'mini'}\r\n\r\n      >\r\n\r\n        <Modal.Header>{msg.title}</Modal.Header>\r\n        <Modal.Content >\r\n         \r\n            <p>{msg.body}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='blue' onClick={() => this.hideMsgModal()}>\r\n            <Icon name='checkmark' /> Ok\r\n      </Button>\r\n\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default NotifViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport NotifView from './NotifView';\r\n\r\n//Actions\r\nimport * as notifActions from '../../../redux/notifications/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n  uid:state.auth.user.id,\r\n  notif_private_count: state.notifications.notif_private_count,\r\n  notif_topic_count: state.notifications.notif_topic_count,\r\n  notif_private: state.notifications.notif_private,\r\n  notif_topic: state.notifications.notif_topic\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  updateNotifications:notifActions.updateNotifications,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotifView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Message, Table, Icon, Modal, Label, Segment,List,Image } from 'semantic-ui-react';\r\n\r\nclass ContactViewContainer extends Component {\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n  constructor(props) {\r\n    super();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  showAccount = (str)=>{\r\n    if(str==='B'){\r\n     \r\n     window.open('https://www.facebook.com/buwaneka.sumanasekara', '_blank');\r\n     //window.location = 'https://www.facebook.com/buwaneka.sumanasekara'\r\n    }else{\r\n     \r\n      window.open('https://www.facebook.com/indika.sahan', '_blank');\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ size: 8, offset: 2 }}>\r\n            <Segment basic>\r\n              <List size={'massive'}>\r\n              <List.Item >\r\n                  <Image avatar src='https://scontent.fcmb2-1.fna.fbcdn.net/v/t1.0-1/p160x160/44088694_2200849493282891_6667100037345968128_n.jpg?_nc_cat=108&_nc_ht=scontent.fcmb2-1.fna&oh=148d1cec40ad891d409312ede3dd7b06&oe=5C9ECFDB' />\r\n                  <List.Content>\r\n                    <List.Header >Buwaneka Sumanasekara</List.Header>\r\n                    <List.Description>\r\n                    <p>Email: <a href=\"mailto:buwanekasumanasekara@gmail.com\">buwanekasumanasekara@gmail.com</a> </p>\r\n                    Contact No: +94776161689\r\n        </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                \r\n                <List.Item >\r\n                  <Image avatar src='https://scontent.fcmb2-1.fna.fbcdn.net/v/t1.0-1/p160x160/46744463_2221268391219426_7922833957983354880_n.jpg?_nc_cat=101&_nc_ht=scontent.fcmb2-1.fna&oh=98c9905358ef67fb92969eeb5c24f21c&oe=5CA8AF5A' />\r\n                  <List.Content>\r\n                    <List.Header >Sahan Wijesekara</List.Header>\r\n                    <List.Description>\r\n                    <p>Email: <a href=\"mailto:indikasahan2010@gmail.com\">indikasahan2010@gmail.com</a> </p>\r\n                    Contact No: +94773355726\r\n        </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                \r\n              </List>\r\n            </Segment>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default ContactViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport ContactView from './ContactView';\r\n\r\n//Actions\r\n\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n \r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactView);\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport {\r\n  Login,\r\n  App,\r\n  Test,\r\n  Dashboard,\r\n  Donation,\r\n  Terms,\r\n  Notifications,\r\n  ContactUs\r\n} from '../_Views';\r\n\r\n\r\nconst Routes = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/Auth' component={Login} />\r\n      <Route exact path='/Auth/:screen' component={Login} />\r\n      <Route path='/Terms' component={Terms} />\r\n      <App>\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route exact path='/donations' component={Donation} />\r\n          <Route exact path='/notifications' component={Notifications} />\r\n          <Route exact path='/contact-us' component={ContactUs} />\r\n   \r\n          \r\n          <Route path='/:page' component={Test} />\r\n        </Switch>\r\n      </App>\r\n    </Switch>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default Routes\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    isAuthenticated: false,\r\n    isAuthChecking: false,\r\n    user: {},\r\n    message: { msg_type: '', msg_txt: '' }\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"AUTH_REGISTER\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_LOGIN\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_CHECKING_START\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_CHECKING\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.user,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_LOGOUT_START\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading\r\n            };\r\n        case \"AUTH_FAILD\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                isLoading: false,\r\n                isAuthChecking:false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveinfo:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"UPDATE_LIVE_INFO\":\r\n            return {\r\n                ...state,\r\n                liveinfo: action.liveinfo\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveEvent:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"EVENT_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"EVENT_SET\":\r\n            return {\r\n                ...state,\r\n                liveEvent: action.liveEvent\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    saveError: '',\r\n    currentdonation: 0,\r\n    currentdonations: [],\r\n    isReciptUploading: false,\r\n    uploadError: '',\r\n    currentDonations_All_Pending: [],\r\n    currentDonations_All_changed: [],\r\n    isAllDonationsLoading: false\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"DONATION_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading,\r\n                saveError: action.error\r\n            };\r\n        case \"DONATION_RECIPT_UPDATING\":\r\n            return {\r\n                ...state,\r\n                isReciptUploading: action.isLoading,\r\n                uploadError: action.error\r\n            };\r\n        case \"DONATION_UPDATE_USER_TOTAL\":\r\n            return {\r\n                ...state,\r\n                currentdonation: action.currentdonation\r\n            };\r\n        case \"DONATION_UPDATE_USER_DON\":\r\n            return {\r\n                ...state,\r\n                currentdonations: action.currentdonations\r\n            };\r\n        case \"DONATION_ALL_LOADING\":\r\n            return {\r\n                ...state,\r\n                isAllDonationsLoading: action.isLoading,\r\n\r\n            };\r\n        case \"DONATION_LOAD_ALL\":\r\n            return {\r\n                ...state,\r\n                currentDonations_All_Pending: action.arPending,\r\n                currentDonations_All_changed: action.arChanged\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    notif_token:'',\r\n    notif_topic_count:0,\r\n    notif_private_count:0,\r\n    notif_topic:[],\r\n    notif_private:[]\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"NOTIF_TOPIC_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_topic:action.notif_topic,\r\n                notif_topic_count:action.notif_topic_count,\r\n            };\r\n            case \"NOTIF_USER_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_private:action.notif_private,\r\n                notif_private_count:action.notif_private_count,\r\n            };  \r\n            case \"NOTIF_TOKEN_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_token:action.token\r\n            };    \r\n            \r\n          \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth/reducer';\r\nimport app from './app/reducer';\r\nimport event from './event/reducer';\r\nimport donation from './donation/reducer';\r\nimport notifications from './notifications/reducer'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    app,\r\n    event,\r\n    donation,\r\n    notifications\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './routes/Routes';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './configureStore';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst store = configureStore();\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>  \r\n    <Routes/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);","import { compose,createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './redux';\r\n\r\nexport default function configureStore(initialState) {\r\n   \r\n    \r\n    const reduxLogger = createLogger({predicate: (getState, action) => true});\r\n    let middlewares = [thunk]\r\n   \r\n    if(true){\r\n        middlewares = [...middlewares,reduxLogger];\r\n    }\r\n    return createStore(\r\n        \r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares)),\r\n    );\r\n\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.b1043f85.jpg\";"],"sourceRoot":""}