{"version":3,"sources":["_Views/styles/img/donator.png","_Views/styles/img/boc.jpg","_Views/styles/img/bankicon.jpg","constants/firebase.js","redux/auth/action.js","_Views/base/App.js","_Views/containers/Login/LoginView.js","_Views/containers/Login/LoginContainer.js","_Views/containers/Test/TestView.js","_Views/containers/Test/TestContainer.js","redux/event/action.js","api/donation.js","api/notification.js","redux/donation/action.js","redux/notifications/action.js","common/index.js","_Views/containers/Dashboard/DashboardView.js","_Views/containers/Dashboard/DashboardContainer.js","redux/app/action.js","_Views/containers/Donate/DonateView.js","_Views/containers/Donate/DonateContainer.js","_Views/containers/Terms/TermsView.js","_Views/containers/Terms/TermsContainer.js","_Views/containers/Notification/NotifView.js","_Views/containers/Notification/NotifContainer.js","_Views/containers/Contact/ContactView.js","_Views/containers/Contact/ContactContainer.js","routes/Routes.js","redux/auth/reducer.js","redux/app/reducer.js","redux/event/reducer.js","redux/donation/reducer.js","redux/notifications/reducer.js","redux/index.js","index.js","configureStore.js","_Views/styles/img/logo.jpg"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","console","log","concat","process","JSON","stringify","firebase","apps","length","initializeApp","auth","database","storage","messaging","isSupported","usePublicVapidKey","error","WebAPI","serverKey","topic","createUser","user","obj","id","authtyp","img","fname","lname","mobile","email","saveUserToDatabase","dispatch","ref","child","set","status","msg","type","isLoading","message","msg_type","msg_txt","saveUserToDatabaseGoogle","setUserToRedux","uid","once","snap","val","authCheck","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","onAuthStateChanged","authUser","stop","this","_x3","apply","arguments","SCREEN_LOGOUT","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","_callee","_context","componentDidMount","_callee2","_context2","onMessage","payload","result","NotificationManager","info","body","title","navigator","serviceWorker","register","then","registration","useServiceWorker","catch","err","handleItemClick","name","setState","activeItem","authLogout","context","router","history","push","_renderFooter","react_default","createElement","reactstrap_es","Segment","clearing","_renderMenues","state","light","expand","onClick","e","Image","src","imgLogo","size","className","navbar","Label","image","color","basic","Icon","toggle","isOpen","notif_private_count","notif_topic_count","bind","assertThisInitialized","nextProps","nextState","authLoading","isAuthenticated","lib","sm","Dimmer","active","inverted","Loader","children","Component","contextTypes","PropTypes","object","mapDispatchToProps","authActions","_ref4","_callee4","_context4","signOut","_x4","connect","isAuthChecking","notifications","SCREEN_LOGIN","SCREEN_REGISTER","MSG_SIGNUP_SUCCESS","MSG_SIGNUP_ERROR","MSG_LOGIN_SUCCESS","MSG_LOGIN_ERROR","PROVIDER_GOOGLE","LognViewContainer","match","params","screen","clearForm","typ","reg_fname","reg_lname","reg_mobile","reg_email","reg_pass","reg_cpass","redirectToHome","validateReg","error_type","_setMessage","handleRegister","registerUser","validateLogin","login_email","login_pass","handleLogin","provider","loginUser","signInWithGoogle","_x","onchangetext","para","value","onchangetext_login","changeScreen","newscreen","_x2","render","md","offset","wrapped","renderLogin","renderSignup","showError","showSuccess","Message","hidden","content","positive","Inline","Button","Form","loading","onSubmit","Field","placeholder","onChange","evt","target","vertical","Group","Or","text","alertVisible","isCancelled","undefined","methodtype","time","_this2","setTimeout","window","scrollTo","_ref","createUserWithEmailAndPassword","pass","usermod","_ref2","signInWithEmailAndPassword","_ref5","_callee5","_context5","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","userinfo","profile","phoneNumber","picture","code","errorMessage","credential","_x5","LoginView","TestViewContainer","handleChange","event","clickButton","multiplyValue","url","mymarks","app","TestView","loadCurrentEvent","orderByChild","equalTo","on","snapshot","forEach","data","liveEvent","eventid","abrupt","fetch","timeout","method","headers","Accept","Content-Type","donation","getAllDonations","updateDonation","_","require","getDonationImgId","s4","Math","floor","random","toString","substring","getDonationObj","objnw","parseFloat","amt","ServerValue","TIMESTAMP","imgurl","trnid","donref","upobj","er","uploadDonationImgOnly","update","updateNotifications","_callee6","notif_topics_ref","notif_private_ref","_context6","ar","snap2","arseen","keys","map","i","sent","notif_topic","t0","notif_private","_ref6","_x6","askForPermissioToReceiveNotifications","_askForPermissioToReceiveNotifications","requestPermission","getToken","currentToken","updateUserToken","subscribeForCommonNotifications","TokenChange","_TokenChange","onTokenRefresh","refreshedToken","_updateUserToken","token","Authorization","notif","_donref","_upobj","istopic","DashboardViewContainer","commonFunctions","updateNotificationToken","updateAppLiveInfo","updateSelfDonations","handleDonationPress","CurEvent","renderHeader","renderRightSizeTop","centered","renderRightSizeBottom","Header","icon","place","date","Table","Body","Row","Cell","Statistic","Value","number_format_default","displayType","thousandSeparator","prefix","imgcontributors","inline","circular","liveinfo","currentdonation","eventActions","donations","amount","toArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","don","return","notifActions","tokenref","tokenr","tokenobj","DashboardView","MSG_CREATE_SUCCESS","MSG_CREATE_ERROR","MSG_UPLOAD_REC_SUCCESS","MSG_UPLOAD_REC_ERROR","DonateViewContainer","updateSelfDonationsList","user_type","LoadAllUsersDonations","donation_save_file","donation_save_amount","donation_update_file","modal_upload_visible","makeDonation","saveDonation","updateDonationUser","donation_id","uploadDonationImgOnlyAction","handleselectedFile","files","handleselectedFileUpdate","updateDonationStateUI","donid","notif_token","updateDonationState","panes","menuItem","renderDonation","renderPendingDonation","renderAprovesDonation","renderAlreadyApprovedDonation","Tab","menu","pointing","Pane","attached","success","renderUpdateDonationUser","celled","HeaderCell","currentdonations","key","date1","Date","crdate","toLocaleString","as","showDonUrl","showUploadModal","warning","negative","isLoading_save","header","List","horizontal","Item","avatar","BOCLogo","Content","bankIcon","Input","label","accept","onValueChange","values","formattedValue","Divider","primary","hideUploadModal","open","Modal","onClose","closeIcon","Description","isReciptUploading","Actions","currentDonations_All_Pending","_this3","rounded","Subheader","currentDonations_All_changed","_this4","saveError","uploadError","_this5","newdonref","postID","genImgName","file","fileName","filetyp","metadata","storageRef","uploadTask","contentType","split","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","apiResponse","respJson","donationApi","json","arPending","pending_ar","arChanged","other_ar","DonateView","TermsView","NotifViewContainer","showMsg","modal_msg_visible","modal_msg","isseen","_updateNotificationState","hideMsgModal","renderPrivateMsg","renderPublicMsg","renderMsgModal","notifo","NotifView","ContactViewContainer","showAccount","str","href","ContactView","Routes","BrowserRouter","Switch","Route","exact","path","component","Login","Terms","base_App","Dashboard","Donation","Notifications","ContactUs","Test","initialState","isAllDonationsLoading","combineReducers","action","objectSpread","store","reduxLogger","createLogger","predicate","getState","middlewares","thunk","toConsumableArray","createStore","rootReducer","compose","applyMiddleware","configureStore","ReactDOM","es","routes_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.d1a12b5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donator.aa5ed7b2.png\";","module.exports = __webpack_public_path__ + \"static/media/boc.5f02b964.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bankicon.b85b649a.jpg\";","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport 'firebase/messaging';\r\n\r\nconst prodConfig = {\r\n  apiKey: \"AIzaSyCWfZqvMjAGIlDN6OrwqyK0kcyj1FyOaY8\",\r\n  authDomain: \"sathkara-bb902.firebaseapp.com\",\r\n  databaseURL: \"https://sathkara-bb902.firebaseio.com\",\r\n  projectId: \"sathkara-bb902\",\r\n  storageBucket: \"sathkara-bb902.appspot.com\",\r\n  messagingSenderId: \"937169849327\"\r\n};\r\n\r\nconst devConfig = {\r\n  apiKey: \"AIzaSyAJlP9GuVakGrCy5BN37gLx0kuDeZV5yOQ\",\r\n  authDomain: \"sathkara-test.firebaseapp.com\",\r\n  databaseURL: \"https://sathkara-test.firebaseio.com\",\r\n  projectId: \"sathkara-test\",\r\n  storageBucket: \"sathkara-test.appspot.com\",\r\n  messagingSenderId: \"1025410139450\"\r\n\r\n};\r\n\r\nconst config = process.env.NODE_ENV === 'production'\r\n  ? prodConfig\r\n  : devConfig;\r\n\r\nconsole.log(`Mode:${process.env.NODE_ENV}`)\r\nconsole.log(`System init as #${JSON.stringify(config)}#`)\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n  \r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\nconst storage = firebase.storage();\r\n\r\nlet messaging=null;\r\ntry {\r\n \r\n  if (firebase.messaging.isSupported()) {\r\n    messaging = firebase.messaging();\r\n    if (process.env.NODE_ENV === 'production') {\r\n      messaging.usePublicVapidKey(\"BFXAY4O1TFz7NOzz7qdzMr6f8WSLVfa0MyKCKH-DNAOI_9JOt7vOixxFUCXkS6d_BuEwoWToRG13I2EZiBJ436w\");\r\n    } else {\r\n      messaging.usePublicVapidKey(\"BL_8IFwrAbN4b0ycQ_haJ2fIRt2VSG8wiglsyOsdd4w0ZdnaOB4SenyKh7OOOn1bbAmmqDxoXsNERL_LgyQMRQA\");\r\n    }\r\n    \r\n  } else {\r\n    \r\n  }\r\n \r\n} catch (error) {\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nconst WebAPI = `https://${config.authDomain}/api/v1`;\r\nlet serverKey = \"\";\r\nif (process.env.NODE_ENV === 'production') {\r\n  serverKey = \"AAAA2jOtC-8:APA91bFxeQlY3zvt0sOp5nS9ax2fuNsdq-oovxz1aQ0nyL6MALD1eFXb_CUj8c9ACX4tXMJ6_yJwm4yYrmHuWfc_USYI7b71uFyPb0xq5SrOXu339sW0_Z6VtZS0deZb-6r5yi83VEew\"\r\n\r\n} else {\r\n  serverKey = \"AAAA7r81BTo:APA91bFSEOmIm5_NE_HQpl24EILdnv4PizLkk339g9R4MBgwdcn2gOcTW4NviGtmfOHwonXMtCcamwfJFYSlshMntBQ2PHdOFepxXYfMU0dT5cS3BPiCf90VOpJRfgWB2YbCB23MVtT3\"\r\n\r\n}\r\n\r\nlet topic='sathkara-common-notif';\r\n\r\nexport {\r\n  firebase,\r\n  auth,\r\n  database,\r\n  storage,\r\n  messaging,\r\n  WebAPI,\r\n  serverKey,\r\n  topic\r\n};","import { auth, database, firebase } from '../../constants/firebase';\r\n\r\nfunction createUser(user) {\r\n  let obj = {};\r\n  obj['id'] = user.id;\r\n  obj['authtyp'] = user.authtyp;\r\n  obj['img'] = user.img;\r\n  obj['fname'] = user.fname;\r\n  obj['lname'] = user.lname;\r\n  obj['mobile'] = user.mobile;\r\n  obj['email'] = user.email;\r\n  obj['user_type'] = 0;\r\n  return obj;\r\n}\r\n\r\nfunction saveUserToDatabase(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'SIGNUP';\r\n      msg = error;\r\n    } else {\r\n      status = 'SIGNUP_S';\r\n      msg = 'your registerd successfully!,Please sign-in ..';\r\n\r\n    }\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({\r\n      type: 'AUTH_REGISTER',\r\n      message: { msg_type: status, msg_txt: msg }\r\n    });\r\n  });\r\n}\r\n\r\nfunction saveUserToDatabaseGoogle(dispatch, user) {\r\n  let userref = database.ref(\"user\");\r\n  userref.child(user.id).set(user, function (error) {\r\n    let status = '';\r\n    let msg = '';\r\n    if (error) {\r\n      status = 'LOGIN';\r\n      msg = error;\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: status, msg_txt: msg } });\r\n    } else {\r\n      dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n    }\r\n    \r\n  });\r\n}\r\n\r\nfunction setUserToRedux(dispatch, user) {\r\n  console.log(`${JSON.stringify(user.uid)}`);\r\n  let userref = database.ref(`user/${user.uid}`);\r\n  //userref.child(user.uid)\r\n  userref.once(\"value\", function (snap) {\r\n    console.log(snap);\r\n    \r\n    dispatch({ type: 'AUTH_SUCCESS', user: snap.val() });\r\n    dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n  });\r\n}\r\n\r\n\r\nexport function registerUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_REGISTER', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.createUserWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser.user.uid);\r\n        let usermod = user;\r\n        usermod['id'] = authUser.user.uid;\r\n        saveUserToDatabase(dispatch, createUser(usermod));\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_REGISTER', message: { msg_type: 'SIGNUP', msg_txt: error.message } });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function loginUser(user) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n    dispatch({ type: 'AUTH_LOGIN', message: { msg_type: '', msg_txt: '' } });\r\n\r\n    auth.signInWithEmailAndPassword(user.email, user.pass)\r\n      .then(authUser => {\r\n        console.info(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN_S', msg_txt: 'Success' } });\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: false });\r\n        dispatch({ type: 'AUTH_LOGIN', message: { msg_type: 'LOGIN', msg_txt: error.message } });\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport function authCheck() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n    auth.onAuthStateChanged(authUser => {\r\n\r\n      if (authUser) {\r\n        setUserToRedux(dispatch, authUser)\r\n      } else {\r\n        // dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n        dispatch({ type: 'AUTH_FAILD' });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function authLogout() {\r\n  return async dispatch => {\r\n    dispatch({ type: 'AUTH_LOGOUT_START', isLoading: true });\r\n\r\n    auth.signOut().then(function () {\r\n\r\n      dispatch({ type: 'AUTH_FAILD' });\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n      dispatch({ type: 'AUTH_LOGOUT_START', isLoading: false });\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function signInWithGoogle() {\r\n  return async dispatch => {\r\n\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n\r\n    auth.signInWithPopup(provider).then(authUser => {\r\n     \r\n      if(authUser.additionalUserInfo.isNewUser){\r\n        console.log(authUser);\r\n        dispatch({ type: 'AUTH_IS_LOADING', isLoading: true });\r\n        let userinfo=authUser.additionalUserInfo.profile;\r\n        let usermod ={};\r\n        usermod['id'] = authUser.user.uid;\r\n        usermod['fname'] = userinfo['given_name'];\r\n        usermod['lname'] = userinfo['family_name'];\r\n        usermod['mobile'] = authUser.user.phoneNumber;\r\n        usermod['email'] = userinfo.email;\r\n        usermod['pass'] = '.';\r\n        usermod['authtyp'] = 'GOOGLE';\r\n        usermod['img'] = userinfo.picture;\r\n\r\n        saveUserToDatabaseGoogle(dispatch, createUser(usermod));\r\n        \r\n      }else{\r\n        dispatch({ type: 'AUTH_CHECKING_START', isLoading: true });\r\n        auth.onAuthStateChanged(authUser => {\r\n    \r\n          if (authUser) {\r\n            \r\n            setUserToRedux(dispatch, authUser)\r\n          } else {\r\n            dispatch({ type: 'AUTH_CHECKING', isLoading: false });\r\n            dispatch({ type: 'AUTH_FAILD' });\r\n          }\r\n        });\r\n      }\r\n\r\n      \r\n    }).catch(function (error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n      console.error(`login error:${errorMessage}`);\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/css/theme.min.css';\r\nimport { messaging } from '../../constants/firebase';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col, Collapse, Nav, Navbar, NavItem, NavLink, NavbarBrand, NavbarToggler } from 'reactstrap';\r\nimport { Dimmer, Loader, Image, Segment, Header, Icon, Label, Button } from 'semantic-ui-react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n//Actions\r\nimport * as authActions from '../../redux/auth/action';\r\n\r\n\r\nimport imgLogo from '../styles/img/logo.jpg';\r\n\r\n\r\nlet SCREEN_LOGOUT = 'Logout';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    this.state = {\r\n      activeItem: \"\",\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n  componentWillMount = async () => {\r\n    await this.props.authCheck();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      if (messaging !== null) {\r\n        messaging.onMessage(function (payload) {\r\n          //  console.log(\"Message received . \", payload);\r\n          var result = payload['notification'];\r\n          /*console.log(\"Message received . \", result);\r\n          let myColor = { background: '#8B0000', text: \"#FFFFFF\" };\r\n          notify.show(result['body'], \"custom\", 10000, myColor);*/\r\n          NotificationManager.info(result.body,result.title, 5000,()=> console.log(),true);\r\n\r\n        });\r\n\r\n        if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('../firebase-messaging-sw.js')\r\n            .then(function (registration) {\r\n              messaging.useServiceWorker(registration);\r\n            }).catch(function (err) {\r\n              console.log('Service worker registration failed, error:', err);\r\n            });\r\n        }\r\n\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(`error in App message setup`)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\r\n      if (nextProps.isAuthenticated === false) {\r\n        this.context.router.history.push(`/Auth/Login`);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name });\r\n    if (name === SCREEN_LOGOUT) {\r\n      this.props.authLogout();\r\n    } else if (name === 'Home') {\r\n      this.context.router.history.push(`/`);\r\n    } else if (name === 'Donation') {\r\n      this.context.router.history.push(`/donations`);\r\n    } else if (name === 'Notification') {\r\n      this.context.router.history.push(`/notifications`);\r\n    } else if (name === 'Contactus') {\r\n      this.context.router.history.push(`/contact-us`);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <NotificationContainer />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {this.props.authLoading && (\r\n            <Col sm={12}>\r\n              <Segment basic>\r\n\r\n                <center>\r\n                  <Image src={imgLogo} />\r\n                </center><br />\r\n\r\n                <Dimmer active inverted>\r\n\r\n                  <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <br />\r\n              </Segment>\r\n            </Col>\r\n          )}\r\n          {this.props.authLoading === false && (\r\n            <Col sm={12}>\r\n              {this._renderMenues()}\r\n              {this.props.children}\r\n              {this._renderFooter()}\r\n            </Col>\r\n          )}\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  _renderFooter = () => {\r\n    return (\r\n      \r\n        <Row>\r\n          <Col>\r\n          <br/>\r\n            <Segment clearing>\r\n              <p>© Team සත්කාර</p>\r\n            </Segment>\r\n          </Col>\r\n        </Row>\r\n\r\n    );\r\n  }\r\n\r\n  _renderMenues = () => {\r\n    const { activeItem } = this.state\r\n    return (\r\n      <Navbar light expand=\"md\">\r\n        <NavbarBrand onClick={(e) => this.handleItemClick(\"Home\")}><Image src={imgLogo} size='tiny' /></NavbarBrand>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem onClick={(e) => this.handleItemClick(\"Home\")}>\r\n            <NavLink >\r\n              <Label image color='blue' basic>\r\n                <Icon\r\n                  name={\"home\"}\r\n                  size='large'\r\n                  color='blue'\r\n                />\r\n                Home\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem onClick={(e) => this.handleItemClick(\"Donation\")}>\r\n            <NavLink >\r\n              <Label image color='red' basic>\r\n                <Icon\r\n                  name={\"heartbeat\"}\r\n                  size='large'\r\n                  color='red'\r\n                />\r\n                Donate Now !\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem onClick={(e) => this.handleItemClick(\"Contactus\")}>\r\n            <NavLink >\r\n              <Label image color='blue' basic>\r\n                <Icon\r\n                  name={\"phone\"}\r\n                  size='large'\r\n                  color='blue'\r\n                />\r\n                Contact Us\r\n                </Label>\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n\r\n        </Nav>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem onClick={(e) => this.handleItemClick(\"Notification\")}>\r\n              <NavLink >\r\n                <Label color='orange' >\r\n                  <Icon name='bell outline' />{(this.props.notif_private_count + this.props.notif_topic_count)}\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink >\r\n                <Label image color='blue' basic>\r\n                  <img src={this.props.user.img} />\r\n                  {`${this.props.user.fname} ${this.props.user.lname}`}\r\n                </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLink onClick={(e) => this.handleItemClick(SCREEN_LOGOUT)}>\r\n                <Label color='blue' basic>\r\n                  <Icon\r\n                    name={\"close\"}\r\n                    size='large'\r\n                    color='blue'\r\n                  />\r\n                  Logout\r\n              </Label>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.isAuthChecking,\r\n  notif_private_count: state.notifications.notif_private_count,\r\n  notif_topic_count: state.notifications.notif_topic_count\r\n});\r\nconst mapDispatchToProps = {\r\n  authCheck: authActions.authCheck,\r\n  authLogout: authActions.authLogout,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Image, Label, Button, Dimmer, Loader, Form, Segment, Message, Icon, Header } from 'semantic-ui-react';\r\nimport imgLogo from '../../styles/img/logo.jpg';\r\n\r\nconst SCREEN_LOGIN = 'Login';\r\nconst SCREEN_REGISTER = 'Register';\r\nconst SCREEN_VERIFY = 'Verify';\r\n\r\nconst MSG_SIGNUP_SUCCESS = 'SIGNUP_S';\r\nconst MSG_SIGNUP_ERROR = 'SIGNUP';\r\nconst MSG_LOGIN_SUCCESS = 'LOGIN_S';\r\nconst MSG_LOGIN_ERROR = 'LOGIN';\r\n\r\nconst PROVIDER_GOOGLE = \"Google-SignIn\";\r\n\r\nclass LognViewContainer extends Component {\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      screen: SCREEN_LOGIN,\r\n      alertVisible: true,\r\n      error: '',\r\n      error_type: '',\r\n      reg_fname: '',\r\n      reg_lname: '',\r\n      reg_mobile: '',\r\n      reg_email: \"\",\r\n      reg_pass: \"\",\r\n      reg_cpass: \"\",\r\n      login_email: \"\",\r\n      login_pass: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    console.log(`screen:${this.props.match.params.screen}`);\r\n    await this.props.authCheck();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isCancelled = true;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.authLoading === true && nextProps.authLoading === false) {\r\n      console.log(`Auth statues:${nextProps.isAuthenticated}`)\r\n      if (nextProps.isAuthenticated === false) {\r\n        if (this.props.match.params.screen === undefined) {\r\n          this.changeScreen(SCREEN_LOGIN);\r\n        } else {\r\n          this.changeScreen(this.props.match.params.screen);\r\n        }\r\n      } else {\r\n        this.redirectToHome();\r\n      }\r\n\r\n    }\r\n    else if (this.props.message.msg_type !== nextProps.message.msg_type) {\r\n      this._setMessage(nextProps.message.msg_type, nextProps.message.msg_txt, 3000);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n\r\n  /*ERROR HANDLING*/\r\n\r\n  _setMessage(methodtype, msg, time) {\r\n    //console.log(`error set:${methodtype},${msg}`)\r\n    if (methodtype === MSG_LOGIN_SUCCESS) {\r\n      this.redirectToHome();\r\n    } else {\r\n      this.setState({ error_type: methodtype, error: msg });\r\n      if (time === undefined) {\r\n        setTimeout(() => {\r\n          this.setState({ error_type: '', error: '' })\r\n        }, 2000)\r\n      } else {\r\n        setTimeout(() => {\r\n          this.setState({ error_type: '', error: '' })\r\n        }, time)\r\n      }\r\n\r\n      this.clearForm(methodtype);\r\n      window.scrollTo(0, 0);\r\n    }\r\n\r\n  }\r\n  /*END:ERROR HANDLING*/\r\n\r\n  clearForm = (typ) => {\r\n    if (typ === MSG_SIGNUP_SUCCESS) {\r\n      this.setState({\r\n        reg_fname: '',\r\n        reg_lname: '',\r\n        reg_mobile: '',\r\n        reg_email: \"\",\r\n        reg_pass: \"\",\r\n        reg_cpass: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  redirectToHome = () => {\r\n    this.context.router.history.push(`/`);\r\n  }\r\n\r\n  validateReg = () => {\r\n    this.setState({ error_type: '', error: '' });\r\n    let state = true;\r\n    let msg = \"\";\r\n\r\n    if (this.state.reg_fname === '') {\r\n      state = false;\r\n      msg = 'Please enter your first name';\r\n    } else if (this.state.reg_lname === '') {\r\n      state = false;\r\n      msg = 'Please enter your Last name';\r\n    } else if (this.state.reg_mobile === '') {\r\n      state = false;\r\n      msg = 'Please enter your mobile no';\r\n    } else if (this.state.reg_email === '') {\r\n      state = false;\r\n      msg = 'Please enter your email';\r\n    } else if (this.state.reg_pass === '') {\r\n      state = false;\r\n      msg = 'Please enter your password';\r\n    } else if (this.state.reg_pass !== this.state.reg_cpass) {\r\n      state = false;\r\n      msg = 'passwords should be matched!';\r\n    }\r\n\r\n    if (state === false) {\r\n      this._setMessage(MSG_SIGNUP_ERROR, msg, 3000);\r\n    }\r\n    return state;\r\n  }\r\n  handleRegister = async () => {\r\n    if (this.validateReg()) {\r\n      let user = {};\r\n      user['fname'] = this.state.reg_fname;\r\n      user['lname'] = this.state.reg_lname;\r\n      user['mobile'] = this.state.reg_mobile;\r\n      user['email'] = this.state.reg_email;\r\n      user['pass'] = this.state.reg_pass;\r\n      user['authtyp'] = 'EMAIL';\r\n      user['img'] = 'https://firebasestorage.googleapis.com/v0/b/sathkara-bb902.appspot.com/o/defaults%2Fuser.png?alt=media&token=69817bb3-ac5b-4be8-ab7d-a155bff173c1';\r\n\r\n      await this.props.registerUser(user);\r\n    }\r\n  }\r\n\r\n  validateLogin = () => {\r\n    this.setState({ error_type: '', error: '' });\r\n    let state = true;\r\n    let msg = \"\";\r\n\r\n    if (this.state.login_email === '') {\r\n      state = false;\r\n      msg = 'Please enter your email';\r\n    } else if (this.state.login_pass === '') {\r\n      state = false;\r\n      msg = 'Please enter your password';\r\n    }\r\n\r\n    if (state === false) {\r\n      this._setMessage(MSG_LOGIN_ERROR, msg, 3000);\r\n    }\r\n    return state;\r\n  }\r\n  handleLogin = async (provider) => {\r\n    if (provider === '') {\r\n      if (this.validateLogin()) {\r\n        let user = {};\r\n        user['email'] = this.state.login_email;\r\n        user['pass'] = this.state.login_pass;\r\n        await this.props.loginUser(user);\r\n      }\r\n    } else {\r\n      this.props.signInWithGoogle();\r\n    }\r\n\r\n  }\r\n\r\n  onchangetext = (para, value) => {\r\n    if (para === 'reg_fname') {\r\n      this.setState({ reg_fname: value });\r\n    } else if (para === 'reg_lname') {\r\n      this.setState({ reg_lname: value });\r\n    } else if (para === 'reg_mobile') {\r\n      this.setState({ reg_mobile: value });\r\n    } else if (para === 'reg_email') {\r\n      this.setState({ reg_email: value });\r\n    } else if (para === 'reg_pass') {\r\n      this.setState({ reg_pass: value });\r\n    } else if (para === 'reg_cpass') {\r\n      this.setState({ reg_cpass: value });\r\n    }\r\n  }\r\n  onchangetext_login = (para, value) => {\r\n    if (para === 'login_email') {\r\n      this.setState({ login_email: value });\r\n    } else if (para === 'login_pass') {\r\n      this.setState({ login_pass: value });\r\n    }\r\n  }\r\n\r\n  changeScreen = async (newscreen) => {\r\n\r\n    this.setState({\r\n      screen: newscreen\r\n    }, () => {\r\n      this.context.router.history.push(`/Auth/${newscreen}`);\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*RENDER FUNCTIONS*/\r\n  render = () => {\r\n    if (this.props.authLoading) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Segment basic>\r\n\r\n                <center>\r\n                  <Image src={imgLogo} />\r\n                </center><br />\r\n\r\n                <Dimmer active inverted>\r\n                  <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <br />\r\n              </Segment>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n\r\n        <Row>\r\n          <Col md={{ size: 6, offset: 3 }}>\r\n            <Row>\r\n              <Col md={{ size: 4, offset: 4 }}>\r\n                <Image src={imgLogo} size='small' wrapped />\r\n              </Col>\r\n            </Row>\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n\r\n\r\n          {this.state.screen === SCREEN_LOGIN && (\r\n            this.renderLogin()\r\n          )}\r\n          {this.state.screen === SCREEN_REGISTER && (\r\n            this.renderSignup()\r\n          )}\r\n\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  renderLogin = () => {\r\n    let showError = (this.state.error_type === MSG_LOGIN_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_LOGIN_SUCCESS && this.state.error !== '');\r\n    return (\r\n      <Col md={{ size: 4, offset: 4 }}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={this.state.error}\r\n        />\r\n        <Message\r\n          hidden={!showSuccess}\r\n          positive\r\n          content={this.state.error}\r\n        />\r\n\r\n\r\n\r\n        <Segment >\r\n          <center>\r\n            <Segment.Inline>\r\n              <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\r\n                <Icon name='google plus g' /> Signin with Your Google Acount\r\n          </Button>\r\n\r\n              <p>OR</p>\r\n            </Segment.Inline>\r\n\r\n          </center>\r\n        </Segment>\r\n\r\n\r\n        <Form loading={this.props.isLoading || this.props.authLoading} onSubmit={() => this.handleLogin('')}>\r\n\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <input type=\"email\" placeholder='abc@example.com' value={this.state.login_email} onChange={(evt) => this.onchangetext_login('login_email', evt.target.value)} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Password</label>\r\n            <input type=\"password\" value={this.state.login_pass} onChange={(evt) => this.onchangetext_login('login_pass', evt.target.value)} />\r\n          </Form.Field>\r\n          <Button color='blue'>Login</Button>\r\n        </Form>\r\n        <Segment vertical></Segment>\r\n        <br />\r\n        <Button.Group>\r\n          <Label>If your not registerd yet </Label>\r\n          <Button.Or text='->' />\r\n          <Button color='teal' onClick={() => this.changeScreen(SCREEN_REGISTER)}>Sign up here</Button>\r\n        </Button.Group>\r\n\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  renderSignup = () => {\r\n    let showError = (this.state.error_type === MSG_SIGNUP_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_SIGNUP_SUCCESS && this.state.error !== '');\r\n\r\n    return (\r\n      <Col md={{ size: 6, offset: 3 }}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={this.state.error}\r\n        />\r\n        <Message\r\n          hidden={!showSuccess}\r\n          positive\r\n          content={this.state.error}\r\n        />\r\n        <Segment>\r\n          <center>\r\n            <Button color='google plus' onClick={() => this.handleLogin(PROVIDER_GOOGLE)}>\r\n              <Icon name='google plus g' /> Signup with Your Google Acount\r\n          </Button>\r\n\r\n            <p>OR</p>\r\n          </center>\r\n        </Segment>\r\n\r\n        <Form loading={this.props.isLoading} onSubmit={() => this.handleRegister()}>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Field>\r\n                <label>First Name</label>\r\n                <input placeholder='First Name' value={this.state.reg_fname} onChange={(evt) => this.onchangetext('reg_fname', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Last Name</label>\r\n                <input placeholder='Last Name' value={this.state.reg_lname} onChange={(evt) => this.onchangetext('reg_lname', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Mobile No</label>\r\n                <input placeholder='+94770000000' value={this.state.reg_mobile} onChange={(evt) => this.onchangetext('reg_mobile', evt.target.value)} />\r\n              </Form.Field>\r\n\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input placeholder='abc@example.com' value={this.state.reg_email} onChange={(evt) => this.onchangetext('reg_email', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input type='password' value={this.state.reg_pass} onChange={(evt) => this.onchangetext('reg_pass', evt.target.value)} />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Confirm Password</label>\r\n                <input type='password' value={this.state.reg_cpass} onChange={(evt) => this.onchangetext('reg_cpass', evt.target.value)} />\r\n              </Form.Field>\r\n            </Col>\r\n          </Row><br />\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Button type='submit' positive >Register</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Form>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Segment vertical></Segment>\r\n            <br />\r\n            <Label>If your already registered ?\r\n        <Button onClick={() => this.changeScreen(SCREEN_LOGIN)}> Sign-in here</Button> </Label>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default LognViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n// The component we're mapping to\r\nimport LoginView from './LoginView';\r\n\r\n//Actions\r\nimport * as authActions from '../../../redux/auth/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    authLoading: state.auth.isAuthChecking,\r\n    isLoading:state.auth.isLoading,\r\n    message:state.auth.message\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n   registerUser:authActions.registerUser,\r\n   loginUser:authActions.loginUser,\r\n   authCheck: authActions.authCheck,\r\n   signInWithGoogle:authActions.signInWithGoogle\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n","\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass TestViewContainer extends Component {\r\n  \r\n  constructor(props){\r\n    super();\r\n    this.state ={\r\n      value:0\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    \r\n   \r\n  }\r\n\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({value: event.target.value});\r\n  }\r\n   \r\n  clickButton = () =>{\r\n    this.props.multiplyValue(this.state.value);\r\n  }\r\n\r\n\r\n  render = () => {\r\n     return (\r\n    <div>\r\n         <h1>{`Req URL:${this.props.match.url} `}</h1>\r\n     \r\n        \r\n      </div>\r\n     );\r\n  };\r\n\r\n \r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default TestViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport TestView from './TestView';\r\n\r\n//Actions\r\nimport * as AppActions from '../../../redux/app/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n  mymarks:state.app.value\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestView);\r\n","import {  database } from '../../constants/firebase';\r\n\r\nexport function loadCurrentEvent() {\r\n   \r\n    return async dispatch => {\r\n      let userref = database.ref(`events`);\r\n      userref.orderByChild('active').equalTo(true).on(\"value\", function(snapshot) {\r\n       // console.log(snapshot.val());\r\n        snapshot.forEach(function(data) {\r\n         // console.log(JSON.stringify(data));\r\n          dispatch({ type: 'EVENT_SET', liveEvent: data.val() });\r\n        });\r\n      \r\n    });\r\n      \r\n    }\r\n}","import { WebAPI } from '../constants/firebase';\r\n\r\nasync function getAllDonations(eventid) {\r\nconsole.log(WebAPI);\r\n    return fetch(`${WebAPI}/getdonations/${eventid}`, {\r\n        timeout: 1200*1000,\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    });\r\n\r\n}\r\n\r\nasync function updateDonation(obj) {\r\n  \r\n        return fetch(`${WebAPI}/updateDonation`, {\r\n            timeout: 1200*1000,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body:JSON.stringify(obj)\r\n        });\r\n    \r\n    }\r\n\r\nexport default {\r\n    getAllDonations,\r\n    updateDonation\r\n}","import { WebAPI } from '../constants/firebase';\r\n\r\nasync function sendNotificationNotSaved(notif) {\r\n    console.log(WebAPI);\r\n    return fetch(`${WebAPI}/sendNotification`, {\r\n        timeout: 1200 * 1000,\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },body:JSON.stringify(notif)\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    sendNotificationNotSaved\r\n}","import { database, storage, firebase } from '../../constants/firebase';\r\nimport { donationApi } from '../../api'\r\nvar _ = require('lodash');\r\n\r\n\r\nfunction getDonationImgId() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4() + '' + s4() + '' + s4() + '' + s4() + '' + s4() + s4() + s4();\r\n}\r\n\r\nfunction getDonationObj(obj) {\r\n  let objnw = {};\r\n  objnw['eventid'] = obj.eventid;\r\n  objnw['uid'] = obj.uid;\r\n  objnw['amount'] = parseFloat(obj.amt);\r\n  objnw['donation-state'] = 0; //0=pending,1=aproved,2=cancelled\r\n  objnw['crdate'] = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n\r\n  if (obj.id !== undefined) {\r\n    objnw['id'] = obj.id;\r\n    objnw['imgurl'] = obj.imgurl;\r\n    objnw['imgurl-available'] = obj['imgurl-available'];\r\n  }\r\n\r\n\r\n  return objnw;\r\n}\r\n\r\nfunction updateDonation(dispatch, trnid, imgurl, obj) {\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${trnid}`);\r\n  let upobj = obj;\r\n  upobj['id'] = trnid;\r\n  upobj['imgurl'] = imgurl;\r\n  if (imgurl === '') {\r\n    upobj['imgurl-available'] = false;\r\n  } else {\r\n    upobj['imgurl-available'] = true;\r\n  }\r\n  donref.set(getDonationObj(upobj), function (er) {\r\n    if (er) {\r\n      \r\n      dispatch({ type: 'DONATION_LOADING', error: \"Data could not be saved.\" + er, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: false });\r\n      \r\n    }\r\n  });\r\n\r\n}\r\n\r\nexport function saveDonation(obj) {\r\n\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_LOADING', error: '', isLoading: true });\r\n\r\n      let donref = database.ref(`donations/${obj.eventid}/${obj.uid}`);\r\n      var newdonref = donref.push(getDonationObj(obj));\r\n      var postID = newdonref.key;\r\n\r\n      if (obj.img !== null) {\r\n        let genImgName = getDonationImgId();\r\n        let file = obj.img;\r\n        let fileName = obj.img.name;\r\n        let filetyp = obj.img.type;\r\n\r\n        var metadata = {\r\n          contentType: filetyp\r\n        };\r\n\r\n        console.log(`File name:${genImgName}.${filetyp}`)\r\n        var storageRef = storage.ref();\r\n\r\n        var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n        // Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n          function (snapshot) {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n              case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                console.log('Upload is paused');\r\n                break;\r\n              case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                console.log('Upload is running');\r\n                break;\r\n            }\r\n          }, function (error) {\r\n\r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n              case 'storage/unauthorized':\r\n                // User doesn't have permission to access the object\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Unothorized', isLoading: false });\r\n                break;\r\n\r\n              case 'storage/canceled':\r\n                // User canceled the upload\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Storage Cancel', isLoading: false });\r\n                break;\r\n              case 'storage/unknown':\r\n                // Unknown error occurred, inspect error.serverResponse;\r\n                dispatch({ type: 'DONATION_LOADING', error: 'Unkonwn', isLoading: false });\r\n                break;\r\n            }\r\n          }, function () {\r\n            // Upload completed successfully, now we can get the download URL\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n              console.log('File available at', downloadURL);\r\n              updateDonation(dispatch, postID, downloadURL, obj)\r\n            });\r\n          });\r\n\r\n\r\n      } else {\r\n        //no image\r\n        console.log(`no image`)\r\n        updateDonation(dispatch, postID, '', obj);\r\n      }\r\n\r\n    } catch (error) {\r\n      dispatch({ type: 'DONATION_LOADING', error: error.message, isLoading: false });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nexport function updateSelfDonations(eventid, uid) {\r\n  return async dispatch => {\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n      console.log(ar);\r\n      for (let don of ar) {\r\n        if (don['donation-state'] !== 2) {//not cancelled\r\n          amount += don.amount;\r\n        }\r\n      }\r\n      dispatch({ type: 'DONATION_UPDATE_USER_TOTAL', currentdonation: amount });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function updateSelfDonationsList(eventid, uid) {\r\n  return async dispatch => {\r\n    console.log(`donations/${eventid}/${uid}`)\r\n    let userref = database.ref(`donations/${eventid}/${uid}`);\r\n    userref.on(\"value\", function (donations) {\r\n      let amount = 0;\r\n      let ar = _.toArray(donations.val())\r\n\r\n      dispatch({ type: 'DONATION_UPDATE_USER_DON', currentdonations: ar });\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function uploadDonationImgOnlyAction(obj) {\r\n  return async dispatch => {\r\n    console.log(`Don id :${obj.id}`)\r\n    dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: true });\r\n    if (obj.img !== null) {\r\n      let genImgName = getDonationImgId();\r\n      let file = obj.img;\r\n      let fileName = obj.img.name;\r\n      let filetyp = obj.img.type;\r\n\r\n      var metadata = {\r\n        contentType: filetyp\r\n      };\r\n\r\n      console.log(`File name:${genImgName}.${filetyp}`)\r\n      var storageRef = storage.ref();\r\n\r\n      var uploadTask = storageRef.child(`donations/${genImgName}.${fileName.split('.')[1]}`).put(file, metadata);\r\n      // Listen for state changes, errors, and completion of the upload.\r\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n        function (snapshot) {\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n          switch (snapshot.state) {\r\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n              console.log('Upload is paused');\r\n              break;\r\n            case firebase.storage.TaskState.RUNNING: // or 'running'\r\n              console.log('Upload is running');\r\n              break;\r\n          }\r\n        }, function (error) {\r\n\r\n          // A full list of error codes is available at\r\n          // https://firebase.google.com/docs/storage/web/handle-errors\r\n          switch (error.code) {\r\n            case 'storage/unauthorized':\r\n              // User doesn't have permission to access the object\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Unothorized', isLoading: false });\r\n              break;\r\n\r\n            case 'storage/canceled':\r\n              // User canceled the upload\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Storage Cancel', isLoading: false });\r\n              break;\r\n            case 'storage/unknown':\r\n              // Unknown error occurred, inspect error.serverResponse;\r\n              dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Unkonwn', isLoading: false });\r\n              break;\r\n          }\r\n        }, function () {\r\n          // Upload completed successfully, now we can get the download URL\r\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n            console.log('File available at', downloadURL);\r\n            uploadDonationImgOnly(dispatch, downloadURL, obj);\r\n          });\r\n        });\r\n    } else {\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: 'Please select your file', isLoading: false });\r\n    }\r\n  }\r\n}\r\n\r\nfunction uploadDonationImgOnly(dispatch, imgurl, obj) {\r\n  console.log(`donations/${obj.eventid}/${obj.uid}/${obj.id}`)\r\n  let donref = database.ref(`donations/${obj.eventid}/${obj.uid}/${obj.id}`);\r\n  let upobj = obj;\r\n  upobj['imgurl'] = imgurl;\r\n  upobj['imgurl-available'] = true;\r\n\r\n  donref.update(upobj, function (er) {\r\n    if (er) {\r\n\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: `Update details faild ${er}`, isLoading: false });\r\n    } else {\r\n      dispatch({ type: 'DONATION_RECIPT_UPDATING', error: '', isLoading: false });\r\n    }\r\n  });\r\n}\r\n\r\nexport function LoadAllUsersDonations(eventid) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: true });\r\n      const apiResponse = await donationApi.getAllDonations(eventid);\r\n      console.log(apiResponse)\r\n      const respJson = await apiResponse.json();\r\n      if (apiResponse.status === 200) {\r\n\r\n        dispatch({ type: 'DONATION_LOAD_ALL', arPending: respJson.pending_ar, arChanged: respJson.other_ar });\r\n      } else {\r\n\r\n        console.error(`Error:${respJson.msg}`)\r\n        dispatch({ type: 'DONATION_LOAD_ALL', arPending: respJson.pending_ar, arChanged: respJson.other_ar });\r\n      }\r\n\r\n\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: false });\r\n\r\n    } catch (error) {\r\n      console.log(`Error:${error}`)\r\n      dispatch({ type: 'DONATION_ALL_LOADING', isLoading: false });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateDonationState(obj) {\r\n  return async dispatch => {\r\n    console.log(JSON.stringify(obj))\r\n    const apiResponse = await donationApi.updateDonation(obj);\r\n    console.log(apiResponse)\r\n    const respJson = await apiResponse.json();\r\n    if (apiResponse.status === 200) {\r\n\r\n    }\r\n\r\n  }\r\n}","import { database } from '../../constants/firebase';\r\n\r\n\r\nexport function updateNotificationToken(uid) {\r\n  return async dispatch => {\r\n    let tokenref = database.ref(`user-notif-tokens/${uid}`);\r\n    const tokenr= await tokenref.once(\"value\");\r\n   let tokenobj= tokenr.val();\r\n    console.log(`Update token redux:${tokenobj.token}`)\r\n    dispatch({ type: 'NOTIF_TOKEN_UPDATE', token: tokenobj.token });\r\n  }\r\n}\r\n\r\nexport function updateNotifications(uid) {\r\n  return async dispatch => {\r\n    try {\r\n      let notif_topics_ref = database.ref(`notifications/topics`);\r\n      notif_topics_ref.once(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_topics_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_TOPIC_UPDATE', notif_topic: ar, notif_topic_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n        }\r\n      });\r\n\r\n      notif_topics_ref.on(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_topics_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_TOPIC_UPDATE', notif_topic: ar, notif_topic_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      let notif_private_ref = database.ref(`notifications/users/${uid}`);\r\n      notif_private_ref.once(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_private_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_USER_UPDATE', notif_private: ar, notif_private_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n\r\n\r\n      });\r\n      notif_private_ref.on(\"value\", async function (snap) {\r\n        if (snap.val() !== null) {\r\n          try {\r\n            let ar = Object.keys(snap.val()).map(i => snap.val()[i]);\r\n            const snap2 = await notif_private_ref.orderByChild('isseen').equalTo(false).once(\"value\");\r\n            let arseen = Object.keys(snap2.val()).map(i => snap2.val()[i]);\r\n            dispatch({ type: 'NOTIF_USER_UPDATE', notif_private: ar, notif_private_count: arseen.length });\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(`Error in notf load: ${error}`)\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { messaging,serverKey,database,topic } from '../constants/firebase';\r\n\r\n\r\nexport async function askForPermissioToReceiveNotifications(uid) {\r\n  try {\r\n    if(messaging !==null){\r\n\r\n    \r\n    messaging.requestPermission().then(function () {\r\n      console.log('Notification permission granted.');\r\n      \r\n      messaging.getToken().then(function(currentToken) {\r\n        if (currentToken) {\r\n          console.log(`Msg Token:`);\r\n          console.log(currentToken)\r\n  \r\n          updateUserToken(uid,currentToken);\r\n          subscribeForCommonNotifications(currentToken);\r\n\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No Instance ID token available. Request permission to generate one.');\r\n        }\r\n      }).catch(function(err) {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n      });\r\n    }).catch(function (err) {\r\n      console.log('Unable to get permission to notify.', err);\r\n    });\r\n  }\r\n  } catch (error) {\r\n    \r\n  }\r\n \r\n}\r\n\r\n\r\nexport async function TokenChange(uid) {\r\n  if(messaging!==null){\r\n    messaging.onTokenRefresh(function() {\r\n      messaging.getToken().then(function(refreshedToken) {\r\n        console.log('Token refreshed.');\r\n        updateUserToken(uid,refreshedToken)\r\n      }).catch(function(err) {\r\n        console.log('Unable to retrieve refreshed token ', err);\r\n        \r\n      });\r\n    });\r\n  }\r\n \r\n}\r\n\r\nexport async function updateUserToken(uid,token){\r\n\r\n\r\n  if(uid !== undefined){\r\n \r\n    let donref = database.ref(`user-notif-tokens/${uid}`);\r\n    let upobj = {};\r\n    upobj['uid'] = uid;\r\n    upobj['token'] = token;\r\n  \r\n    donref.update(upobj);\r\n  }\r\n \r\n}\r\n\r\nasync function subscribeForCommonNotifications(token) {\r\n  if(messaging!==null){\r\n    console.log(`Subcribe Global msg to:${token}`);\r\n    console.log(`${serverKey}`);\r\n     \r\n    return fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\r\n        timeout: 1200 * 1000,\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`key=${serverKey}`\r\n        }\r\n    });\r\n  }\r\n \r\n\r\n}\r\n\r\n\r\nexport async function updateNotificationState(notif){\r\n  if(notif !== undefined){\r\n    console.log(notif);\r\n    if(notif.istopic){\r\n      let donref = database.ref(`notifications/topics/${notif.id}`);\r\n      let upobj = {};\r\n      upobj['isseen'] = true;\r\n      donref.update(upobj);\r\n    }else{\r\n      let donref = database.ref(`notifications/users/${notif.uid}/${notif.id}`);\r\n      let upobj = {};\r\n      upobj['isseen'] = true;\r\n      donref.update(upobj);\r\n    }\r\n   \r\n  }\r\n \r\n}\r\n\r\n\r\nexport async function OnMessageListner(){\r\n  messaging.onMessage(function(payload) {\r\n    console.log('Message received. ', payload);\r\n   \r\n  });\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Button, Header, Icon, Segment, Statistic, Table, Image,Message } from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from \"prop-types\";\r\nimport imgcontributors from '../../styles/img/donator.png';\r\nimport * as commonFunctions from '../../../common';\r\n\r\nclass DashboardViewContainer extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n\r\n\r\n  componentDidMount = async () => {\r\n   \r\n    await this.props.loadCurrentEvent();\r\n    commonFunctions.askForPermissioToReceiveNotifications(this.props.uid);\r\n    commonFunctions.TokenChange(this.props.uid);\r\n    this.props.updateNotificationToken(this.props.uid);\r\n    this.props.updateNotifications(this.props.uid);\r\n    this.props.updateAppLiveInfo();\r\n    this.props.updateSelfDonations(this.props.liveEvent.id, this.props.uid);\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  handleDonationPress = () => {\r\n    this.context.router.history.push(`/donations`);\r\n  }\r\n\r\n\r\n\r\n  render = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Row>\r\n        <Col md={12}>\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n              {this.renderHeader()}\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              {this.renderRightSizeTop()}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n            <Message>\r\n   \r\n   <p>\r\n   සරණක් ඇවැසි ඔවුන් හට අපි සරණක් වෙමු !\r\n   </p>\r\n </Message>\r\n            <Image src={CurEvent['img-banner1']} centered />\r\n            <Message>\r\n   \r\n    <p>\r\n    ගියවර පැවැත්වූ තැඹිලි දානයේ මතක සටහන් කිහිපයක්\r\n    </p>\r\n  </Message>\r\n            \r\n              <Image src={CurEvent['img-banner2']} centered />\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              {this.renderRightSizeBottom()}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n    );\r\n  };\r\n\r\n\r\n  renderHeader = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Segment placeholder>\r\n        <Header icon>\r\n          <Row>\r\n            <Col sm={12} md={3}>\r\n              <Icon name='home' color='grey' />\r\n              {`${CurEvent.place}`}\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Image src={CurEvent['img-header']} size='small' centered />\r\n              {`${CurEvent.name}`}\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              <Icon name='calendar check outline' color='grey' />\r\n              {`${CurEvent.date}`}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br />\r\n              <Button color='red' onClick={()=> this.handleDonationPress()}>\r\n                Donate Us Now !\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n      </Segment>\r\n    )\r\n  }\r\n\r\n  renderRightSizeTop = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Table color={'blue'} >\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Target Amount\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-amount']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Current Expect\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-expect']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Recived\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value><NumberFormat value={CurEvent['total-recived']} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell >\r\n              Contributors\r\n</Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='small'>\r\n                <Statistic.Value>\r\n                  {CurEvent['total-contributors']}\r\n                  <Image src={imgcontributors} inline circular />\r\n\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              Members\r\n          </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='red' size='mini'>\r\n                <Statistic.Value>{this.props.liveinfo['users-all']}</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              Your Donations\r\n          </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='violet' size='mini' >\r\n                <Statistic.Value><NumberFormat value={this.props.currentdonation} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  renderRightSizeBottom = () => {\r\n    let CurEvent = this.props.liveEvent;\r\n    return (\r\n      <Table>\r\n        <Table.Header>\r\n          <Table.Row><Table.Cell>රෝගීන්ට ලබාදෙන දෑ</Table.Cell><Table.Cell></Table.Cell></Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>තැඹිලි ගෙඩි</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>1000</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>දෙළුම්</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>500</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Statistic color='orange' size='mini'>\r\n                <Statistic.Value>කොමඩු</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Statistic color='grey' size='mini'>\r\n                <Statistic.Value>500</Statistic.Value>\r\n              </Statistic>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default DashboardViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n//actions\r\nimport * as eventActions from '../../../redux/event/action';\r\nimport * as appActions from '../../../redux/app/action';\r\nimport * as donationActions from '../../../redux/donation/action';\r\nimport * as notifActions from '../../../redux/notifications/action';\r\n\r\n\r\n// The component we're mapping to\r\nimport DashboardView from './DashboardView';\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    uid:state.auth.user.id,\r\n    liveEvent:state.event.liveEvent,\r\n    liveinfo:state.app.liveinfo,\r\n    currentdonation:state.donation.currentdonation\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n    loadCurrentEvent:eventActions.loadCurrentEvent,\r\n    updateAppLiveInfo:appActions.updateAppLiveInfo,\r\n    updateSelfDonations:donationActions.updateSelfDonations,\r\n    updateNotifications:notifActions.updateNotifications,\r\n    updateNotificationToken:notifActions.updateNotificationToken\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardView);\r\n","import { database } from '../../constants/firebase';\r\n\r\n\r\nexport function updateAppLiveInfo() {\r\n  return async dispatch => {\r\n    let appliveinforef = database.ref(`app-live-info`);\r\n    appliveinforef.on(\"value\", function (snapshot) {\r\n      dispatch({ type: 'UPDATE_LIVE_INFO', liveinfo: snapshot.val() });\r\n\r\n    });\r\n  }\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Form, Message, List, Image, Table, Icon, Divider, Header, Label, Segment, Modal } from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\nimport BOCLogo from '../../styles/img/boc.jpg';\r\nimport bankIcon from '../../styles/img/bankicon.jpg';\r\n\r\n\r\nconst MSG_CREATE_SUCCESS = 'CREATE_S';\r\nconst MSG_CREATE_ERROR = 'CREATE';\r\n\r\nconst MSG_UPLOAD_REC_SUCCESS = 'UPLOAD_REC_S';\r\nconst MSG_UPLOAD_REC_ERROR = 'UPLOAD_REC';\r\n\r\nclass DonateViewContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      error: '',\r\n      error_type: '',\r\n      donation_id: '',\r\n      donation_save_file: null,\r\n      donation_save_amount: 0.0,\r\n      donation_update_file: null,\r\n      modal_upload_visible: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.loadCurrentEvent();\r\n    this.props.updateSelfDonationsList(this.props.liveEvent.id, this.props.uid);\r\n    if (this.props.user.user_type === 1) {\r\n      this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.isLoading_save === true && nextProps.isLoading_save === false) {\r\n      if (nextProps.saveError !== '') {\r\n        this._setMessage(MSG_CREATE_ERROR, nextProps.saveError, 4000);\r\n      } else {\r\n        this._setMessage(MSG_CREATE_SUCCESS, 'Success', 4000);\r\n      }\r\n    }\r\n    if (this.props.isReciptUploading === true && nextProps.isReciptUploading === false) {\r\n      if (nextProps.uploadError !== '') {\r\n        this._setMessage(MSG_UPLOAD_REC_ERROR, nextProps.uploadError, 4000);\r\n      } else {\r\n        this._setMessage(MSG_UPLOAD_REC_SUCCESS, 'Success', 4000);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _setMessage(methodtype, msg, time) {\r\n\r\n\r\n    this.setState({ error_type: methodtype, error: msg });\r\n    if (time === undefined) {\r\n      setTimeout(() => {\r\n        this.setState({ error_type: '', error: '' })\r\n      }, 2000);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({ error_type: '', error: '' })\r\n      }, time)\r\n    }\r\n\r\n    if (methodtype === MSG_CREATE_SUCCESS) {\r\n      this.clearForm(methodtype);\r\n    } else if (methodtype === MSG_UPLOAD_REC_SUCCESS) {\r\n      this.clearForm(methodtype);\r\n\r\n    }\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({ donation_save_file: null, donation_save_amount: 0.0, donation_update_file: null, modal_upload_visible: false })\r\n  }\r\n\r\n  makeDonation = () => {\r\n\r\n    if (this.state.donation_save_amount > 0) {\r\n\r\n      let obj = {};\r\n      obj['eventid'] = this.props.liveEvent.id;\r\n      obj['uid'] = this.props.uid;\r\n      obj['amt'] = this.state.donation_save_amount;\r\n      obj['img'] = this.state.donation_save_file;\r\n\r\n      console.log(this.state.donation_save_file)\r\n      this.props.saveDonation(obj);\r\n\r\n    } else {\r\n      this._setMessage(MSG_CREATE_ERROR, 'Please Enter your Amount', 3000);\r\n    }\r\n  }\r\n\r\n  updateDonationUser = () => {\r\n\r\n    let obj = {};\r\n    obj['eventid'] = this.props.liveEvent.id;\r\n    obj['uid'] = this.props.uid;\r\n    obj['img'] = this.state.donation_update_file;\r\n    obj['id'] = this.state.donation_id;\r\n\r\n    console.log(this.state.donation_update_file)\r\n    this.props.uploadDonationImgOnlyAction(obj);\r\n    if (this.props.user.user_type === 1) {\r\n      this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n    }\r\n  }\r\n\r\n  handleselectedFile = event => {\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n      donation_save_file: event.target.files[0]\r\n    });\r\n  }\r\n  handleselectedFileUpdate = event => {\r\n    console.log(event.target.files[0])\r\n    this.setState({\r\n      donation_update_file: event.target.files[0]\r\n    });\r\n  }\r\n\r\n\r\n  updateDonationStateUI = async(donid, state,uid) => {\r\n/*\r\nconst eventid = req.body.eventid;\r\n        const uid = req.body.uid;\r\n        const trnid = req.body.trnid;\r\n        const donstate = req.body.donstate;\r\n        const token = req.body.token;\r\n*/\r\n\r\n      let obj={};\r\n      obj['eventid']=this.props.liveEvent.id;\r\n      obj['uid']=uid;\r\n      obj['trnid']=donid;\r\n      obj['donstate']=state;\r\n      obj['token']=this.props.notif_token;\r\n      await this.props.updateDonationState(obj);    \r\n      if (this.props.user.user_type === 1) {\r\n        this.props.LoadAllUsersDonations(this.props.liveEvent.id);\r\n      }\r\n  }\r\n\r\n  render = () => {\r\n\r\n\r\n    let panes = [\r\n      { menuItem: 'Make Donation', render: () => this.renderDonation() },\r\n      { menuItem: 'History', render: () => this.renderPendingDonation() }\r\n    ]\r\n\r\n    if (this.props.user.user_type === 1) {\r\n      panes = [\r\n        { menuItem: 'Make Donation', render: () => this.renderDonation() },\r\n        { menuItem: 'History', render: () => this.renderPendingDonation() },\r\n        { menuItem: 'Pending', render: () => this.renderAprovesDonation() },\r\n        { menuItem: 'Approved', render: () => this.renderAlreadyApprovedDonation() }\r\n\r\n\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Tab menu={{ pointing: true }} panes={panes} />\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  renderPendingDonation = () => {\r\n    let showError = (this.state.error_type === MSG_UPLOAD_REC_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_UPLOAD_REC_SUCCESS && this.state.error !== '');\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\r\n        />\r\n        <Message\r\n          success\r\n          hidden={!showSuccess}\r\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\r\n        />\r\n\r\n\r\n        {this.renderUpdateDonationUser()}\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentdonations.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentdonations.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  renderDonation = () => {\r\n    let showError = (this.state.error_type === MSG_CREATE_ERROR && this.state.error !== '');\r\n    let showSuccess = (this.state.error_type === MSG_CREATE_SUCCESS && this.state.error !== '');\r\n    console.log(showSuccess)\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Message\r\n          hidden={!showError}\r\n          error\r\n          content={<div><Icon name='close' size='large' />{this.state.error}</div>}\r\n        />\r\n        <Message\r\n          success\r\n          hidden={!showSuccess}\r\n          content={<div><Icon name='thumbs up outline' size='large' />{'Thank you for your contribution.We`ll let you know once your payment verifed'}</div>}\r\n        />\r\n\r\n\r\n        <Form loading={this.props.isLoading_save} onSubmit={() => this.makeDonation()}>\r\n          <Message\r\n            icon='bullhorn'\r\n            header='ඔබගේ අවදානයට'\r\n            content={\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <p>ඔබගේ සියලු ආධාර මුදල් පහත සදහන් අපගේ බැංකු ගිණුම වෙත යොමු කොට එම රිසිට් පත / බැරපතෙහි පිටපතක්\r\n                මෙහි කරන මෙන් කාරුනිකව ඉල්ලා සිටිමු. </p>\r\n                  <b>ඔබ බලාපොරොත්තු වන ආධාර මුදලද මෙහි දැමිය හැකි අතර, එම අවස්තාවේදී රිසිට් පත Upload කිරීම අවශය නොවේ,මුදල් බැංකුවට බැර කල පසු, History ටැබය වෙතට ගොස් එය අදාල ස්ථානයේ Upload කරන්න.</b>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <List horizontal size={'huge'}>\r\n                    <List.Item>\r\n                      <Image avatar src={BOCLogo} />\r\n                      <List.Content>\r\n                        <List.Header>ලංකා බැංකුව - බම්බලපිටිය</List.Header>\r\n                        <List.Header>BOC - Bambalapitiya</List.Header>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <Image avatar src={bankIcon} />\r\n                      <List.Content>\r\n\r\n                        Account No\r\n                        <List.Header>0081625372</List.Header>\r\n                      </List.Content>\r\n                    </List.Item>\r\n\r\n                  </List>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n\r\n          <Form.Input label='Payment Reciept'\r\n            type='file'\r\n            accept=\"image/png, image/jpeg , application/pdf\"\r\n            onChange={this.handleselectedFile} />\r\n\r\n          <Form.Field>\r\n            <label>Amount</label>\r\n            <NumberFormat thousandSeparator={true} prefix={'රු '} value={this.state.donation_save_amount}\r\n              onValueChange={(values) => {\r\n                const { formattedValue, value } = values;\r\n                // formattedValue = $2,223\r\n                // value ie, 2223\r\n                this.setState({ donation_save_amount: value })\r\n              }}\r\n            />\r\n          </Form.Field>\r\n          <Divider hidden />\r\n          <Form.Button primary>Submit</Form.Button>\r\n        </Form>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n  hideUploadModal = () => {\r\n    this.setState({\r\n      modal_upload_visible: false,\r\n      donation_id: ''\r\n    });\r\n  }\r\n\r\n  showUploadModal = (trnid) => {\r\n    console.log(`trnid:${trnid}`);\r\n    this.setState({\r\n      modal_upload_visible: true,\r\n      donation_update_file: null,\r\n      donation_id: trnid\r\n    });\r\n  }\r\n\r\n  showDonUrl = (url) => {\r\n    window.open(url, \"_blank\")\r\n  }\r\n\r\n  renderUpdateDonationUser = () => {\r\n\r\n\r\n    return (\r\n      <Modal open={this.state.modal_upload_visible}\r\n        onClose={() => this.hideUploadModal()}\r\n        centered={false}\r\n        size={'mini'}\r\n        closeIcon\r\n      >\r\n\r\n        <Modal.Header>Upload Your Payment Receipt</Modal.Header>\r\n        <Modal.Content >\r\n          <Modal.Description>\r\n\r\n            <Form loading={this.props.isReciptUploading} onSubmit={() => this.updateDonationUser()}>\r\n\r\n              <Form.Input label='Upload your Payment Reciept'\r\n                type='file'\r\n                accept=\"image/png, image/jpeg , application/pdf\"\r\n                onChange={this.handleselectedFileUpdate}\r\n              />\r\n              <Form.Button primary>Update</Form.Button>\r\n            </Form>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='red' onClick={() => this.hideUploadModal()}>\r\n             cancel\r\n      </Button>\r\n\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n\r\n  renderAprovesDonation = () => {\r\n\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n       {this.renderUpdateDonationUser()}\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Member</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentDonations_All_Pending !== undefined && this.props.currentDonations_All_Pending.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found Yet for Approve!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentDonations_All_Pending !== undefined && this.props.currentDonations_All_Pending.length>0 && this.props.currentDonations_All_Pending.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Header as='h4' image>\r\n                      <Image src={don.user.img} rounded size='mini' />\r\n                      <Header.Content>\r\n                        {don.user.fname}\r\n                        <Header.Subheader> {don.user.lname}</Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n\r\n                  </Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                  <Table.Cell warning>\r\n                    {(don['donation-state'] === 0) && (\r\n                      <Segment>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 1,don.user.id) }} color='green'>Approve</Button>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 2,don.user.id) }} color='red'>Cancel</Button>\r\n                      </Segment>\r\n\r\n                    )}\r\n                    {(don['donation-state'] === 1 || don['donation-state'] === 2) && (\r\n                      <Button onClick={() => { this.updateDonationStateUI(don.id, 0,don.user.id) }} color='orange'>Reset</Button>\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n  renderAlreadyApprovedDonation = () => {\r\n\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n             \r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Date</Table.HeaderCell>\r\n              <Table.HeaderCell>Member</Table.HeaderCell>\r\n              <Table.HeaderCell>Payment</Table.HeaderCell>\r\n              <Table.HeaderCell>Reciept</Table.HeaderCell>\r\n              <Table.HeaderCell>Statues</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {this.props.currentDonations_All_changed!== undefined && this.props.currentDonations_All_changed.length>0 && this.props.currentDonations_All_changed.length === 0 && (\r\n\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Payment Records Found Yet for Approve!`}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n            )}\r\n\r\n            {this.props.currentDonations_All_changed!== undefined && this.props.currentDonations_All_changed.map(function (don, i) {\r\n              let date1 = new Date(don.crdate);\r\n              console.log(don)\r\n              return (\r\n                <Table.Row key={`his${i}`}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Header as='h4' image>\r\n                      <Image src={don.user.img} rounded size='mini' />\r\n                      <Header.Content>\r\n                        {don.user.fname}\r\n                        <Header.Subheader> {don.user.lname}</Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n\r\n                  </Table.Cell>\r\n                  <Table.Cell><NumberFormat value={don.amount} displayType={'text'} thousandSeparator={true} prefix={'රු '} /></Table.Cell>\r\n\r\n                  <Table.Cell>\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available']) && (\r\n                      <Label as='a' content='View' icon='eye' onClick={() => { this.showDonUrl(don.imgurl) }} />\r\n                    )}\r\n                    {(don['donation-state'] !== 2 && don['imgurl-available'] === false) && (\r\n                      <Label as='a' content='Upload your Reciept' icon='cloud upload' onClick={() => { this.showUploadModal(don.id) }} />\r\n\r\n                    )}\r\n\r\n                  </Table.Cell>\r\n\r\n                  {(don['donation-state'] === 0) && (\r\n                    <Table.Cell warning>\r\n                      <Icon name='warning sign' />\r\n                      Not Verified\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 1) && (\r\n                    <Table.Cell positive>\r\n                      <Icon name='checkmark' />\r\n                      Approved\r\n                      </Table.Cell>\r\n                  )}\r\n                  {(don['donation-state'] === 2) && (\r\n                    <Table.Cell negative>\r\n                      <Icon name='close' />\r\n                      Cancelled\r\n                      </Table.Cell>\r\n                  )}\r\n\r\n                  <Table.Cell warning>\r\n                    {(don['donation-state'] === 0) && (\r\n                      <Segment>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 1) }} color='green'>Approve</Button>\r\n                        <Button onClick={() => { this.updateDonationStateUI(don.id, 2) }} color='red'>Cancel</Button>\r\n                      </Segment>\r\n\r\n                    )}\r\n                    {(don['donation-state'] === 1 || don['donation-state'] === 2) && (\r\n                      <Button onClick={() => { this.updateDonationStateUI(don.id, 0) }} color='orange'>Reset</Button>\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n\r\n          </Table.Body>\r\n\r\n\r\n        </Table>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default DonateViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport DonateView from './DonateView';\r\n\r\n//Actions\r\nimport * as eventActions from '../../../redux/event/action';\r\nimport * as DonationActions from '../../../redux/donation/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n    uid:state.auth.user.id,\r\n    user:state.auth.user,\r\n    isLoading_save:state.donation.isLoading,\r\n    saveError:state.donation.saveError,\r\n    liveEvent:state.event.liveEvent,\r\n    currentdonations:state.donation.currentdonations,\r\n    isReciptUploading:state.donation.isReciptUploading,\r\n    uploadError:state.donation.uploadError,\r\n    currentDonations_All_Pending:state.donation.currentDonations_All_Pending,\r\n    currentDonations_All_changed:state.donation.currentDonations_All_changed,\r\n    notif_token:state.notifications.notif_token\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n    loadCurrentEvent:eventActions.loadCurrentEvent,\r\n    saveDonation:DonationActions.saveDonation,\r\n    updateSelfDonationsList:DonationActions.updateSelfDonationsList,\r\n    uploadDonationImgOnlyAction:DonationActions.uploadDonationImgOnlyAction,\r\n    LoadAllUsersDonations:DonationActions.LoadAllUsersDonations,\r\n    updateDonationState:DonationActions.updateDonationState\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DonateView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\nclass TestViewContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  clickButton = () => {\r\n    this.props.multiplyValue(this.state.value);\r\n  }\r\n\r\n\r\n  render = () => {\r\n    return (\r\n      <Row>\r\n        <Col sm={12}>\r\n          <Container>\r\n            <Segment>\r\n\r\n              <h2>Terms and Conditions for Sathkara</h2>\r\n              <h3>Introduction</h3>\r\n\r\n              These Website Standard Terms and Conditions written on this webpage shall manage your use of our website, Sathkara App accessible at http://sathkara-bb902.firebaseapp.com.\r\n              \r\n              These Terms will be applied fully and affect to your use of this Website. By using this Website, you agreed to accept all terms and conditions written in here. You must not use this Website if you disagree with any of these Website Standard Terms and Conditions. These Terms and Conditions have been generated over at the Terms And Conditions Template website.\r\n              \r\n              Minors or people below 18 years old are not allowed to use this Website.\r\n              Intellectual Property Rights\r\n              \r\n              Other than the content you own, under these Terms, Sathkara and/or its licensors own all the intellectual property rights and materials contained in this Website.\r\n              \r\n              You are granted limited license only for purposes of viewing the material contained on this Website.\r\n              Restrictions\r\n              \r\n              You are specifically restricted from all of the following:\r\n              \r\n                  publishing any Website material in any other media;\r\n                  selling, sublicensing and/or otherwise commercializing any Website material;\r\n                  publicly performing and/or showing any Website material;\r\n                  using this Website in any way that is or may be damaging to this Website;\r\n                  using this Website in any way that impacts user access to this Website;\r\n                  using this Website contrary to applicable laws and regulations, or in any way may cause harm to the Website, or to any person or business entity;\r\n                  engaging in any data mining, data harvesting, data extracting or any other similar activity in relation to this Website;\r\n                  using this Website to engage in any advertising or marketing.\r\n              \r\n              Certain areas of this Website are restricted from being access by you and Sathkara may further restrict access by you to any areas of this Website, at any time, in absolute discretion. Any user ID and password you may have for this Website are confidential and you must maintain confidentiality as well.\r\n              Your Content\r\n              \r\n              In these Website Standard Terms and Conditions, \"Your Content\" shall mean any audio, video text, images or other material you choose to display on this Website. By displaying Your Content, you grant Sathkara a non-exclusive, worldwide irrevocable, sub licensable license to use, reproduce, adapt, publish, translate and distribute it in any and all media.\r\n              \r\n              Your Content must be your own and must not be invading any third-party’s rights. Sathkara reserves the right to remove any of Your Content from this Website at any time without notice.\r\n              Your Privacy\r\n              \r\n              Please read our Privacy Policy.\r\n              No warranties\r\n              \r\n              This Website is provided \"as is,\" with all faults, and Sathkara express no representations or warranties, of any kind related to this Website or the materials contained on this Website. Also, nothing contained on this Website shall be interpreted as advising you.\r\n              Limitation of liability\r\n              \r\n              In no event shall Sathkara, nor any of its officers, directors and employees, shall be held liable for anything arising out of or in any way connected with your use of this Website whether such liability is under contract.  Sathkara, including its officers, directors and employees shall not be held liable for any indirect, consequential or special liability arising out of or in any way related to your use of this Website.\r\n              Indemnification\r\n              \r\n              You hereby indemnify to the fullest extent Sathkara from and against any and/or all liabilities, costs, demands, causes of action, damages and expenses arising in any way related to your breach of any of the provisions of these Terms.\r\n              Severability\r\n              \r\n              If any provision of these Terms is found to be invalid under any applicable law, such provisions shall be deleted without affecting the remaining provisions herein.\r\n              Variation of Terms\r\n              \r\n              Sathkara is permitted to revise these Terms at any time as it sees fit, and by using this Website you are expected to review these Terms on a regular basis.\r\n              Assignment\r\n              \r\n              The Sathkara is allowed to assign, transfer, and subcontract its rights and/or obligations under these Terms without any notification. However, you are not allowed to assign, transfer, or subcontract any of your rights and/or obligations under these Terms.\r\n              Entire Agreement\r\n              \r\n              These Terms constitute the entire agreement between Sathkara and you in relation to your use of this Website, and supersede all prior agreements and understandings.\r\n              Governing Law & Jurisdiction\r\n              \r\n              These Terms will be governed by and interpreted in accordance with the laws of the State of lk, and you submit to the non-exclusive jurisdiction of the state and federal courts located in lk for the resolution of any disputes.\r\n              \r\n              \r\n      </Segment>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default TestViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport TermsView from './TermsView';\r\n\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n \r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TermsView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Message, Table, Icon, Modal, Label } from 'semantic-ui-react';\r\nimport * as commonFunctions from '../../../common';\r\n\r\nclass NotifViewContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      modal_msg_visible: false,\r\n      modal_msg: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.props.updateNotifications(this.props.uid);\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  showMsg = (key,notif) => {\r\n    this.setState({ modal_msg_visible: true, modal_msg: notif });\r\n    if (!notif.isseen) {\r\n         \r\n        commonFunctions.updateNotificationState(notif);\r\n    }\r\n  }\r\n\r\n  hideMsgModal = () => {\r\n    this.setState({ modal_msg_visible: false, modal_msg: {} });\r\n  }\r\n\r\n\r\n  render = () => {\r\n\r\n    let panes = [\r\n      { menuItem: 'Private', render: () => this.renderPrivateMsg() },\r\n      { menuItem: 'Public', render: () => this.renderPublicMsg() }\r\n    ]\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Tab menu={{ pointing: true }} panes={panes} />\r\n            {this.renderMsgModal()}\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n  renderPrivateMsg = () => {\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Table celled>\r\n          <Table.Body>\r\n            {this.props.notif_private.length === 0 && (\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Messages !`}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n            {this.props.notif_private.map(function (notif, i) {\r\n              let date1 = new Date(notif.date);\r\n              return (\r\n                <Table.Row key={`notifP_${i}`} active={!notif.isseen}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>{notif.title}</Table.Cell>\r\n                  <Table.Cell>\r\n                    {(notif.isseen) && (\r\n                      <Label as='a' content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                    {(!notif.isseen) && (\r\n                      <Label as='a' color={'blue'} content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n          </Table.Body>\r\n        </Table>\r\n      </Tab.Pane>\r\n    )\r\n  }\r\n\r\n  renderPublicMsg = () => {\r\n    return (\r\n      <Tab.Pane attached={false}>\r\n        <Table celled>\r\n          <Table.Body>\r\n            {this.props.notif_topic.length === 0 && (\r\n              <Table.Row key={`first`}>\r\n                <Table.Cell>{` No Messages !`}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n            {this.props.notif_topic.map(function (notifo, i) {\r\n               let notif=notifo;\r\n               notif['istopic']=true;\r\n              let date1 = new Date(notif.date);\r\n             \r\n              return (\r\n                <Table.Row key={`notifG_${i}`} active={!notif.isseen}>\r\n                  <Table.Cell>{date1.toLocaleString()}</Table.Cell>\r\n                  <Table.Cell>{notif.title}</Table.Cell>\r\n                  <Table.Cell>{``}</Table.Cell>\r\n                  <Table.Cell>\r\n                    {(notif.isseen) && (\r\n                      <Label as='a' content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                    {(!notif.isseen) && (\r\n                      <Label as='a' color={'blue'} content='Read' icon='eye' onClick={() => { this.showMsg(i,notif) }} />\r\n                    )}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            }.bind(this))}\r\n          </Table.Body>\r\n        </Table>\r\n      </Tab.Pane>\r\n    )\r\n  }\r\n\r\n  renderMsgModal = () => {\r\n    let msg = this.state.modal_msg;\r\n    return (\r\n      <Modal open={this.state.modal_msg_visible}\r\n        onClose={() => this.hideMsgModal()}\r\n        centered={false}\r\n        size={'mini'}\r\n\r\n      >\r\n\r\n        <Modal.Header>{msg.title}</Modal.Header>\r\n        <Modal.Content >\r\n         \r\n            <p>{msg.body}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='blue' onClick={() => this.hideMsgModal()}>\r\n            <Icon name='checkmark' /> Ok\r\n      </Button>\r\n\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default NotifViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport NotifView from './NotifView';\r\n\r\n//Actions\r\nimport * as notifActions from '../../../redux/notifications/action';\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n  uid:state.auth.user.id,\r\n  notif_private_count: state.notifications.notif_private_count,\r\n  notif_topic_count: state.notifications.notif_topic_count,\r\n  notif_private: state.notifications.notif_private,\r\n  notif_topic: state.notifications.notif_topic\r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  updateNotifications:notifActions.updateNotifications,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotifView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Tab, Button, Message, Table, Icon, Modal, Label, Segment,List,Image } from 'semantic-ui-react';\r\n\r\nclass ContactViewContainer extends Component {\r\n\r\n  static contextTypes = {\r\n    router: PropTypes.object,\r\n\r\n  };\r\n  constructor(props) {\r\n    super();\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n  showAccount = (str)=>{\r\n    if(str==='B'){\r\n     \r\n     window.open('https://www.facebook.com/buwaneka.sumanasekara', '_blank');\r\n     //window.location = 'https://www.facebook.com/buwaneka.sumanasekara'\r\n    }else{\r\n     \r\n      window.open('https://www.facebook.com/indika.sahan', '_blank');\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ size: 8, offset: 2 }}>\r\n            <Segment basic>\r\n              <List size={'massive'}>\r\n              <List.Item >\r\n                  <Image avatar src='https://scontent.fcmb2-1.fna.fbcdn.net/v/t1.0-1/p160x160/44088694_2200849493282891_6667100037345968128_n.jpg?_nc_cat=108&_nc_ht=scontent.fcmb2-1.fna&oh=148d1cec40ad891d409312ede3dd7b06&oe=5C9ECFDB' />\r\n                  <List.Content>\r\n                    <List.Header >Buwaneka Sumanasekara</List.Header>\r\n                    <List.Description>\r\n                    <p>Email: <a href=\"mailto:buwanekasumanasekara@gmail.com\">buwanekasumanasekara@gmail.com</a> </p>\r\n                    Contact No: +94776161689\r\n        </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                \r\n                <List.Item >\r\n                  <Image avatar src='https://scontent.fcmb2-1.fna.fbcdn.net/v/t1.0-1/p160x160/46744463_2221268391219426_7922833957983354880_n.jpg?_nc_cat=101&_nc_ht=scontent.fcmb2-1.fna&oh=98c9905358ef67fb92969eeb5c24f21c&oe=5CA8AF5A' />\r\n                  <List.Content>\r\n                    <List.Header >Sahan</List.Header>\r\n                    <List.Description>\r\n                    <p>Email: <a href=\"mailto:indikasahan2010@gmail.com\">indikasahan2010@gmail.com</a> </p>\r\n                    Contact No: +94773355726\r\n        </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                \r\n              </List>\r\n            </Segment>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Export Component ==================================================================== */\r\nexport default ContactViewContainer;\r\n","/**\r\n * Test Screen Container\r\n */\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n// The component we're mapping to\r\nimport ContactView from './ContactView';\r\n\r\n//Actions\r\n\r\n\r\n\r\n// What data from the store shall we send to the component?\r\nconst mapStateToProps = state => ({\r\n \r\n});\r\n\r\n// Any actions to map to the component?\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactView);\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport {\r\n  Login,\r\n  App,\r\n  Test,\r\n  Dashboard,\r\n  Donation,\r\n  Terms,\r\n  Notifications,\r\n  ContactUs\r\n} from '../_Views';\r\n\r\n\r\nconst Routes = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/Auth' component={Login} />\r\n      <Route exact path='/Auth/:screen' component={Login} />\r\n      <Route path='/Terms' component={Terms} />\r\n      <App>\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route exact path='/donations' component={Donation} />\r\n          <Route exact path='/notifications' component={Notifications} />\r\n          <Route exact path='/contact-us' component={ContactUs} />\r\n   \r\n          \r\n          <Route path='/:page' component={Test} />\r\n        </Switch>\r\n      </App>\r\n    </Switch>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default Routes\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    isAuthenticated: false,\r\n    isAuthChecking: false,\r\n    user: {},\r\n    message: { msg_type: '', msg_txt: '' }\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"AUTH_REGISTER\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_LOGIN\":\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case \"AUTH_CHECKING_START\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_CHECKING\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.user,\r\n                isLoading: false\r\n            };\r\n        case \"AUTH_LOGOUT_START\":\r\n            return {\r\n                ...state,\r\n                isAuthChecking: action.isLoading\r\n            };\r\n        case \"AUTH_FAILD\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                isLoading: false,\r\n                isAuthChecking:false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveinfo:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"UPDATE_LIVE_INFO\":\r\n            return {\r\n                ...state,\r\n                liveinfo: action.liveinfo\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    liveEvent:{}\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"EVENT_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case \"EVENT_SET\":\r\n            return {\r\n                ...state,\r\n                liveEvent: action.liveEvent\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    isLoading: false,\r\n    saveError: '',\r\n    currentdonation: 0,\r\n    currentdonations: [],\r\n    isReciptUploading: false,\r\n    uploadError: '',\r\n    currentDonations_All_Pending: [],\r\n    currentDonations_All_changed: [],\r\n    isAllDonationsLoading: false\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"DONATION_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading,\r\n                saveError: action.error\r\n            };\r\n        case \"DONATION_RECIPT_UPDATING\":\r\n            return {\r\n                ...state,\r\n                isReciptUploading: action.isLoading,\r\n                uploadError: action.error\r\n            };\r\n        case \"DONATION_UPDATE_USER_TOTAL\":\r\n            return {\r\n                ...state,\r\n                currentdonation: action.currentdonation\r\n            };\r\n        case \"DONATION_UPDATE_USER_DON\":\r\n            return {\r\n                ...state,\r\n                currentdonations: action.currentdonations\r\n            };\r\n        case \"DONATION_ALL_LOADING\":\r\n            return {\r\n                ...state,\r\n                isAllDonationsLoading: action.isLoading,\r\n\r\n            };\r\n        case \"DONATION_LOAD_ALL\":\r\n            return {\r\n                ...state,\r\n                currentDonations_All_Pending: action.arPending,\r\n                currentDonations_All_changed: action.arChanged\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport const initialState = {\r\n    notif_token:'',\r\n    notif_topic_count:0,\r\n    notif_private_count:0,\r\n    notif_topic:[],\r\n    notif_private:[]\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"NOTIF_TOPIC_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_topic:action.notif_topic,\r\n                notif_topic_count:action.notif_topic_count,\r\n            };\r\n            case \"NOTIF_USER_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_private:action.notif_private,\r\n                notif_private_count:action.notif_private_count,\r\n            };  \r\n            case \"NOTIF_TOKEN_UPDATE\":\r\n            return {\r\n                ...state,\r\n                notif_token:action.token\r\n            };    \r\n            \r\n          \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth/reducer';\r\nimport app from './app/reducer';\r\nimport event from './event/reducer';\r\nimport donation from './donation/reducer';\r\nimport notifications from './notifications/reducer'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    app,\r\n    event,\r\n    donation,\r\n    notifications\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './routes/Routes';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './configureStore';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst store = configureStore();\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>  \r\n    <Routes/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);","import { compose,createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './redux';\r\n\r\nexport default function configureStore(initialState) {\r\n   \r\n    \r\n    const reduxLogger = createLogger({predicate: (getState, action) => true});\r\n    let middlewares = [thunk]\r\n   \r\n    if(true){\r\n        middlewares = [...middlewares,reduxLogger];\r\n    }\r\n    return createStore(\r\n        \r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares)),\r\n    );\r\n\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.b1043f85.jpg\";"],"sourceRoot":""}